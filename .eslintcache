[{"/Users/solorzke/Documents/Developer/express-hub/src/App.js":"1","/Users/solorzke/Documents/Developer/express-hub/src/index.js":"2","/Users/solorzke/Documents/Developer/express-hub/src/pages/Index.js":"3","/Users/solorzke/Documents/Developer/express-hub/src/data/Cookie.js":"4","/Users/solorzke/Documents/Developer/express-hub/src/pages/Home.js":"5","/Users/solorzke/Documents/Developer/express-hub/src/components/Wrapper/Wrapper.js":"6","/Users/solorzke/Documents/Developer/express-hub/src/components/Drawer/Drawer.js":"7","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Index.js":"8","/Users/solorzke/Documents/Developer/express-hub/src/data/Config.js":"9","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Client.js":"10","/Users/solorzke/Documents/Developer/express-hub/src/components/Toast/Toast.js":"11","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Order.js":"12","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Input.js":"13","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Horizontal.js":"14","/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Index.js":"15","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Files.js":"16","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Items.js":"17","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Prompt.js":"18","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Submit.js":"19","/Users/solorzke/Documents/Developer/express-hub/src/components/Receipt/Receipt.js":"20","/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Confirm.js":"21","/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Back.js":"22","/Users/solorzke/Documents/Developer/express-hub/src/pages/404.js":"23","/Users/solorzke/Documents/Developer/express-hub/src/components/TextEditor/Editor.js":"24","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Search.js":"25","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Select.js":"26","/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Client.js":"27","/Users/solorzke/Documents/Developer/express-hub/src/components/Files/File.js":"28","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Card.js":"29","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Order.js":"30","/Users/solorzke/Documents/Developer/express-hub/src/components/Files/Item.js":"31","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Field.js":"32","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Empty.js":"33","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/UpdateField.js":"34","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Loading.js":"35","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/UpdateItems.js":"36","/Users/solorzke/Documents/Developer/express-hub/src/data/InputTypes.js":"37","/Users/solorzke/Documents/Developer/express-hub/src/pages/Search/Index.js":"38","/Users/solorzke/Documents/Developer/express-hub/src/pages/Settings/Index.js":"39","/Users/solorzke/Documents/Developer/express-hub/src/pages/ForgotPassword.js":"40","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Index.js":"41","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/LoadingPage.js":"42","/Users/solorzke/Documents/Developer/express-hub/src/data/TableHeadings.js":"43","/Users/solorzke/Documents/Developer/express-hub/src/data/Dates.js":"44","/Users/solorzke/Documents/Developer/express-hub/src/components/Paths/Paths.js":"45","/Users/solorzke/Documents/Developer/express-hub/src/data/Location.js":"46","/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Form.js":"47","/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Index.js":"48","/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Quote.js":"49","/Users/solorzke/Documents/Developer/express-hub/src/components/Spreadsheet/Spreadsheet.js":"50","/Users/solorzke/Documents/Developer/express-hub/src/pages/Home/Index.js":"51","/Users/solorzke/Documents/Developer/express-hub/src/components/Nav/Navbar.js":"52","/Users/solorzke/Documents/Developer/express-hub/src/components/Button/Button.js":"53","/Users/solorzke/Documents/Developer/express-hub/src/components/Banner/Banner.js":"54","/Users/solorzke/Documents/Developer/express-hub/src/components/Footer/Copyright.js":"55","/Users/solorzke/Documents/Developer/express-hub/src/components/Footer/Navigation.js":"56","/Users/solorzke/Documents/Developer/express-hub/src/pages/Home/About.js":"57","/Users/solorzke/Documents/Developer/express-hub/src/pages/Home/Contact.js":"58"},{"size":2898,"mtime":1616621132401,"results":"59","hashOfConfig":"60"},{"size":236,"mtime":1613017589567,"results":"61","hashOfConfig":"60"},{"size":5030,"mtime":1616446536238,"results":"62","hashOfConfig":"60"},{"size":803,"mtime":1610675000910,"results":"63","hashOfConfig":"60"},{"size":1203,"mtime":1611934783128,"results":"64","hashOfConfig":"60"},{"size":917,"mtime":1616279686086,"results":"65","hashOfConfig":"60"},{"size":2757,"mtime":1616260094052,"results":"66","hashOfConfig":"60"},{"size":1586,"mtime":1616448000933,"results":"67","hashOfConfig":"60"},{"size":369,"mtime":1610665560430,"results":"68","hashOfConfig":"60"},{"size":7163,"mtime":1616452165661,"results":"69","hashOfConfig":"60"},{"size":472,"mtime":1611371613301,"results":"70","hashOfConfig":"60"},{"size":8781,"mtime":1616452748101,"results":"71","hashOfConfig":"60"},{"size":408,"mtime":1613506470896,"results":"72","hashOfConfig":"60"},{"size":378,"mtime":1614984929511,"results":"73","hashOfConfig":"60"},{"size":4520,"mtime":1616213568869,"results":"74","hashOfConfig":"60"},{"size":5050,"mtime":1616463580447,"results":"75","hashOfConfig":"60"},{"size":8556,"mtime":1616459636798,"results":"76","hashOfConfig":"60"},{"size":1541,"mtime":1611953593440,"results":"77","hashOfConfig":"60"},{"size":5747,"mtime":1616460880582,"results":"78","hashOfConfig":"60"},{"size":4206,"mtime":1616215423310,"results":"79","hashOfConfig":"60"},{"size":809,"mtime":1616461142537,"results":"80","hashOfConfig":"60"},{"size":657,"mtime":1614270603274,"results":"81","hashOfConfig":"60"},{"size":139,"mtime":1611862629526,"results":"82","hashOfConfig":"60"},{"size":1231,"mtime":1616452523071,"results":"83","hashOfConfig":"60"},{"size":1369,"mtime":1616215575530,"results":"84","hashOfConfig":"60"},{"size":954,"mtime":1616213615246,"results":"85","hashOfConfig":"60"},{"size":9647,"mtime":1616463159125,"results":"86","hashOfConfig":"60"},{"size":478,"mtime":1616463106929,"results":"87","hashOfConfig":"60"},{"size":639,"mtime":1616453383273,"results":"88","hashOfConfig":"60"},{"size":12309,"mtime":1616463294438,"results":"89","hashOfConfig":"60"},{"size":2063,"mtime":1616461087872,"results":"90","hashOfConfig":"60"},{"size":4069,"mtime":1616451905595,"results":"91","hashOfConfig":"60"},{"size":297,"mtime":1613087581957,"results":"92","hashOfConfig":"60"},{"size":9032,"mtime":1616347472844,"results":"93","hashOfConfig":"60"},{"size":118,"mtime":1615225224585,"results":"94","hashOfConfig":"60"},{"size":19436,"mtime":1616463549679,"results":"95","hashOfConfig":"60"},{"size":4603,"mtime":1616372983357,"results":"96","hashOfConfig":"60"},{"size":5460,"mtime":1616450964984,"results":"97","hashOfConfig":"60"},{"size":4820,"mtime":1616375923480,"results":"98","hashOfConfig":"60"},{"size":4110,"mtime":1615945059958,"results":"99","hashOfConfig":"60"},{"size":7186,"mtime":1616450861193,"results":"100","hashOfConfig":"60"},{"size":425,"mtime":1616215458151,"results":"101","hashOfConfig":"60"},{"size":3416,"mtime":1616363522377,"results":"102","hashOfConfig":"60"},{"size":864,"mtime":1616215965858,"results":"103","hashOfConfig":"60"},{"size":706,"mtime":1615913733033,"results":"104","hashOfConfig":"60"},{"size":3006,"mtime":1615993247049,"results":"105","hashOfConfig":"60"},{"size":7689,"mtime":1616462359216,"results":"106","hashOfConfig":"60"},{"size":7245,"mtime":1616448259907,"results":"107","hashOfConfig":"60"},{"size":6018,"mtime":1616376040040,"results":"108","hashOfConfig":"60"},{"size":6693,"mtime":1616450694514,"results":"109","hashOfConfig":"60"},{"size":9070,"mtime":1616618816677,"results":"110","hashOfConfig":"60"},{"size":590,"mtime":1616622087250,"results":"111","hashOfConfig":"60"},{"size":195,"mtime":1616614652391,"results":"112","hashOfConfig":"60"},{"size":1188,"mtime":1616614920469,"results":"113","hashOfConfig":"60"},{"size":544,"mtime":1616621968092,"results":"114","hashOfConfig":"60"},{"size":1790,"mtime":1616618711504,"results":"115","hashOfConfig":"60"},{"size":5313,"mtime":1616620907382,"results":"116","hashOfConfig":"60"},{"size":5596,"mtime":1616621854558,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rqwsr9",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"129"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"165"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"135"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/solorzke/Documents/Developer/express-hub/src/App.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/index.js",[],["255","256"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Index.js",["257"],"import React, { useEffect, useState } from 'react';\nimport Logo from '../teloentrego.png';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { Config } from '../data/Config';\nimport { Cookie } from '../data/Cookie';\nimport '../css/login.css';\n\nconst Index = () => {\n\tconst [ progress, setProgress ] = useState(false);\n\tconst [ area, setArea ] = useState('login');\n\n\tuseEffect(() => {\n\t\t//Initialize Firebase app if it hasn't already\n\t\tfirebase.apps.length === 0 ? firebase.initializeApp(Config) : firebase.app();\n\t});\n\n\tconst authenticate = async (e) => {\n\t\te.preventDefault();\n\t\tsetProgress(true);\n\t\tlet email = document.getElementById('email').value;\n\t\tlet password = document.getElementById('password').value;\n\t\ttry {\n\t\t\tconst user = await firebase.auth().signInWithEmailAndPassword(email, password);\n\t\t\tconst store = await firebase.firestore().collection('users').doc(user.user.uid).get();\n\t\t\tCookie.setCookie('fname', store.data().fname);\n\t\t\tCookie.setCookie('uid', user.user.uid);\n\t\t\tsetProgress(false);\n\t\t\twindow.location.href = '/new-order';\n\t\t} catch (error) {\n\t\t\tsetProgress(false);\n\t\t\talert(error.message);\n\t\t}\n\t};\n\n\tconst onPasswordReset = (setFinish) => {\n\t\tconst email = document.getElementById('email-for-request').value;\n\t\t//Send password reset request here\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.sendPasswordResetEmail(email)\n\t\t\t.then(() => {\n\t\t\t\tconsole.log('> Firebase: Password reset request sent to the email associated with the account');\n\t\t\t\tsetFinish(true);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(\"> Firebase: Password reset request couldn't be sent.\");\n\t\t\t\tsetFinish(false);\n\t\t\t\talert('Password request failed. Check your email address and type it again.');\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"login login-body\">\n\t\t\t<main className=\"login-login-container\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-lg text-center message-box\">\n\t\t\t\t\t\t\t<img src={Logo} className=\"logo-container\" />\n\t\t\t\t\t\t\t<h2 className=\"pt-5 text-center jo-font\">\n\t\t\t\t\t\t\t\tEnvío y embalaje en su máxima expresión! En Estados Unidos y Sudamérica\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<p className=\"pt-5 text-center jo-font\">\n\t\t\t\t\t\t\t\tUn tipo diferente de empresa. Un tipo diferente de envío exprés.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-lg d-flex justify-content-center align-content-end flex-column\">\n\t\t\t\t\t\t\t{area === 'login' && (\n\t\t\t\t\t\t\t\t<LoginBox\n\t\t\t\t\t\t\t\t\tauthenticate={authenticate.bind(this)}\n\t\t\t\t\t\t\t\t\tprogress={progress}\n\t\t\t\t\t\t\t\t\tonClick={setArea}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{area === 'forgot-pw' && (\n\t\t\t\t\t\t\t\t<ForgotPasswordBox onPasswordReset={onPasswordReset.bind(this)} onClick={setArea} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t\t<footer>\n\t\t\t\t<p id=\"footer\" className=\"text-center\" />\n\t\t\t</footer>\n\t\t</div>\n\t);\n};\n\nconst LoginBox = ({ authenticate, progress, onClick }) => (\n\t<React.Fragment>\n\t\t<h1 className=\"text-center jo-font\">Teloentrego</h1>\n\t\t<form onSubmit={authenticate}>\n\t\t\t<input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Correo Electrónico\" required />\n\t\t\t<br />\n\t\t\t<input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Contraseña\" required />\n\t\t\t<br />\n\t\t\t{progress && <i className=\"fas fa-spinner fa-pulse py-3\" />}\n\t\t\t<input type=\"submit\" value=\"Iniciar Sesión\" className=\"login-login-btn btn btn-light\" />\n\t\t</form>\n\t\t<p className=\"p-3 text-center\">\n\t\t\t¿Has olvidado tu contraseña?\n\t\t\t<button className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\" onClick={() => onClick('forgot-pw')}>\n\t\t\t\t¡Recupera ahora!\n\t\t\t</button>\n\t\t</p>\n\t</React.Fragment>\n);\n\nconst ForgotPasswordBox = ({ onPasswordReset, onClick }) => {\n\tconst [ FINISHED, setFinish ] = useState(false);\n\n\tconst handleFormSubmit = (e) => {\n\t\te.preventDefault();\n\t\tonPasswordReset(setFinish);\n\t};\n\n\treturn (\n\t\t<div className=\"animate__animated animate__fadeInRight text-center\">\n\t\t\t<h1 className=\"text-center\">Restablecer La Contraseña</h1>\n\t\t\t{!FINISHED && <PasswordForm onSubmit={handleFormSubmit.bind(this)} onClick={onClick} />}\n\t\t\t{FINISHED && (\n\t\t\t\t<h2 className=\"animate__animated animate__fadeIn text-center\">\n\t\t\t\t\tLa solicitud de restablecimiento de contraseña se envió a su dirección de correo electrónico.\n\t\t\t\t</h2>\n\t\t\t)}\n\t\t\t{FINISHED && (\n\t\t\t\t<button onClick={() => onClick('login')} className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\">\n\t\t\t\t\tVolver al inicio de sesión\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst PasswordForm = (props) => (\n\t<React.Fragment>\n\t\t<form onSubmit={props.onSubmit}>\n\t\t\t<input\n\t\t\t\tname=\"email-for-request\"\n\t\t\t\tid=\"email-for-request\"\n\t\t\t\tplaceholder=\"Correo electrónico\"\n\t\t\t\ttype=\"email\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<input type=\"submit\" value=\"Recuperar Contraseña\" className=\"login-login-btn btn btn-light\" />\n\t\t</form>\n\t\t<p className=\"p-3 text-center\">\n\t\t\t¿Recordar contraseña?\n\t\t\t<button className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\" onClick={() => props.onClick('login')}>\n\t\t\t\tIniciar Sesión\n\t\t\t</button>\n\t\t</p>\n\t</React.Fragment>\n);\n\nexport default Index;\n",["258","259"],"/Users/solorzke/Documents/Developer/express-hub/src/data/Cookie.js",[],["260","261"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Home.js",[],["262","263"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Wrapper/Wrapper.js",[],["264","265"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Drawer/Drawer.js",[],["266","267"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Index.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/Config.js",[],["268","269"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Client.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Toast/Toast.js",[],["270","271"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Order.js",["272"],"import React, { useRef, useState, useEffect } from 'react';\nimport { Countries } from '../../data/Location';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport Editor from '../../components/TextEditor/Editor';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport { useHistory } from 'react-router-dom';\n\nconst Order = () => <Wrapper children={<Body />} current=\"Nuevo Orden\" active=\"new\" />;\n\nconst Body = () => {\n\t//Select refs for clients, country, province\n\tlet clientRef = useRef(null);\n\tlet countryRef = useRef(null);\n\tlet provinceRef = useRef(null);\n\tconst [ SHIPPING, setShipping ] = useState(false);\n\tconst [ CLIENTS, setClients ] = useState(null);\n\tconst history = useHistory();\n\tlet value = '';\n\n\tuseEffect(() => {\n\t\tif (CLIENTS === null) {\n\t\t\tgetClients();\n\t\t}\n\t}, []);\n\n\t//Request a list of clients from the firestore\n\tconst getClients = async () => {\n\t\tconst snapshot = await Firebase.firestore().collection('clients').get();\n\t\tlet clients = [];\n\t\tsnapshot.forEach((doc) => clients.push(doc.data()));\n\t\tsetClients(clients);\n\t\treturn clients;\n\t};\n\n\t//Format the selected names to first letter uppercase followed by lowercase\n\tconst formatName = (str = '') => {\n\t\tconst formatted = str.split(' ').map((word) => word.charAt(0).toUpperCase() + word.slice(1));\n\t\treturn formatted.join(' ');\n\t};\n\n\tconst setText = (data) => (value = data);\n\n\t//Format the date from the date picker to MM/DD/YYYY\n\tconst formatDate = (date) => {\n\t\tconst bytes = date.split('-');\n\t\tconst month = bytes[1];\n\t\tconst day = bytes[2];\n\t\tconst year = bytes[0];\n\t\treturn `${month}/${day}/${year}`;\n\t};\n\n\t//Add all the form data and files to the firestore request to create a new order\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst orderId = Number(new Date()).toString();\n\t\t\tconst clientId = clientRef.current.selectedOptions[0].value;\n\t\t\tconst clientName = clientRef.current.selectedOptions[0].text;\n\t\t\tconst orderDate = document.getElementById('order-date').value;\n\t\t\tconst country = countryRef.current.selectedOptions[0].text;\n\t\t\tconst province = provinceRef.current.selectedOptions[0].text;\n\t\t\tconst address = document.getElementById('address').value.toLowerCase();\n\t\t\tconst shippingStatus = SHIPPING;\n\t\t\tconst tracking = document.getElementById('tracking').value;\n\t\t\t// const editor = editorValue.length !== 0 ? editorValue : 'No notes written down.';\n\t\t\t//Store data into a obj\n\t\t\tlet data = {\n\t\t\t\torderId: orderId,\n\t\t\t\tclientId: clientId,\n\t\t\t\tclientName: clientName,\n\t\t\t\tdate: formatDate(orderDate),\n\t\t\t\tcountry: country,\n\t\t\t\tprovince: province,\n\t\t\t\taddress: address,\n\t\t\t\tnotes: value,\n\t\t\t\tshippingStatus: shippingStatus,\n\t\t\t\ttrackingNum: tracking.length === 0 ? '' : tracking\n\t\t\t};\n\n\t\t\thistory.push('/new-order/add-order/add-items', data);\n\t\t} catch (error) {\n\t\t\tconsole.log(`> App: Unable to save form data.\\n ${error.message}`);\n\t\t}\n\t};\n\tif (CLIENTS === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container p-3 toast-div\">\n\t\t\t<Description />\n\t\t\t<OrderForm\n\t\t\t\tformatName={formatName.bind(this)}\n\t\t\t\tonSubmit={onSubmit.bind(this)}\n\t\t\t\tclients={CLIENTS}\n\t\t\t\tsetShipping={setShipping.bind(this)}\n\t\t\t\trefs={{ client: clientRef, country: countryRef, province: provinceRef }}\n\t\t\t\tsetText={setText.bind(this)}\n\t\t\t/>\n\t\t</main>\n\t);\n};\n\nconst OrderForm = ({ formatName, onSubmit, clients, refs, setText, setShipping }) => (\n\t<form onSubmit={onSubmit}>\n\t\t<div className=\"form-group row\">\n\t\t\t{/* <Clients refs={refs} formatName={formatName} getClients={getClients} /> */}\n\t\t\t<ClientsPicker formatName={formatName} data={clients} refs={refs} />\n\t\t\t<DatePicker />\n\t\t</div>\n\t\t<Destination refs={refs} countries={Countries} />\n\t\t<ShippingStatus onClick={setShipping} />\n\t\t<TextEditor setText={setText} />\n\t\t<ConfirmButtons />\n\t</form>\n);\n\nconst ClientsPicker = ({ data, formatName, refs }) => (\n\t<div className=\"form-group col-md-6\">\n\t\t<label>Cliente</label>\n\t\t<select required ref={refs.client} className=\"custom-select\" id=\"client\">\n\t\t\t<option value=\"\" disabled selected>\n\t\t\t\tSelecciona un cliente\n\t\t\t</option>\n\t\t\t{data.map((item, index) => {\n\t\t\t\tlet fname = formatName(item.fname);\n\t\t\t\tlet lname = formatName(item.lname);\n\t\t\t\tlet full_name = `${fname} ${lname}`;\n\t\t\t\treturn (\n\t\t\t\t\t<option value={item.id} key={index}>\n\t\t\t\t\t\t{full_name}\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t})}\n\t\t</select>\n\t</div>\n);\n\nconst DatePicker = () => (\n\t<div className=\"form-group col-md-6\">\n\t\t<label htmlFor=\"order-date\">Fecha De Orden</label>\n\t\t<input\n\t\t\ttype=\"date\"\n\t\t\tclassName=\"form-control\"\n\t\t\tid=\"order-date\"\n\t\t\tdefaultValue={new Date().toISOString().slice(0, 10)}\n\t\t\tname=\"order-date\"\n\t\t\trequired\n\t\t/>\n\t</div>\n);\n\nconst Destination = ({ refs, countries }) => {\n\tconst [ country, setCountry ] = useState(null);\n\tconst onChange = (e) => {\n\t\tconst value = e.target.selectedOptions[0].value;\n\t\tswitch (value) {\n\t\t\tcase 'united states':\n\t\t\t\treturn setCountry('usa');\n\t\t\tcase 'ecuador':\n\t\t\t\treturn setCountry('ecu');\n\t\t\tdefault:\n\t\t\t\treturn setCountry(null);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div id=\"destination\">\n\t\t\t<h3 className=\"py-3\">Destino</h3>\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<label htmlFor=\"country\" className=\"col-sm-2 col-form-label\">\n\t\t\t\t\tPaís\n\t\t\t\t</label>\n\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t<select\n\t\t\t\t\t\tref={refs.country}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"custom-select\"\n\t\t\t\t\t\tid=\"country\"\n\t\t\t\t\t\tonChange={onChange.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\" selected disabled>\n\t\t\t\t\t\t\tSeleccione un País\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"ecuador\">Ecuador</option>\n\t\t\t\t\t\t<option value=\"united states\">Estados Unidos</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<label htmlFor=\"province\" className=\"col-sm-2 col-form-label\">\n\t\t\t\t\tProvincia\n\t\t\t\t</label>\n\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t<select ref={refs.province} required className=\"custom-select\" id=\"province\">\n\t\t\t\t\t\t<option value=\"\" disabled selected>\n\t\t\t\t\t\t\t-\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{country !== null &&\n\t\t\t\t\t\t\tcountries[country].map((item, index) => (\n\t\t\t\t\t\t\t\t<option key={index} value={item.value}>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<label htmlFor=\"address\" className=\"col-sm-2 col-form-label\">\n\t\t\t\t\tDirección\n\t\t\t\t</label>\n\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" id=\"address\" placeholder=\"Dirección\" name=\"address\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst ShippingStatus = ({ onClick }) => {\n\tconst [ SHOW, setShow ] = useState(false);\n\tconst OPTIONS = [ { name: 'Enviado', value: true }, { name: 'Aun no ha sido enviado', value: false } ];\n\treturn (\n\t\t<div id=\"shipping-tracking\">\n\t\t\t<h3 className=\"py-3\">Estado Del Envío</h3>\n\t\t\t<label htmlFor=\"status\" className=\"pr-5\">\n\t\t\t\tEstado\n\t\t\t</label>\n\t\t\t{OPTIONS.map((item, index) => (\n\t\t\t\t<div className=\"form-check form-check-inline\" key={index}>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"inlineRadioOptions\"\n\t\t\t\t\t\tid={item.value}\n\t\t\t\t\t\tvalue={item.value}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetShow(item.value);\n\t\t\t\t\t\t\tonClick(item.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<label className=\"form-check-label\" for={item.value}>\n\t\t\t\t\t\t{item.name}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t\t<div className={`form-group row${SHOW ? '' : ' d-none'}`}>\n\t\t\t\t<label htmlFor=\"tracking\" className=\"col-sm-2 col-form-label\">\n\t\t\t\t\tEl Número de Rastreo\n\t\t\t\t</label>\n\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"tracking\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Ingrese el número, si está disponible.\"\n\t\t\t\t\t\tname=\"tracking\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst TextEditor = ({ setText }) => (\n\t<div id=\"editor\">\n\t\t<h3 className=\"py-3\">Notas Adicionales</h3>\n\t\t<div className=\"form-group row\">\n\t\t\t<div className=\"col-md-12\">\n\t\t\t\t<Editor onChange={setText} />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nconst ConfirmButtons = () => (\n\t<div className=\"form-group row\">\n\t\t<div className=\"col-md d-flex justify-content-end align-items-center\">\n\t\t\t<a href=\"/new-order\" className=\"mr-2 btn btn-md btn-secondary\">\n\t\t\t\tCancelar\n\t\t\t</a>\n\t\t\t<input type=\"submit\" value=\"Continuar\" className=\"btn btn-primary\" id=\"btn-modal\" />\n\t\t</div>\n\t</div>\n);\n\nconst Description = () => (\n\t<div id=\"description\">\n\t\t<h1>Agregar Nuevo Pedido</h1>\n\t\t<p>\n\t\t\tSeleccione el cliente que desea realizar un nuevo pedido, y establezca la fecha del pedido cuando lo\n\t\t\tsolicitó. Escriba detalles sobre el destino del pedido, incluido su país, provincia y dirección.\n\t\t</p>\n\t\t<p className=\"mb-5\">\n\t\t\tPuede agregar notas adicionales que sean pertinentes al pedido si lo desea. Haga clic en \"Continuar\" para\n\t\t\tpasar a la página siguiente.\n\t\t</p>\n\t</div>\n);\n\nexport default Order;\n","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Input.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Horizontal.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Index.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Files.js",["273","274"],"import React, { useState, useRef, useEffect } from 'react';\nimport { Accordion, Card, Button, ListGroup } from 'react-bootstrap';\nimport './Files.css';\n\nconst FileInput = ({ itemName, quantity, onDelete, onFilesChange, itemKey, onUpdate }) => {\n\t//Refs target the hidden inputs for avi and files, and the avi image element\n\tlet aviRef = useRef(null);\n\tlet aviInputRef = useRef(null);\n\tlet fileRef = useRef(null);\n\t//State props for tracking the files, avi, and key data. Key references the eventKey for triggering the collapse or reveal\n\t//effect, not to be confused with object keys.\n\tconst [ files, setFiles ] = useState([]);\n\tconst [ avi, setAvi ] = useState(null);\n\tconst [ key, setKey ] = useState('1');\n\n\t//Set default image if necessary, and log changes to the files and avi state, such as files uploaded\n\tuseEffect(\n\t\t() => {\n\t\t\tsetDefaultImage();\n\t\t\tonFilesChange(files, avi, itemKey);\n\t\t},\n\t\t[ files, avi ]\n\t);\n\n\t//Track changes to the input ref for avi image of the item, update its data to the state, and set the img source to\n\t//the uploaded avi image.\n\tconst onAviChange = (e) => {\n\t\tconst url = URL.createObjectURL(e.target.files[0]);\n\t\taviRef.current.src = url;\n\t\tsetAvi(e.target.files[0]);\n\t};\n\n\t//Set a default image from a url to the avi as a placeholder until it is changed\n\tconst setDefaultImage = () => {\n\t\tconst url = 'https://www.nbmchealth.com/wp-content/uploads/rem/2018/04/default-placeholder.png';\n\t\tif (aviRef.current.src === '') {\n\t\t\taviRef.current.src = url;\n\t\t\tsetAvi(url);\n\t\t}\n\t};\n\n\t//Track what type of action the onClick function was triggered for and execute its case subroutine\n\tconst onClick = (type) => {\n\t\tswitch (type) {\n\t\t\tcase 'avi':\n\t\t\t\taviInputRef.current.click();\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\tfileRef.current.click();\n\t\t}\n\t};\n\n\t//Update the files state by uploading the entire files' object/array from the event obj and set the event key to 0.\n\t//'0' meaning trigger the Accordian Body reveal with the file items displayed vs. '1' meaning hide the Accordian Body\n\tconst addFile = (e) => {\n\t\tconst inputFiles = e.target.files;\n\t\tObject.keys(inputFiles).forEach((item) => setFiles((state) => [ ...state, inputFiles[item] ]));\n\t\tif (key !== 0) setKey('0');\n\t};\n\n\t//Extract and remove the file item by matching the index of the item in the filter loop.\n\tconst removeItem = (i) => {\n\t\tlet copy = files;\n\t\tconst filtered_array = copy.filter((item, index) => index !== i);\n\t\tif (filtered_array.length === 0) setKey('1');\n\t\tsetFiles(filtered_array);\n\t};\n\n\treturn (\n\t\t<div className=\"w-100\">\n\t\t\t<Accordion>\n\t\t\t\t<Card>\n\t\t\t\t\t<Card.Header className=\"px-2 py-0\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-2 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t\t<button className=\"btn btn-default btn-file\" onClick={() => onClick('avi')}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tonChange={onAviChange}\n\t\t\t\t\t\t\t\t\t\tref={aviInputRef}\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<img ref={aviRef} className=\"text-center avi-img\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-10 pl-3 text-left pt-2 item-box\">\n\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\teventKey=\"0\"\n\t\t\t\t\t\t\t\t\tclassName=\"p-0 float-right d-inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-chevron-down float-right\" />\n\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t<span className=\"d-inline\">\n\t\t\t\t\t\t\t\t\t<h5 className=\"d-inline\">{itemName}</h5>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tQuantity: {quantity}\n\t\t\t\t\t\t\t\t\t\t<span className=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onClick('file')}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={fileRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-link py-0 px-3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={addFile}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\tAgregar\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={onUpdate}>\n\t\t\t\t\t\t\t\t\t\t\t\tActualizar\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={onDelete}>\n\t\t\t\t\t\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t<Accordion.Collapse eventKey={key}>\n\t\t\t\t\t\t<Card.Body className=\"p-0\">\n\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t{files.map((item, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"file-item\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tborderBottom: index === files.length - 1 ? '1px solid #e8e8e8' : ''\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger float-right\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => removeItem(index)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tBorrar\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n};\n\nexport default FileInput;\n","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Items.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Prompt.js",[],["275","276"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Submit.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Receipt/Receipt.js",["277","278","279"],"import React from 'react';\nimport Item from '../Files/Item';\nimport './Receipt.css';\n\nconst Receipt = ({ form, files }) => {\n\t//Change the casing of every word in the string\n\tconst formatString = (str) => {\n\t\t//Check if its multi-word\n\t\tconst words = str.split(' ');\n\t\tconst newString = words.map((item) => item.charAt(0).toUpperCase() + item.slice(1));\n\t\treturn newString.join(' ');\n\t};\n\n\tconst clientName = form.clientName;\n\n\treturn (\n\t\t<div className=\"receipt\">\n\t\t\t<div className=\"receipt-breakdown\">\n\t\t\t\t<div className=\"receipt-breakdown--header\">\n\t\t\t\t\t<p>Recibo de</p>\n\t\t\t\t\t<h2>{clientName}</h2>\n\t\t\t\t</div>\n\t\t\t\t<ul className=\"receipt-breakdown--list\">\n\t\t\t\t\t<BreakDownEntry icon=\"fa fa-calendar-day\" title=\"Fecha De Orden:\" value={form.date} />\n\t\t\t\t\t<BreakDownEntry\n\t\t\t\t\t\ticon=\"fa fa-globe-americas\"\n\t\t\t\t\t\ttitle=\"Provincia, País:\"\n\t\t\t\t\t\tvalue={`${form.province}, ${form.country}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<BreakDownEntry\n\t\t\t\t\t\ticon=\"fa fa-address-card\"\n\t\t\t\t\t\ttitle=\"Dirección de Envío:\"\n\t\t\t\t\t\tvalue={formatString(form.address)}\n\t\t\t\t\t/>\n\t\t\t\t\t<BreakDownEntry icon=\"fa fa-barcode\" title=\"Confirmación No:\" value={form.orderId} />\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Overview\n\t\t\t\tproduct=\"Teloentrego Order Summary\"\n\t\t\t\tmerchant={'Allied Steel Buildings'}\n\t\t\t\tmerchantEmail={'info@alliedbuildings.com'}\n\t\t\t\tname={form.clientName}\n\t\t\t\tvalue={'$20,000.00 USD'}\n\t\t\t\tfiles={files}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst BreakDownEntry = ({ icon, title, value }) => {\n\treturn (\n\t\t<li>\n\t\t\t<span className={icon} />\n\t\t\t<div className=\"list-content\">\n\t\t\t\t<p>\n\t\t\t\t\t{title}\n\t\t\t\t\t<span className=\"list-bold\">{value}</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nconst Overview = (props) => {\n\treturn (\n\t\t<div className=\"receipt-overview pb-3\">\n\t\t\t<OverviewHeader logo={'http://www.alliedbuildings.com/wp-content/uploads/2016/11/Allied-Black-Logo.png'} />\n\t\t\t<OverviewBody {...props} />\n\t\t\t{Object.keys(props.files).map((item, index) => <Item key={index} data={props.files[item]} />)}\n\t\t\t<OverviewFooter {...props} />\n\t\t</div>\n\t);\n};\n\nconst OverviewHeader = ({ logo }) => {\n\tconst day = new Date().getDate();\n\tconst year = new Date().getFullYear();\n\tconst month = () => {\n\t\tconst months = [\n\t\t\t'Enero',\n\t\t\t'Febrero',\n\t\t\t'Marzo',\n\t\t\t'Abril',\n\t\t\t'Mayo',\n\t\t\t'Junio',\n\t\t\t'Julio',\n\t\t\t'Agosto',\n\t\t\t'Septiembre',\n\t\t\t'Octubre',\n\t\t\t'Noviembre',\n\t\t\t'Diciembre'\n\t\t];\n\t\treturn months[new Date().getMonth()];\n\t};\n\n\tconst calcTime = () => {\n\t\t// create Date object for current location\n\t\tconst d = new Date();\n\t\tconst hours = d.getHours();\n\t\tconst min = d.getMinutes();\n\t\treturn `${hours}:${min}`;\n\t};\n\n\treturn (\n\t\t<div className=\"overview-header\">\n\t\t\t<img className=\"logo\" src={logo} />\n\t\t\t<div className=\"timestamp\">\n\t\t\t\t<span>{`${month()} ${day}, ${year}`}</span>\n\t\t\t\t<span>{`${calcTime()} EST`}</span>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t</div>\n\t);\n};\n\nconst PurchaseOverview = () => (\n\t<div className=\"purchase-overview\">\n\t\t<h3>Resumen del pedido de Teloentrego</h3>\n\t</div>\n);\n\nconst OverviewBody = (props) => {\n\treturn (\n\t\t<div className=\"overview-body\">\n\t\t\t<PurchaseOverview {...props} />\n\t\t\t<div className=\"user-info\">\n\t\t\t\t<p className=\"user-info-name\">Hola {props.name},</p>\n\t\t\t\t<p className=\"user-info-text\">\n\t\t\t\t\tLos siguientes artículos que se enumeran a continuación se ordenarán y se le enviarán una vez que\n\t\t\t\t\testén listos. Teloentrego Shipping se pondrá en contacto contigo a la brevedad sobre el estado del\n\t\t\t\t\tpedido y su envío.\n\t\t\t\t</p>\n\t\t\t\t<p className=\"user-info-text\">\n\t\t\t\t\tPor supuesto, si tiene alguna pregunta, no dude en ponerse en contacto con Marco Solorzano.{' '}\n\t\t\t\t</p>\n\t\t\t\t<p>Gracias por elegir Teloentrego Shipping.</p>\n\t\t\t\t<p className=\"salutation\">\n\t\t\t\t\t<img src=\"https://ec2-52-40-174-59.us-west-2.compute.amazonaws.com/banners/about_us_pic.png\" />\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"descriptor\">\n\t\t\t\t<p>Es posible que este pedido tarde unos días en estar listo para enviarse.</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst OverviewFooter = () => {\n\treturn (\n\t\t<footer className=\"overview-footer\">\n\t\t\t<span className=\"site\">\n\t\t\t\t<a href=\"https://www.teloentrego.com\" target=\"_blank\">\n\t\t\t\t\thttps://teloentregoec.com\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t\t<span className=\"invoice-id\">+1 (973)-474-7298</span>\n\t\t</footer>\n\t);\n};\n\nexport default Receipt;\n","/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Confirm.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Back.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/404.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/TextEditor/Editor.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Search.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Select.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Client.js",["280","281","282","283"],"import React, { useEffect, useState } from 'react';\nimport { Dropdown, Button, Breadcrumb } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { ClientTypes } from '../../data/InputTypes';\nimport { Config } from '../../data/Config';\nimport Slidecard from '../../components/SlideCard/Card';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport File from '../../components/Files/File';\nimport Field from '../../components/SlideCard/Field';\nimport Empty from '../../components/Placeholders/Empty';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport Toast from '../../components/Toast/Toast';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst Client = () => <Wrapper children={<Body />} current=\"Clientes\" active=\"clients\" />;\n\nconst Body = () => {\n\tlet { id } = useParams();\n\t//State data that control the toast message\n\tconst [ toast, setToast ] = useState(false);\n\tconst [ img, setImg ] = useState('fas fa-spinner fa-pulse');\n\tconst [ message, setMessage ] = useState('Eliminando Cliente y sus pedidos ...');\n\tconst [ heading, setHeading ] = useState('Eliminar Cliente');\n\t//State data that controls client and order info\n\tconst [ client, setClient ] = useState(null);\n\tconst [ orders, setOrders ] = useState([]);\n\tconst [ empty, setEmpty ] = useState(false);\n\n\tuseEffect(() => {\n\t\tconsole.log(id);\n\t\tgetClient();\n\t\tgetOrders();\n\t}, []);\n\n\t//Set the state for the toast props\n\tconst setToastProps = (toastImg, toastHeading, toastMessage, log, action) => {\n\t\tsetImg(toastImg);\n\t\tsetHeading(toastHeading);\n\t\tsetMessage(toastMessage);\n\t\tconsole.log(log);\n\t\tsetTimeout(() => {\n\t\t\tsetToast(false);\n\t\t\tsetImg('fas fa-spinner fa-pulse');\n\t\t\tsetHeading('Eliminando Cliente y sus pedidos ...');\n\t\t\tsetMessage('Eliminar cliente');\n\t\t\tconsole.log('Toast Props set to normal.');\n\t\t\tif (action) window.location.href = document.referrer;\n\t\t}, 3000);\n\t};\n\n\t//Get info of the selected client from the firestore\n\tconst getClient = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('clients').where('id', '==', id).get();\n\t\t\tif (snapshot.empty)\n\t\t\t\treturn alert(\n\t\t\t\t\t'No hay ningún usuario que coincida con este ID de cliente. Por favor, regrese y vuelva a intentarlo.'\n\t\t\t\t);\n\t\t\tlet client = [];\n\t\t\tsnapshot.forEach((doc) => client.push(doc.data()));\n\t\t\tsetClient(client[0]);\n\t\t} catch (error) {\n\t\t\tconsole.error(`> Firebase: Couldn\\'t get user information`);\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Get all orders relevant to the client's id\n\tconst getOrders = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('orders').where('clientId', '==', id).get();\n\t\t\tif (snapshot.empty) return setEmpty(true);\n\t\t\tlet orders = [];\n\t\t\tsnapshot.forEach((doc) => orders.push(doc.data()));\n\t\t\tsetOrders(orders);\n\t\t} catch (error) {\n\t\t\tconsole.error(`> Firebase: Couldn\\'t get orders.`);\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Update order to the firestore and refresh the page afterwards\n\tconst updateClient = async (e, data) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\t// setUpdating(true);\n\t\t\tconst value = Object.values(data)[0].toLowerCase();\n\t\t\tif (value === '' && typeof value !== 'boolean') return alert('Ingrese un valor antes de actualizar');\n\t\t\tawait Firebase.firestore().collection('clients').doc(id).update(data);\n\t\t\twindow.location.reload();\n\t\t} catch (error) {\n\t\t\t// setUpdating(false);\n\t\t\tconsole.log(\"> Firebase: Request couldn't go through\");\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Delete the client from the firestore\n\t//1. Delete all files associated with the order id in the 'storage' collection.\n\t//2. Delete all orders associated with the client first in the 'Orders' collection.\n\t//3. Delete the client document in the 'Clients' collection.\n\tconst deleteClient = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst answer = window.confirm(\n\t\t\t\t`¿Está seguro de que desea eliminar este cliente? Todos los pedidos, la información y los archivos asociados con esta cuenta se borrarán y no se podrán recuperar.`\n\t\t\t);\n\t\t\tif (answer) {\n\t\t\t\tsetToast(true);\n\t\t\t\tfor (let i = 0; i < orders.length; i++) {\n\t\t\t\t\tconst orderId = orders[i].orderId;\n\t\t\t\t\tconst list = await Firebase.storage().ref(`images/${orderId}`).list();\n\t\t\t\t\tconst items = list.items;\n\t\t\t\t\tfor (let j = 0; j < list.items.length; j++) {\n\t\t\t\t\t\tconst item_path = items[j]['_delegate']['_location']['path_'];\n\t\t\t\t\t\tawait Firebase.storage().ref(item_path).delete();\n\t\t\t\t\t}\n\t\t\t\t\tawait Firebase.firestore().collection('orders').doc(orderId).delete();\n\t\t\t\t}\n\t\t\t\tawait Firebase.firestore().collection('clients').doc(id).delete();\n\t\t\t\tsetToastProps(\n\t\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t\t'Cliente Eliminado!',\n\t\t\t\t\t`¡El cliente fue eliminado de la nube!`,\n\t\t\t\t\t`> Firebase: Client: ${id} and all his/her orders are deleted from the system.`,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(`> Firebase: Couldn\\'t delete the user from Firebase`);\n\t\t\tconsole.error(error);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-window-close toast-fail',\n\t\t\t\t'Fallido',\n\t\t\t\t`¡No se pudo eliminar el cliente!`,\n\t\t\t\t`> Firebase: Error couldnt send request.\\n ${error.message}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\t//Change the casing of every word in the string\n\tconst formatString = (str) => {\n\t\t//Check if its multi-word\n\t\tconst parsedStr = str.replaceAll('%20', ' ');\n\t\tconsole.log(`${str} => ${parsedStr}`);\n\t\tconst words = parsedStr.split(' ');\n\t\tconst newString = words.map((item) => item.charAt(0).toUpperCase() + item.slice(1));\n\t\treturn newString.join(' ');\n\t};\n\n\tif (client === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container-fluid pt-3\">\n\t\t\t<Paths />\n\t\t\t<Toast\n\t\t\t\tonClose={() => setToast(false)}\n\t\t\t\tshow={toast}\n\t\t\t\tmessage={message}\n\t\t\t\theading={heading}\n\t\t\t\timg={<i className={`${img} p-3`} />}\n\t\t\t/>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-lg-12 w-100 client-pane\">\n\t\t\t\t\t<Description state={client} formatString={formatString.bind(this)} />\n\t\t\t\t\t<ButtonsPane onDelete={deleteClient.bind(this)} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<section className=\"row\">\n\t\t\t\t<Slidecard\n\t\t\t\t\tchildren={\n\t\t\t\t\t\t<Fields\n\t\t\t\t\t\t\tstate={client}\n\t\t\t\t\t\t\tformatString={formatString.bind(this)}\n\t\t\t\t\t\t\tonUpdate={updateClient.bind(this)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\ttitle=\"Información Del Cliente\"\n\t\t\t\t\ticon=\"fas fa-user-circle pr-2\"\n\t\t\t\t/>\n\t\t\t\t<Slidecard\n\t\t\t\t\tchildren={!empty ? <Orders state={orders} names={client} /> : <EmptyBox />}\n\t\t\t\t\ttitle=\"Pedidos Recientes\"\n\t\t\t\t\ticon=\"fas fa-list-alt pr-2\"\n\t\t\t\t/>\n\t\t\t</section>\n\t\t</main>\n\t);\n};\n\nconst Menu = ({ onDelete }) => (\n\t<Dropdown className=\"float-sm-right menu\">\n\t\t<Dropdown.Toggle id=\"dropdown-basic\">\n\t\t\t<i className=\"fas fa-cog\" />\n\t\t</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Item href=\"#/action-2\">\n\t\t\t\t<i className=\"fas fa-download pr-2\" />\n\t\t\t\tDescargar historial de pedidos\n\t\t\t</Dropdown.Item>\n\t\t\t<Dropdown.Item as={Button} onClick={onDelete}>\n\t\t\t\t<i className=\"fas fa-trash-alt pr-2\" />\n\t\t\t\tEliminar cliente\n\t\t\t</Dropdown.Item>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n);\n\nconst Description = ({ state, formatString }) => (\n\t<div id=\"description\">\n\t\t<h1>Cliente: {state !== null ? formatString(`${state.fname} ${state.lname}`) : ''}</h1>\n\t\t<p>Cliente desde: {state !== null ? state.clientSince : 'Not Available'}</p>\n\t\t<p className=\"desc-p-info\">\n\t\t\tVea información sobre la cuenta de su cliente, descargue un archivo de su historial de pedidos o realice\n\t\t\tcambios en su información con las opciones proporcionadas.\n\t\t</p>\n\t</div>\n);\n\nconst ButtonsPane = ({ onDelete }) => <Menu onDelete={onDelete} />;\n\nconst Fields = ({ state, formatString, onUpdate }) => {\n\tif (state !== null) {\n\t\tconst types = ClientTypes(state);\n\t\treturn (\n\t\t\t<div className=\"col-md\">\n\t\t\t\t<div className=\"client-lists\">\n\t\t\t\t\t{types.map((item, index) => (\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\ttypes={types}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\tformatString={formatString}\n\t\t\t\t\t\t\tonUpdate={onUpdate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn <Empty />;\n};\n\nconst Orders = ({ state, names }) => {\n\tconst sortOrdersByDate = (orders) => {\n\t\tconst filteredDates = orders.sort((a, b) => {\n\t\t\ta = a.date.split('/');\n\t\t\tb = b.date.split('/');\n\t\t\treturn b[2] - a[2] || b[0] - a[0] || b[1] - a[1];\n\t\t});\n\t\treturn filteredDates;\n\t};\n\tif (state !== null && names !== null) {\n\t\tnames.fname = names.fname.replace(' ', '%20');\n\t\tnames.lname = names.lname.replace(' ', '%20');\n\t\tconst sortedOrders = sortOrdersByDate(state);\n\t\treturn (\n\t\t\t<div className=\"col-md-12\">\n\t\t\t\t<ol\n\t\t\t\t\tclassName=\"list-group list-group-flush order-lists\"\n\t\t\t\t\tid=\"clients\"\n\t\t\t\t\tstyle={{ backgroundColor: '#FDFFFC' }}\n\t\t\t\t>\n\t\t\t\t\t{Object.keys(sortedOrders).map((item, index) => {\n\t\t\t\t\t\tconst order = state[item];\n\t\t\t\t\t\tconst items = order.items.map((item) => item.name).join(', ');\n\t\t\t\t\t\treturn <File key={index} id={order.orderId} date={order.date} items={items} names={names} />;\n\t\t\t\t\t})}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn <Empty />;\n};\n\nconst EmptyBox = () => (\n\t<div className=\"col-md-12\">\n\t\t<div className=\"text-center justify-content-center align-items-center d-flex flex-column\">\n\t\t\t<i\n\t\t\t\tclassName=\"fab fa-creative-commons-zero p-5\"\n\t\t\t\tstyle={{ fontSize: 100, color: '#ee4266', backgroundColor: '#2a1e5c', borderRadius: 20 }}\n\t\t\t/>\n\t\t\t<p className=\"pt-5\">Este cliente no ha hecho ningún pedido todavía.</p>\n\t\t</div>\n\t</div>\n);\n\nconst Paths = () => (\n\t<Breadcrumb>\n\t\t<Breadcrumb.Item href=\"/clients\">Volver al origen</Breadcrumb.Item>\n\t\t<Breadcrumb.Item active>Cliente</Breadcrumb.Item>\n\t</Breadcrumb>\n);\n\nexport default Client;\n","/Users/solorzke/Documents/Developer/express-hub/src/components/Files/File.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Card.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Order.js",["284","285","286","287"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Files/Item.js",["288"],"import React, { useEffect, useRef } from 'react';\nimport { Accordion, Card, Button, ListGroup } from 'react-bootstrap';\n\nconst Item = ({ data }) => {\n\tlet aviRef = useRef(null);\n\tuseEffect(() => {\n\t\tif (aviRef !== null) {\n\t\t\tconst url = typeof data.avi === 'object' ? URL.createObjectURL(data.avi) : data.avi;\n\t\t\taviRef.current.src = url;\n\t\t}\n\t});\n\n\t//Change the casing of every word in the string\n\tconst formatString = (str) => {\n\t\t//Check if its multi-word\n\t\tconst words = str.split(' ');\n\t\tconst newString = words.map((item) => item.charAt(0).toUpperCase() + item.slice(1));\n\t\treturn newString.join(' ');\n\t};\n\n\treturn (\n\t\t<div className=\"w-100\">\n\t\t\t<Accordion>\n\t\t\t\t<Card>\n\t\t\t\t\t<Card.Header className=\"px-2 py-0\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-2 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t\t<button className=\"btn btn-default btn-file\">\n\t\t\t\t\t\t\t\t\t<img ref={aviRef} className=\"text-center avi-img\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-10 pl-3 text-left pt-2\">\n\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\teventKey=\"0\"\n\t\t\t\t\t\t\t\t\tclassName=\"p-0 float-right d-inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-chevron-down float-right\" />\n\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t<span className=\"d-inline\">\n\t\t\t\t\t\t\t\t\t<h5 className=\"d-inline\">{formatString(data.name)}</h5>\n\t\t\t\t\t\t\t\t\t<p>Quantity: {data.quantity}</p>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t<Accordion.Collapse eventKey={'0'}>\n\t\t\t\t\t\t<Card.Body className=\"p-0\">\n\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t{data.files.map((item, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"file-item\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tborderBottom: index === data.files.length - 1 ? '1px solid #e8e8e8' : ''\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n};\n\nexport default Item;\n","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Field.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Empty.js",[],["289","290"],"/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/UpdateField.js",["291"],"import React, { useRef, useState } from 'react';\nimport Input from '../../components/Inputs/Horizontal';\nimport Editor from '../TextEditor/Editor';\n\nexport const TextField = ({ storeKey, heading, value, onClick, id, onCancel }) => {\n\tlet textRef = useRef(null);\n\treturn (\n\t\t<div className=\"col-md-11 py-1 update-item\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md\">\n\t\t\t\t\t<label htmlFor={id}>{heading}</label>\n\t\t\t\t\t<input ref={textRef} type=\"text\" className=\"form-control\" id={id} placeholder={value} name={id} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md align-items-end justify-content-start d-flex\">\n\t\t\t\t\t<button className=\"btn btn-link text-danger\" onClick={onCancel}>\n\t\t\t\t\t\tCancelar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn-link\" onClick={(e) => onClick(e, { [storeKey]: textRef.current.value })}>\n\t\t\t\t\t\tActualizar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const RadioField = ({ storeKey, heading, onClick, options, onCancel }) => {\n\tconst [ SELECTED, setSelected ] = useState('');\n\treturn (\n\t\t<div className=\"update-item col-md-11 py-2\">\n\t\t\t<label className=\"pr-5\">{heading}</label>\n\t\t\t{options.map((item, index) => (\n\t\t\t\t<div className=\"form-check form-check-inline\" key={index}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"inlineRadioOptions\"\n\t\t\t\t\t\tid={item.value}\n\t\t\t\t\t\tvalue={item.value}\n\t\t\t\t\t\tonClick={() => setSelected(item.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label className=\"form-check-label\" for={item.value}>\n\t\t\t\t\t\t{item.name}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t\t<button className=\"btn btn-link text-danger\" onClick={onCancel}>\n\t\t\t\tCancelar\n\t\t\t</button>\n\t\t\t<button className=\"btn btn-link\" onClick={(e) => onClick(e, { [storeKey]: SELECTED })}>\n\t\t\t\tActualizar\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport const ToggleField = ({ storeKey, onClick, value, onCancel }) => (\n\t<div className=\"update-item col-md-11\">\n\t\t<h6 className=\"mb-0 mt-2\">Cambiar estado de envío</h6>\n\t\t<button className=\"btn btn-link text-danger pl-0\" onClick={onCancel}>\n\t\t\tCancelar\n\t\t</button>\n\t\t<button className=\"btn btn-link pl-0\" onClick={(e) => onClick(e, { [storeKey]: !value })}>\n\t\t\t{`Cambiar estado a ${value ? '\"Esperando ser enviado\"' : '\"Enviado\"'}`}\n\t\t</button>\n\t</div>\n);\n\nexport const DateField = ({ storeKey, onClick, onCancel, value }) => {\n\tlet datePicker = useRef(null);\n\n\tconst reformatDate = (type) => {\n\t\tif (type === 'yyyy-mm-dd') {\n\t\t\tconst bytes = value.split('/');\n\t\t\treturn `${bytes[2]}-${bytes[0]}-${bytes[1]}`;\n\t\t} else if (type === 'mm/dd/yyyy') {\n\t\t\tconst bytes = datePicker.current.value.split('-');\n\t\t\treturn `${bytes[1]}/${bytes[2]}/${bytes[0]}`;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"update-item col-md-11\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-4\">\n\t\t\t\t\t<label htmlFor=\"order-date\">Fecha de Pedido</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={datePicker}\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"order-date\"\n\t\t\t\t\t\tdefaultValue={reformatDate('yyyy-mm-dd')}\n\t\t\t\t\t\tname=\"order-date\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-8 align-items-end justify-content-start d-flex\">\n\t\t\t\t\t<button className=\"btn btn-link text-danger pl-0\" onClick={onCancel}>\n\t\t\t\t\t\tCancelar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link pl-0\"\n\t\t\t\t\t\tonClick={(e) => onClick(e, { [storeKey]: reformatDate('mm/dd/yyyy') })}\n\t\t\t\t\t>\n\t\t\t\t\t\tActualizar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const PhoneField = ({ storeKey, onClick, id, value, heading, onCancel }) => {\n\tlet phoneRef = useRef(null);\n\n\treturn (\n\t\t<div className=\"col-md-11 py-1 update-item\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md\">\n\t\t\t\t\t<label htmlFor={id}>{heading}</label>\n\t\t\t\t\t<input ref={phoneRef} type=\"tel\" className=\"form-control\" id={id} placeholder={value} name={id} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md align-items-end justify-content-start d-flex\">\n\t\t\t\t\t<button className=\"btn btn-link text-danger\" onClick={onCancel}>\n\t\t\t\t\t\tCancelar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\tonClick={(e) => onClick(e, { [storeKey]: phoneRef.current.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\tActualizar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const PriceField = ({ storeKey, onClick, value, heading, onCancel }) => {\n\tlet priceRef = useRef(null);\n\treturn (\n\t\t<div className=\"col-md-11 py-1 update-item\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md\">\n\t\t\t\t\t<label>{heading}</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tref={priceRef}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder={value}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md align-items-end justify-content-start d-flex\">\n\t\t\t\t\t<button className=\"btn btn-link text-danger\" onClick={onCancel}>\n\t\t\t\t\t\tCancelar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\tonClick={(e) => onClick(e, { [storeKey]: priceRef.current.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\tActualizar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const UserEmailField = ({ storeKey, heading, onClick, id, onCancel }) => {\n\tlet oldEmailRef = useRef(null);\n\tlet newEmailRef = useRef(null);\n\tlet passwordRef = useRef(null);\n\n\treturn (\n\t\t<div className=\"col-md-11 py-1 update-item\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md\">\n\t\t\t\t\t<label htmlFor={id}>{heading}</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={newEmailRef}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-control my-1\"\n\t\t\t\t\t\tid=\"old-email\"\n\t\t\t\t\t\tplaceholder=\"Ingrese una nueva dirección de correo electrónico\"\n\t\t\t\t\t\tname={id}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={oldEmailRef}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-control my-1\"\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tplaceholder=\"Ingrese la dirección de correo electrónico actual\"\n\t\t\t\t\t\tname=\"old-email\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={passwordRef}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control my-1\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tplaceholder=\"Introducir la contraseña actual\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md align-items-center justify-content-start d-flex\">\n\t\t\t\t\t<button className=\"btn btn-link text-danger\" onClick={onCancel}>\n\t\t\t\t\t\tCancelar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\tonClick={(e) =>\n\t\t\t\t\t\t\tonClick(e, {\n\t\t\t\t\t\t\t\t[storeKey]: newEmailRef.current.value,\n\t\t\t\t\t\t\t\t'old-email': oldEmailRef.current.value,\n\t\t\t\t\t\t\t\tpassword: passwordRef.current.value\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\tActualizar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const ClientEmailField = ({ storeKey, heading, onClick, id, onCancel }) => {\n\tlet emailRef = useRef(null);\n\n\treturn (\n\t\t<div className=\"col-md-11 py-1 update-item\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md\">\n\t\t\t\t\t<label htmlFor={id}>{heading}</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={emailRef}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-control my-1\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tplaceholder=\"Enter new email address\"\n\t\t\t\t\t\tname={id}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md align-items-end justify-content-start d-flex\">\n\t\t\t\t\t<button className=\"btn btn-link text-danger\" onClick={onCancel}>\n\t\t\t\t\t\tCancelar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\tonClick={(e) => onClick(e, { [storeKey]: emailRef.current.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\tActualizar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const RichTextField = ({ storeKey, onClick, onCancel }) => {\n\tconst [ TEXT, setText ] = useState('');\n\n\treturn (\n\t\t<div className=\"col-md-11\">\n\t\t\t<div className=\"row update-item\">\n\t\t\t\t<div className=\"col-md-8 py-1\">\n\t\t\t\t\t<Editor onChange={(text) => setText(text)} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-4 align-items-center justify-content-start d-flex\">\n\t\t\t\t\t<button className=\"btn btn-link text-danger\" onClick={onCancel}>\n\t\t\t\t\t\tCancelar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn-link\" onClick={(e) => onClick(e, { [storeKey]: TEXT })}>\n\t\t\t\t\t\tActualizar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const PasswordField = ({ storeKey, heading, onClick, id, onCancel }) => {\n\tlet oldPasswordRef = useRef(null);\n\tlet newPasswordRef = useRef(null);\n\n\treturn (\n\t\t<div className=\"col-md-11 py-1 update-item\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md\">\n\t\t\t\t\t<label htmlFor={id}>{heading}</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={newPasswordRef}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control my-1\"\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tplaceholder=\"Enter new password\"\n\t\t\t\t\t\tname=\"new-password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={oldPasswordRef}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control my-1\"\n\t\t\t\t\t\tid=\"old-password\"\n\t\t\t\t\t\tplaceholder=\"Enter old password\"\n\t\t\t\t\t\tname=\"old-password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md align-items-center justify-content-start d-flex\">\n\t\t\t\t\t<button className=\"btn btn-link text-danger\" onClick={onCancel}>\n\t\t\t\t\t\tCancelar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\tonClick={(e) =>\n\t\t\t\t\t\t\tonClick(e, {\n\t\t\t\t\t\t\t\t[storeKey]: newPasswordRef.current.value,\n\t\t\t\t\t\t\t\t'old-password': oldPasswordRef.current.value\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\tActualizar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Loading.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/UpdateItems.js",["292","293","294"],"/Users/solorzke/Documents/Developer/express-hub/src/data/InputTypes.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Search/Index.js",["295"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Settings/Index.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/ForgotPassword.js",["296","297","298"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Logo from '../teloentrego.png';\nimport Firebase from 'firebase/app';\nimport Loading from '../components/Placeholders/Loading';\nimport 'firebase/auth';\nimport { Config } from '../data/Config';\nimport '../css/login.css';\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\n// the query string for you.\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nconst ResetPassword = () => {\n\tlet QUERY = useQuery();\n\tconst [ oobCode, setOobCode ] = useState(null);\n\tconst [ mode, setMode ] = useState(null);\n\tconst [ process, setProcess ] = useState('start');\n\tconst [ heading, setHeading ] = useState('Reset Password');\n\n\tuseEffect(() => {\n\t\tconst query_mode = QUERY.get('mode');\n\t\tconst query_oobCode = QUERY.get('oobCode');\n\t\tif (query_mode === null || query_oobCode === null) window.location.href = '/';\n\t\tsetOobCode(query_oobCode);\n\t\tsetMode(query_mode);\n\t}, []);\n\n\tconst onSubmit = async (e, input_email, new_pw) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tsetProcess('loading');\n\t\t\tsetHeading('Please Wait...');\n\t\t\tconst user_email = await Firebase.auth().verifyPasswordResetCode(oobCode);\n\t\t\tif (user_email !== input_email) {\n\t\t\t\talert(\"Email Address doesn't match with the code it was sent from. Try again\");\n\t\t\t\tsetProcess('start');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait Firebase.auth().confirmPasswordReset(oobCode, new_pw);\n\t\t\tconsole.log('> Firebase: Password Reset Successful');\n\t\t\tsetProcess('finished');\n\t\t\tsetHeading('Complete');\n\t\t} catch (error) {\n\t\t\tconsole.error(\"> Firebase: Couldn't verify the reset process of the password with firebase\");\n\t\t\tconsole.error(error);\n\t\t\talert('The reset request code has expired / not been found');\n\t\t\tsetProcess('start');\n\t\t} finally {\n\t\t\tsetHeading('Reset Password');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"login login-body\">\n\t\t\t<main className=\"login-login-container container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t<img src={Logo} height=\"400\" width=\"550\" />\n\t\t\t\t\t\t<h2 className=\"pt-5 text-center jo-font\">\n\t\t\t\t\t\t\tShipping &amp; Packaging At Its Finest! Across the USA &amp; South America\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<p className=\"pt-5 text-center jo-font\">\n\t\t\t\t\t\t\tA Different Kind Of Company. A Different Kind Of Express Shipping.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col d-flex justify-content-center align-content-center flex-column\">\n\t\t\t\t\t\t<h1 className=\"text-center\">{heading}</h1>\n\t\t\t\t\t\t{process === 'start' && <ResetPasswordBox onSubmit={onSubmit.bind(this)} />}\n\t\t\t\t\t\t{process === 'loading' && <LoadingBox />}\n\t\t\t\t\t\t{process === 'finished' && <ConfirmationBox />}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nconst ResetPasswordBox = ({ onSubmit }) => (\n\t<Fragment>\n\t\t<form\n\t\t\tonSubmit={(e) => {\n\t\t\t\tconst email = document.getElementById('email').value;\n\t\t\t\tconst new_pw = document.getElementById('new-pw').value;\n\t\t\t\tonSubmit(e, email, new_pw);\n\t\t\t}}\n\t\t>\n\t\t\t<input name=\"email\" id=\"email\" placeholder=\"Email Address\" type=\"email\" required />\n\t\t\t<input name=\"new-pw\" id=\"new-pw\" placeholder=\"New Password\" type=\"password\" required />\n\t\t\t<input type=\"submit\" name=\"submit\" value=\"Reset Password\" className=\"login-login-btn\" />\n\t\t</form>\n\t\t<p className=\"p-3 text-center\">\n\t\t\tRemember Password?\n\t\t\t<a className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\" href=\"/\">\n\t\t\t\tLogin In\n\t\t\t</a>\n\t\t</p>\n\t</Fragment>\n);\n\nconst ConfirmationBox = () => (\n\t<div className=\"animate__animated animate__fadeInUpBig text-center\">\n\t\t<i className=\"fas fa-clipboard-check py-5\" style={{ fontSize: 100, color: '#ee4266' }} />\n\t\t<p className=\"pt-5\">\n\t\t\tYour password has been reset.\n\t\t\t<a className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\" href=\"/\">\n\t\t\t\tYou can now go back &amp; log in.\n\t\t\t</a>\n\t\t</p>\n\t</div>\n);\n\nconst LoadingBox = () => (\n\t<div style={{ fontSize: 80 }} className=\"text-center py-5 animate__animated animate__fadeIn\">\n\t\t<Loading />\n\t\t<p style={{ fontSize: 16, color: '#ee4266' }} className=\"pt-5\">\n\t\t\tYour request is being processed...\n\t\t</p>\n\t</div>\n);\n\nexport default ResetPassword;\n","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Index.js",["299","300"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/LoadingPage.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/TableHeadings.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/Dates.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Paths/Paths.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/Location.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Form.js",["301"],"import React, { useState, useEffect, useRef } from 'react';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport Toast from '../../components/Toast/Toast';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport Editor from '../../components/TextEditor/Editor';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { Config } from '../../data/Config';\nimport { Breadcrumb } from 'react-bootstrap';\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst Form = () => <Wrapper children={<Body />} active=\"quotes\" current=\"Cotizaciones\" />;\n\nconst Body = () => {\n\tlet clientRef = useRef(null);\n\tlet itemRef = useRef(null);\n\tlet priceRef = useRef(null);\n\tlet costRef = useRef(null);\n\tlet value = '';\n\tconst [ clients, setClients ] = useState(null);\n\t//State data that control the toast message\n\tconst [ toast, setToast ] = useState(false);\n\tconst [ img, setImg ] = useState('fas fa-spinner fa-pulse');\n\tconst [ message, setMessage ] = useState('Guardando cotización...');\n\tconst [ heading, setHeading ] = useState('Procesando');\n\n\tuseEffect(() => {\n\t\tif (clients === null) getClients();\n\t}, []);\n\n\t//Get a list of clients from the firestore collection 'clients' and update that to the state\n\tconst getClients = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('clients').get();\n\t\t\tlet results = [];\n\t\t\tsnapshot.forEach((doc) => results.push(doc.data()));\n\t\t\tsetClients(results);\n\t\t\tconsole.log('> Firebase: all clients fetched.');\n\t\t\treturn results;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Submit the data to firestore\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tsetToast(true);\n\t\t\tawait Firebase.firestore().collection('quotes').add({\n\t\t\t\tclient: clientRef.current.selectedOptions[0].value,\n\t\t\t\titem: itemRef.current.value,\n\t\t\t\t'quoted-price': priceRef.current.value,\n\t\t\t\tcost: costRef.current.value,\n\t\t\t\tnotes: value,\n\t\t\t\tdate: getTodaysDate()\n\t\t\t});\n\t\t\tconsole.log('> Firebase: quote added successfully!');\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t'Cotizacion guardada!',\n\t\t\t\t`¡Tu cotización fue guardada!`,\n\t\t\t\t'> Firebase: quote added successfully!',\n\t\t\t\ttrue\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-window-close toast-fail',\n\t\t\t\t'Fallido',\n\t\t\t\t`¡La cotización no se pudo guardar!`,\n\t\t\t\t`> Firebase: Error couldnt send request.`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\t//Set the state for the toast props\n\tconst setToastProps = (toastImg, toastHeading, toastMessage, log, action) => {\n\t\tsetImg(toastImg);\n\t\tsetHeading(toastHeading);\n\t\tsetMessage(toastMessage);\n\t\tconsole.log(log);\n\t\tsetTimeout(() => {\n\t\t\tif (action) window.location.href = '/quotes';\n\t\t\tsetToast(false);\n\t\t\tsetImg('fas fa-spinner fa-pulse');\n\t\t\tsetHeading('Procesando');\n\t\t\tsetMessage('Guardando Cotización...');\n\t\t\tconsole.log('Toast Props set to normal.');\n\t\t}, 3000);\n\t};\n\n\t//Format the selected names to first letter uppercase followed by lowercase\n\tconst formatName = (str = '') => {\n\t\treturn str.split(' ').map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n\t};\n\n\tconst getTodaysDate = () => {\n\t\tconst today = new Date();\n\t\tlet day = today.getDate();\n\t\tlet month = today.getMonth() + 1;\n\t\tlet year = today.getFullYear();\n\t\tday = day < 10 ? `0${day}` : day;\n\t\tmonth = month < 10 ? `0${month}` : month;\n\t\treturn `${month}/${day}/${year}`;\n\t};\n\n\tconst setText = (data) => (value = data);\n\n\tif (clients === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"mt-3 px-2\">\n\t\t\t<Toast\n\t\t\t\tonClose={() => setToast(false)}\n\t\t\t\tshow={toast}\n\t\t\t\tmessage={message}\n\t\t\t\theading={heading}\n\t\t\t\timg={<i className={`${img} p-3`} />}\n\t\t\t/>\n\t\t\t<Paths />\n\t\t\t<div className=\"container\">\n\t\t\t\t<Description />\n\t\t\t\t<QuoteForm\n\t\t\t\t\tdata={clients}\n\t\t\t\t\tformatName={formatName.bind(this)}\n\t\t\t\t\tonTextEditorChange={setText.bind(this)}\n\t\t\t\t\tonSubmit={onSubmit.bind(this)}\n\t\t\t\t\trefs={{\n\t\t\t\t\t\tclients: clientRef,\n\t\t\t\t\t\titem: itemRef,\n\t\t\t\t\t\tprice: priceRef,\n\t\t\t\t\t\tcost: costRef\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nconst Description = () => (\n\t<div className=\"description text-center\">\n\t\t<h1>Agregar Nueva Cotización</h1>\n\t\t<div className=\"justify-content-center align-items-center d-flex\">\n\t\t\t<p className=\"w-50\">\n\t\t\t\tAgregue una nueva cotización a un cliente existente en el sistema. Proporcione información como el\n\t\t\t\tnombre del artículo cotizado, precio cotizado, su costo y un enlace a ese artículo si es posible.\n\t\t\t</p>\n\t\t</div>\n\t</div>\n);\n\nconst QuoteForm = ({ onSubmit, refs, data, formatName, onTextEditorChange }) => (\n\t<form onSubmit={onSubmit}>\n\t\t<ClientsPicker refs={refs} data={data} formatName={formatName} />\n\t\t<Item refs={refs} />\n\t\t<QuotedPrice refs={refs} />\n\t\t<Cost refs={refs} />\n\t\t<TextEditor setText={onTextEditorChange} />\n\t\t<ConfirmButtons />\n\t</form>\n);\n\nconst ClientsPicker = ({ refs, data, formatName }) => (\n\t<div className=\"form-group\">\n\t\t<label htmlFor=\"clients\">Clientes</label>\n\t\t<select id=\"clients\" ref={refs.clients} className=\"custom-select\" required>\n\t\t\t<option value=\"\" disabled selected>\n\t\t\t\tSelecciona un cliente\n\t\t\t</option>\n\t\t\t{data.map((item, index) => {\n\t\t\t\tlet fname = formatName(item.fname);\n\t\t\t\tlet lname = formatName(item.lname);\n\t\t\t\tlet full_name = `${fname} ${lname}`;\n\t\t\t\treturn (\n\t\t\t\t\t<option value={item.id} key={index}>\n\t\t\t\t\t\t{full_name}\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t})}\n\t\t</select>\n\t</div>\n);\n\nconst Item = ({ refs }) => (\n\t<div className=\"form-group\">\n\t\t<label htmlFor=\"item\">Articulo</label>\n\t\t<input required ref={refs.item} type=\"text\" className=\"form-control\" id=\"item\" placeholder=\"Enter an item\" />\n\t</div>\n);\n\nconst QuotedPrice = ({ refs }) => (\n\t<div className=\"form-group\">\n\t\t<label className=\"pt-2\" htmlFor=\"quoted-price\">\n\t\t\tPrecio cotizado:\n\t\t</label>\n\t\t<div className=\"input-group price-input\">\n\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">\n\t\t\t\t\t$\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\trequired\n\t\t\t\tref={refs.price}\n\t\t\t\ttype=\"number\"\n\t\t\t\tstep=\"any\"\n\t\t\t\tmin=\"1\"\n\t\t\t\tid=\"quoted-price\"\n\t\t\t\tclassName=\"form-control\"\n\t\t\t\tplaceholder=\"0.00\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n);\n\nconst Cost = ({ refs }) => (\n\t<div className=\"form-group\">\n\t\t<label htmlFor=\"cost\" className=\"pt-2\">\n\t\t\tCosto:\n\t\t</label>\n\t\t<div className=\"input-group price-input\">\n\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">\n\t\t\t\t\t$\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\trequired\n\t\t\t\tref={refs.cost}\n\t\t\t\ttype=\"number\"\n\t\t\t\tstep=\"any\"\n\t\t\t\tmin=\"1\"\n\t\t\t\tid=\"cost\"\n\t\t\t\tclassName=\"form-control price-input\"\n\t\t\t\tplaceholder=\"0.00\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n);\n\nconst TextEditor = ({ setText }) => (\n\t<div id=\"editor\">\n\t\t<h3 className=\"py-3\">Notas</h3>\n\t\t<div className=\"form-group row\">\n\t\t\t<div className=\"col-md-12\">\n\t\t\t\t<Editor onChange={setText} />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nconst ConfirmButtons = () => (\n\t<div className=\"form-group row\">\n\t\t<div className=\"col-md d-flex justify-content-end align-items-center\">\n\t\t\t<a href=\"/quotes\" className=\"mr-2 btn btn-md btn-secondary\">\n\t\t\t\tCancelar\n\t\t\t</a>\n\t\t\t<input type=\"submit\" value=\"Guardar\" className=\"btn btn-primary\" id=\"btn-modal\" />\n\t\t</div>\n\t</div>\n);\n\nconst Paths = () => {\n\tconst onClick = (e, path) => {\n\t\te.preventDefault();\n\t\tconst message = '¿Estás seguro de que quieres regresar? Toda la información no enviada aquí se perderá.';\n\t\tif (window.confirm(message)) window.location.href = path;\n\t};\n\treturn (\n\t\t<Breadcrumb>\n\t\t\t<Breadcrumb.Item href=\"/quotes\" onClick={(e) => onClick(e, '/quotes')}>\n\t\t\t\tHome\n\t\t\t</Breadcrumb.Item>\n\t\t\t<Breadcrumb.Item active>Agregar Nueva Cotización</Breadcrumb.Item>\n\t\t</Breadcrumb>\n\t);\n};\n\nexport default Form;\n","/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Index.js",["302","303"],"import React, { useState, useEffect } from 'react';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport { Card } from 'react-bootstrap';\nimport { Config } from '../../data/Config';\nimport { QuoteHeadings } from '../../data/TableHeadings';\nimport { Spreadsheet } from '../../components/Spreadsheet/Spreadsheet';\nimport Toast from '../../components/Toast/Toast';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst Index = () => <Wrapper children={<Body />} active=\"quotes\" current=\"Cotizaciónes\" />;\n\nconst Body = () => {\n\tconst [ quotes, setQuotes ] = useState(null);\n\tconst [ filtered_quotes, setFilteredQuotes ] = useState(null);\n\tconst [ clients, setClients ] = useState(null);\n\t//State data that control the toast message\n\tconst [ toast, setToast ] = useState(false);\n\tconst [ img, setImg ] = useState('fas fa-spinner fa-pulse');\n\tconst [ message, setMessage ] = useState('Borrando Cotizaciones ...');\n\tconst [ heading, setHeading ] = useState('Procesando');\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (quotes === null) getQuotes();\n\t\t},\n\t\t[ quotes, filtered_quotes ]\n\t);\n\n\t//Set the state for the toast props\n\tconst setToastProps = (toastImg, toastHeading, toastMessage, log, action) => {\n\t\tsetImg(toastImg);\n\t\tsetHeading(toastHeading);\n\t\tsetMessage(toastMessage);\n\t\tconsole.log(log);\n\t\tsetTimeout(() => {\n\t\t\tif (action) window.location.reload();\n\t\t\tsetToast(false);\n\t\t\tsetImg('fas fa-spinner fa-pulse');\n\t\t\tsetMessage('Borrando Cotizaciones ...');\n\t\t\tsetHeading('Procesando');\n\t\t}, 1500);\n\t};\n\n\tconst getQuotes = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('quotes').get();\n\t\t\tlet results = [];\n\t\t\tsnapshot.forEach((doc) => {\n\t\t\t\tif (!doc.data().hasOwnProperty('ghost')) results.push({ ...doc.data(), uid: doc.id });\n\t\t\t});\n\t\t\tsetQuotes(results);\n\t\t\tsetFilteredQuotes(results);\n\t\t\tgetClients();\n\t\t\treturn results;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tconst getClients = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('clients').get();\n\t\t\tlet results = [];\n\t\t\tsnapshot.forEach((doc) => {\n\t\t\t\tif (!doc.data().hasOwnProperty('ghost')) results.push(doc.data());\n\t\t\t});\n\t\t\tsetClients(results);\n\t\t\treturn results;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tconst onClientChange = (e) => {\n\t\tconst clientId = e.target.value;\n\t\tconst copy = [ ...quotes ];\n\t\tconst filtered = copy.filter((quote) => quote.client === clientId);\n\t\tsetFilteredQuotes(filtered);\n\t};\n\n\tconst sortOrders = (type, field) => {\n\t\tlet copy = [ ...quotes ];\n\t\tswitch (type) {\n\t\t\tcase 'string':\n\t\t\t\tconst sortedStrings = copy.sort((a, b) => {\n\t\t\t\t\tif (a[field] < b[field]) return -1;\n\t\t\t\t\telse if (a[field] > b[field]) return 1;\n\t\t\t\t\telse return 0;\n\t\t\t\t});\n\t\t\t\tsetFilteredQuotes(sortedStrings);\n\t\t\t\treturn sortedStrings;\n\t\t\tcase 'num':\n\t\t\t\tconst sortedNums = copy.sort((a, b) => {\n\t\t\t\t\ta = parseInt(a[field]);\n\t\t\t\t\tb = parseInt(b[field]);\n\t\t\t\t\treturn b - a;\n\t\t\t\t});\n\t\t\t\tsetFilteredQuotes(sortedNums);\n\t\t\t\treturn sortedNums;\n\t\t\tcase 'date':\n\t\t\t\tconst sortedDates = copy.sort((a, b) => {\n\t\t\t\t\ta = a.date.split('/');\n\t\t\t\t\tb = b.date.split('/');\n\t\t\t\t\treturn b[2] - a[2] || b[0] - a[0] || b[1] - a[1];\n\t\t\t\t});\n\t\t\t\tsetFilteredQuotes(sortedDates);\n\t\t\t\treturn sortedDates;\n\t\t\tcase 'boolean':\n\t\t\t\tconst sortedBooleans = copy.sort((a, b) => Number(a.shippingStatus) - Number(b.shippingStatus));\n\t\t\t\tsetFilteredQuotes(sortedBooleans);\n\t\t\t\treturn sortedBooleans;\n\t\t}\n\t};\n\n\tconst sortDescendingOrders = (sorted) => setFilteredQuotes(sorted.reverse());\n\n\t//Format the selected names to first letter uppercase followed by lowercase\n\tconst formatName = (str = '') => {\n\t\tconst formatted = str.split(' ').map((word) => word.charAt(0).toUpperCase() + word.slice(1));\n\t\treturn formatted.join(' ');\n\t};\n\n\t//Delete all quotes with their uid from the firestore and rerender the DOM\n\tconst onDeleteQuotes = async (quotes) => {\n\t\ttry {\n\t\t\tsetToast(true);\n\t\t\tfor (let i = 0; i < quotes.length; i++) {\n\t\t\t\tconst uid = quotes[i];\n\t\t\t\tawait Firebase.firestore().collection('quotes').doc(uid).delete();\n\t\t\t}\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t'Cotizaciones borrado!',\n\t\t\t\t`¡Sus cotizaciones selecionados estan borrados!`,\n\t\t\t\t'> Firebase: order data added',\n\t\t\t\ttrue\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-window-close toast-fail',\n\t\t\t\t'Fallido',\n\t\t\t\t`¡No se pudo borrar el cotizacion!`,\n\t\t\t\terror.message,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\tif (filtered_quotes === null || clients === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container-fluid mt-3 index landing-page\">\n\t\t\t<Toast\n\t\t\t\tonClose={() => setToast(false)}\n\t\t\t\tshow={toast}\n\t\t\t\tmessage={message}\n\t\t\t\theading={heading}\n\t\t\t\timg={<i className={`${img} p-3`} />}\n\t\t\t/>\n\t\t\t<div className=\"row pb-3\">\n\t\t\t\t<div className=\"col-xl\">\n\t\t\t\t\t<Description />\n\t\t\t\t\t<ClientForm\n\t\t\t\t\t\tclients={clients}\n\t\t\t\t\t\tformatName={formatName.bind(this)}\n\t\t\t\t\t\tonClientChange={onClientChange.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<CardBox\n\t\t\t\t\theader=\"Agregar Cotización\"\n\t\t\t\t\ttitle=\"Crear Una Nueva Cotización\"\n\t\t\t\t\ttext=\"Comience a crear sus cotizaciones para sus clientes de inmediato aquí, incluido el precio y el costo cotizados.\"\n\t\t\t\t\tpath=\"/quotes/add\"\n\t\t\t\t\timage=\"fas fa-plus-square\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<Spreadsheet\n\t\t\t\ttype=\"quotes\"\n\t\t\t\theadings={QuoteHeadings}\n\t\t\t\tdata={filtered_quotes}\n\t\t\t\tonDeleteRows={onDeleteQuotes.bind(this)}\n\t\t\t\tonSortAsc={sortOrders.bind(this)}\n\t\t\t\tonSortDes={sortDescendingOrders.bind(this)}\n\t\t\t/>\n\t\t</main>\n\t);\n};\n\nconst Description = () => (\n\t<div id=\"description\">\n\t\t<h1>Cotizaciones</h1>\n\t\t<p>\n\t\t\tBienvenido a la página de Cotizaciones. Aquí puede agregar nuevas cotizaciones para establecer recordatorios\n\t\t\tsobre qué elementos están el cliente ha solicitado el envío.\n\t\t</p>\n\t\t<p>\n\t\t\tTambién podrá ver estas citas aquí, realizar los cambios necesarios y eliminarlas cuando has terminado de\n\t\t\tusarlos.\n\t\t</p>\n\t</div>\n);\n\nconst CardBox = ({ header, title, text, path, image }) => (\n\t<div className=\"col-xl\">\n\t\t<a href={path}>\n\t\t\t<Card className=\"index-add-client-view mt-4\">\n\t\t\t\t<Card.Header>{header}</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-md-3 text-center \">\n\t\t\t\t\t\t\t<i className={`${image} quote-logo pb-1`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-md-9\">\n\t\t\t\t\t\t\t<Card.Title>{title}</Card.Title>\n\t\t\t\t\t\t\t<Card.Text>{text}</Card.Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</a>\n\t</div>\n);\n\nconst ClientForm = ({ onClientChange, clients, formatName }) => (\n\t<div className=\"pt-3\">\n\t\t<h4>Filtrar Por Cliente</h4>\n\t\t<div className=\"input-group\">\n\t\t\t<select onChange={onClientChange} className=\"custom-select\" id=\"client\">\n\t\t\t\t<option value=\"\" disabled selected>\n\t\t\t\t\tSelecciona un cliente\n\t\t\t\t</option>\n\t\t\t\t{clients.map((client, index) => {\n\t\t\t\t\tlet fname = formatName(client.fname);\n\t\t\t\t\tlet lname = formatName(client.lname);\n\t\t\t\t\tlet full_name = `${fname} ${lname}`;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<option value={client.id} key={index}>\n\t\t\t\t\t\t\t{full_name}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</select>\n\t\t</div>\n\t</div>\n);\n\nexport default Index;\n","/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Quote.js",["304"],"import React, { useEffect, useState } from 'react';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport Field from '../../components/SlideCard/Field';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { Config } from '../../data/Config';\nimport { useLocation } from 'react-router-dom';\nimport { QuoteTypes } from '../../data/InputTypes';\nimport { Breadcrumb, Dropdown, Button } from 'react-bootstrap';\nimport Toast from '../../components/Toast/Toast';\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst Quote = () => <Wrapper children={<Body />} active={'quotes'} current=\"Cotizaciónes\" />;\n\nconst Body = () => {\n\tconst quote_id = useQuery().get('id');\n\tconst [ quote, setQuote ] = useState(null);\n\tconst [ client, setClient ] = useState(null);\n\t//State data that control the toast message\n\tconst [ toast, setToast ] = useState(false);\n\tconst [ img, setImg ] = useState('fas fa-spinner fa-pulse');\n\tconst [ message, setMessage ] = useState('Actualizando Cotizacion');\n\tconst [ heading, setHeading ] = useState('Procesando');\n\n\tuseEffect(() => {\n\t\tif (quote_id === null) window.location.href = '/quotes';\n\t\tif (quote === null) getQuote(quote_id);\n\t}, []);\n\n\t//Set the state for the toast props\n\tconst setToastProps = (toastImg, toastHeading, toastMessage, log, action) => {\n\t\tsetImg(toastImg);\n\t\tsetHeading(toastHeading);\n\t\tsetMessage(toastMessage);\n\t\tconsole.log(log);\n\t\tsetTimeout(() => {\n\t\t\tif (action) window.location.href = '/quotes';\n\t\t\tsetToast(false);\n\t\t\tsetImg('fas fa-spinner fa-pulse');\n\t\t\tsetHeading('Procesando');\n\t\t\tsetMessage('Actualizando Cotizacion');\n\t\t\tconsole.log('Toast Props set to normal.');\n\t\t}, 3000);\n\t};\n\n\t//Get the quote data from firestore using the quote id\n\tconst getQuote = async (uid) => {\n\t\ttry {\n\t\t\tconst quoteSnapshot = (await Firebase.firestore().collection('quotes').doc(uid).get()).data();\n\t\t\tconst clientSnapshot = (await Firebase.firestore()\n\t\t\t\t.collection('clients')\n\t\t\t\t.doc(quoteSnapshot.client)\n\t\t\t\t.get()).data();\n\t\t\tsetQuote({ ...quoteSnapshot, uid: uid });\n\t\t\tsetClient(clientSnapshot);\n\t\t\treturn quoteSnapshot;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Update quote to the firestore and refresh the page afterwards\n\tconst updateQuote = async (e, data) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tsetToast(true);\n\t\t\tconst value = Object.values(data)[0];\n\t\t\tif (value === '') return alert('Ingrese un valor antes de actualizar');\n\t\t\tawait Firebase.firestore().collection('quotes').doc(quote_id).update(data);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t'Cotizacion Actualizado!',\n\t\t\t\t`¡El cotizacion fue guardado en la nube!`,\n\t\t\t\t`> Firebase: Quote: ${quote_id} has been updated.`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\twindow.location.reload();\n\t\t} catch (error) {\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-window-close toast-fail',\n\t\t\t\t'Fallido',\n\t\t\t\t`¡No se pudo guardar el cotizacion!`,\n\t\t\t\terror.message,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\t//Delete the quote from the firestore\n\tconst deleteQuote = async () => {\n\t\ttry {\n\t\t\tif (!window.confirm('¿Está seguro de que desea eliminar esta cotización?')) return;\n\t\t\tsetToast(true);\n\t\t\tsetHeading('Procesando');\n\t\t\tsetMessage('Borrando el cotizacion');\n\t\t\tawait Firebase.firestore().collection('quotes').doc(quote_id).delete();\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t'Cotizacion Borrado!',\n\t\t\t\t`¡El cotizacion fue borrado de la nube!`,\n\t\t\t\t`> Firebase: Quote: ${quote_id} has been deleted.`,\n\t\t\t\ttrue\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-window-close toast-fail',\n\t\t\t\t'Fallido',\n\t\t\t\t`¡No se pudo borrar el cotizacion!`,\n\t\t\t\terror.message,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\t//Change the casing of every word in the string\n\tconst formatString = (str) => {\n\t\t//Check if its multi-word\n\t\tconst words = str.split(' ');\n\t\tconst newString = words.map((item) => item.charAt(0).toUpperCase() + item.slice(1));\n\t\treturn newString.join(' ');\n\t};\n\n\tif (quote === null || client === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container-fluid pt-3\">\n\t\t\t<Toast\n\t\t\t\tonClose={() => setToast(false)}\n\t\t\t\tshow={toast}\n\t\t\t\tmessage={message}\n\t\t\t\theading={heading}\n\t\t\t\timg={<i className={`${img} p-3`} />}\n\t\t\t/>\n\t\t\t<Paths />\n\t\t\t<Description id={quote_id} client={`${formatString(client.fname + ' ' + client.lname)}`} />\n\t\t\t<Menu onDelete={deleteQuote.bind(this)} />\n\t\t\t<Details state={quote} formatString={formatString.bind(this)} onUpdate={updateQuote.bind(this)} />\n\t\t</main>\n\t);\n};\n\nconst Description = ({ id, client }) => (\n\t<div id=\"description\">\n\t\t<h1>Quote: {id}</h1>\n\t\t<p>\n\t\t\tBelow is the information listed for this quote, belonging to <strong>{client}</strong>.\n\t\t</p>\n\t\t<p>Review the information however you wish and make any changes needed. </p>\n\t</div>\n);\n\nconst Details = ({ state, formatString, onUpdate }) => {\n\tconst types = QuoteTypes(state);\n\treturn (\n\t\t<div className=\"client-lists\">\n\t\t\t{types.map((item, index) => (\n\t\t\t\t<Field\n\t\t\t\t\tkey={index}\n\t\t\t\t\ttypes={types}\n\t\t\t\t\tindex={index}\n\t\t\t\t\titem={item}\n\t\t\t\t\tformatString={formatString}\n\t\t\t\t\tonUpdate={onUpdate}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nconst Paths = () => (\n\t<Breadcrumb className=\"py-2\">\n\t\t<Breadcrumb.Item href=\"/quotes\">Volver Al Origen</Breadcrumb.Item>\n\t\t<Breadcrumb.Item active>Cotizacion</Breadcrumb.Item>\n\t</Breadcrumb>\n);\n\nconst Menu = ({ onDelete }) => (\n\t<Dropdown className=\"float-sm-right\">\n\t\t<Dropdown.Toggle id=\"dropdown-basic\">\n\t\t\t<i className=\"fas fa-cog\" />\n\t\t</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Item href=\"#/action-2\">\n\t\t\t\t<i className=\"fas fa-download pr-2\" />\n\t\t\t\tDescargar Cotizacion\n\t\t\t</Dropdown.Item>\n\t\t\t<Dropdown.Item as={Button} onClick={onDelete}>\n\t\t\t\t<i className=\"fas fa-trash-alt pr-2\" />\n\t\t\t\tEliminar Cotizacion\n\t\t\t</Dropdown.Item>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n);\n\nexport default Quote;\n","/Users/solorzke/Documents/Developer/express-hub/src/components/Spreadsheet/Spreadsheet.js",["305","306"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Home/Index.js",["307","308","309","310","311","312","313","314","315","316"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Nav/Navbar.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Button/Button.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Banner/Banner.js",["317"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Footer/Copyright.js",["318","319","320"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Footer/Navigation.js",["321","322","323"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Home/About.js",["324","325","326","327","328","329","330","331","332","333","334","335"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Home/Contact.js",["336","337","338","339","340","341","342"],{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","severity":1,"message":"348","line":60,"column":8,"nodeType":"349","endLine":60,"endColumn":53},{"ruleId":"343","replacedBy":"350"},{"ruleId":"345","replacedBy":"351"},{"ruleId":"343","replacedBy":"352"},{"ruleId":"345","replacedBy":"353"},{"ruleId":"343","replacedBy":"354"},{"ruleId":"345","replacedBy":"355"},{"ruleId":"343","replacedBy":"356"},{"ruleId":"345","replacedBy":"357"},{"ruleId":"343","replacedBy":"358"},{"ruleId":"345","replacedBy":"359"},{"ruleId":"343","replacedBy":"360"},{"ruleId":"345","replacedBy":"361"},{"ruleId":"343","replacedBy":"362"},{"ruleId":"345","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":26,"column":5,"nodeType":"366","endLine":26,"endColumn":7,"suggestions":"367"},{"ruleId":"364","severity":1,"message":"368","line":22,"column":3,"nodeType":"366","endLine":22,"endColumn":17,"suggestions":"369"},{"ruleId":"347","severity":1,"message":"348","line":84,"column":10,"nodeType":"349","endLine":84,"endColumn":62},{"ruleId":"343","replacedBy":"370"},{"ruleId":"345","replacedBy":"371"},{"ruleId":"347","severity":1,"message":"348","line":106,"column":4,"nodeType":"349","endLine":106,"endColumn":39},{"ruleId":"347","severity":1,"message":"348","line":138,"column":6,"nodeType":"349","endLine":138,"endColumn":101},{"ruleId":"372","severity":1,"message":"373","line":153,"column":43,"nodeType":"374","endLine":153,"endColumn":58},{"ruleId":"364","severity":1,"message":"375","line":37,"column":5,"nodeType":"366","endLine":37,"endColumn":7,"suggestions":"376"},{"ruleId":"377","severity":1,"message":"378","line":67,"column":37,"nodeType":"379","messageId":"380","endLine":67,"endColumn":38,"suggestions":"381"},{"ruleId":"377","severity":1,"message":"378","line":81,"column":37,"nodeType":"379","messageId":"380","endLine":81,"endColumn":38,"suggestions":"382"},{"ruleId":"377","severity":1,"message":"378","line":134,"column":37,"nodeType":"379","messageId":"380","endLine":134,"endColumn":38,"suggestions":"383"},{"ruleId":"364","severity":1,"message":"384","line":48,"column":3,"nodeType":"366","endLine":48,"endColumn":15,"suggestions":"385"},{"ruleId":"372","severity":1,"message":"373","line":340,"column":62,"nodeType":"374","endLine":340,"endColumn":77},{"ruleId":"347","severity":1,"message":"348","line":341,"column":7,"nodeType":"349","endLine":341,"endColumn":70},{"ruleId":"372","severity":1,"message":"373","line":375,"column":24,"nodeType":"374","endLine":375,"endColumn":39},{"ruleId":"347","severity":1,"message":"348","line":29,"column":10,"nodeType":"349","endLine":29,"endColumn":62},{"ruleId":"343","replacedBy":"386"},{"ruleId":"345","replacedBy":"387"},{"ruleId":"388","severity":1,"message":"389","line":2,"column":8,"nodeType":"390","messageId":"391","endLine":2,"endColumn":13},{"ruleId":"364","severity":1,"message":"392","line":42,"column":3,"nodeType":"366","endLine":42,"endColumn":38,"suggestions":"393"},{"ruleId":"394","severity":1,"message":"395","line":85,"column":34,"nodeType":"396","messageId":"397","endLine":85,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":503,"column":5,"nodeType":"349","endLine":503,"endColumn":77},{"ruleId":"347","severity":1,"message":"348","line":107,"column":3,"nodeType":"349","endLine":107,"endColumn":53},{"ruleId":"388","severity":1,"message":"398","line":18,"column":10,"nodeType":"390","messageId":"391","endLine":18,"endColumn":14},{"ruleId":"364","severity":1,"message":"399","line":28,"column":5,"nodeType":"366","endLine":28,"endColumn":7,"suggestions":"400"},{"ruleId":"347","severity":1,"message":"348","line":60,"column":7,"nodeType":"349","endLine":60,"endColumn":50},{"ruleId":"364","severity":1,"message":"401","line":32,"column":3,"nodeType":"366","endLine":32,"endColumn":39,"suggestions":"402"},{"ruleId":"403","severity":1,"message":"404","line":83,"column":3,"nodeType":"405","messageId":"406","endLine":112,"endColumn":4},{"ruleId":"364","severity":1,"message":"407","line":30,"column":5,"nodeType":"366","endLine":30,"endColumn":7,"suggestions":"408"},{"ruleId":"364","severity":1,"message":"409","line":30,"column":3,"nodeType":"366","endLine":30,"endColumn":30,"suggestions":"410"},{"ruleId":"403","severity":1,"message":"404","line":87,"column":3,"nodeType":"405","messageId":"406","endLine":116,"endColumn":4},{"ruleId":"364","severity":1,"message":"411","line":34,"column":5,"nodeType":"366","endLine":34,"endColumn":7,"suggestions":"412"},{"ruleId":"403","severity":1,"message":"404","line":34,"column":3,"nodeType":"405","messageId":"406","endLine":44,"endColumn":4},{"ruleId":"403","severity":1,"message":"404","line":55,"column":3,"nodeType":"405","messageId":"406","endLine":61,"endColumn":4},{"ruleId":"413","severity":1,"message":"414","line":53,"column":8,"nodeType":"349","endLine":53,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":58,"column":8,"nodeType":"349","endLine":58,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":63,"column":8,"nodeType":"349","endLine":63,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":110,"column":6,"nodeType":"349","endLine":110,"endColumn":18},{"ruleId":"413","severity":1,"message":"414","line":170,"column":6,"nodeType":"349","endLine":170,"endColumn":18},{"ruleId":"413","severity":1,"message":"414","line":213,"column":6,"nodeType":"349","endLine":213,"endColumn":18},{"ruleId":"413","severity":1,"message":"414","line":247,"column":5,"nodeType":"349","endLine":247,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":273,"column":5,"nodeType":"349","endLine":273,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":298,"column":5,"nodeType":"349","endLine":298,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":318,"column":6,"nodeType":"349","endLine":318,"endColumn":18},{"ruleId":"347","severity":1,"message":"348","line":32,"column":7,"nodeType":"349","endLine":37,"endColumn":9},{"ruleId":"413","severity":1,"message":"414","line":9,"column":5,"nodeType":"349","endLine":9,"endColumn":17},{"ruleId":"413","severity":1,"message":"414","line":12,"column":5,"nodeType":"349","endLine":12,"endColumn":17},{"ruleId":"372","severity":1,"message":"373","line":15,"column":41,"nodeType":"374","endLine":15,"endColumn":56},{"ruleId":"413","severity":1,"message":"414","line":20,"column":9,"nodeType":"349","endLine":20,"endColumn":21},{"ruleId":"372","severity":1,"message":"373","line":23,"column":44,"nodeType":"374","endLine":23,"endColumn":59},{"ruleId":"413","severity":1,"message":"414","line":40,"column":11,"nodeType":"349","endLine":40,"endColumn":23},{"ruleId":"388","severity":1,"message":"415","line":6,"column":8,"nodeType":"390","messageId":"391","endLine":6,"endColumn":10},{"ruleId":"388","severity":1,"message":"416","line":7,"column":8,"nodeType":"390","messageId":"391","endLine":7,"endColumn":10},{"ruleId":"388","severity":1,"message":"417","line":8,"column":8,"nodeType":"390","messageId":"391","endLine":8,"endColumn":10},{"ruleId":"388","severity":1,"message":"418","line":9,"column":10,"nodeType":"390","messageId":"391","endLine":9,"endColumn":19},{"ruleId":"388","severity":1,"message":"419","line":9,"column":21,"nodeType":"390","messageId":"391","endLine":9,"endColumn":30},{"ruleId":"388","severity":1,"message":"420","line":9,"column":32,"nodeType":"390","messageId":"391","endLine":9,"endColumn":41},{"ruleId":"388","severity":1,"message":"421","line":9,"column":43,"nodeType":"390","messageId":"391","endLine":9,"endColumn":47},{"ruleId":"413","severity":1,"message":"414","line":81,"column":9,"nodeType":"349","endLine":81,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":86,"column":8,"nodeType":"349","endLine":86,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":90,"column":8,"nodeType":"349","endLine":90,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":133,"column":6,"nodeType":"349","endLine":133,"endColumn":18},{"ruleId":"413","severity":1,"message":"414","line":157,"column":6,"nodeType":"349","endLine":157,"endColumn":18},{"ruleId":"388","severity":1,"message":"415","line":6,"column":8,"nodeType":"390","messageId":"391","endLine":6,"endColumn":10},{"ruleId":"388","severity":1,"message":"416","line":7,"column":8,"nodeType":"390","messageId":"391","endLine":7,"endColumn":10},{"ruleId":"388","severity":1,"message":"417","line":8,"column":8,"nodeType":"390","messageId":"391","endLine":8,"endColumn":10},{"ruleId":"413","severity":1,"message":"414","line":36,"column":9,"nodeType":"349","endLine":36,"endColumn":21},{"ruleId":"413","severity":1,"message":"414","line":41,"column":8,"nodeType":"349","endLine":41,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":45,"column":8,"nodeType":"349","endLine":45,"endColumn":20},{"ruleId":"413","severity":1,"message":"414","line":60,"column":6,"nodeType":"349","endLine":60,"endColumn":18},"no-native-reassign",["422"],"no-negated-in-lhs",["423"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["422"],["423"],["422"],["423"],["422"],["423"],["422"],["423"],["422"],["423"],["422"],["423"],["422"],["423"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'CLIENTS'. Either include it or remove the dependency array.","ArrayExpression",["424"],"React Hook useEffect has missing dependencies: 'itemKey' and 'onFilesChange'. Either include them or remove the dependency array. If 'onFilesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["425"],["422"],["423"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'getClient', 'getOrders', and 'id'. Either include them or remove the dependency array.",["426"],"no-useless-escape","Unnecessary escape character: \\'.","TemplateElement","unnecessaryEscape",["427","428"],["429","430"],["431","432"],"React Hook useEffect has missing dependencies: 'ORDER_ID', 'QUERY', and 'getOrder'. Either include them or remove the dependency array.",["433"],["422"],["423"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["434"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'mode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'QUERY'. Either include it or remove the dependency array.",["435"],"React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["436"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'clients'. Either include it or remove the dependency array.",["437"],"React Hook useEffect has a missing dependency: 'getQuotes'. Either include it or remove the dependency array.",["438"],"React Hook useEffect has missing dependencies: 'quote' and 'quote_id'. Either include them or remove the dependency array.",["439"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'A1' is defined but never used.","'A2' is defined but never used.","'A3' is defined but never used.","'Jumbotron' is defined but never used.","'ListGroup' is defined but never used.","'CardGroup' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"messageId":"446","fix":"447","desc":"448"},{"messageId":"449","fix":"450","desc":"451"},{"messageId":"446","fix":"452","desc":"448"},{"messageId":"449","fix":"453","desc":"451"},{"messageId":"446","fix":"454","desc":"448"},{"messageId":"449","fix":"455","desc":"451"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},"Update the dependencies array to be: [CLIENTS]",{"range":"470","text":"471"},"Update the dependencies array to be: [files, avi, onFilesChange, itemKey]",{"range":"472","text":"473"},"Update the dependencies array to be: [getClient, getOrders, id]",{"range":"474","text":"475"},"removeEscape",{"range":"476","text":"477"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"478","text":"479"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"480","text":"477"},{"range":"481","text":"479"},{"range":"482","text":"477"},{"range":"483","text":"479"},"Update the dependencies array to be: [ORDER_ID, QUERY, UPDATING, getOrder]",{"range":"484","text":"485"},"Update the dependencies array to be: [ORDER, ITEMS, PROMPT, PROMPTKEY, getOrder]",{"range":"486","text":"487"},"Update the dependencies array to be: [QUERY]",{"range":"488","text":"489"},"Update the dependencies array to be: [ORDERS, CLIENTS, FILTERED_ORDERS, getOrders]",{"range":"490","text":"491"},"Update the dependencies array to be: [clients]",{"range":"492","text":"493"},"Update the dependencies array to be: [quotes, filtered_quotes, getQuotes]",{"range":"494","text":"495"},"Update the dependencies array to be: [quote, quote_id]",{"range":"496","text":"497"},[877,879],"[CLIENTS]",[902,916],"[files, avi, onFilesChange, itemKey]",[1522,1524],"[getClient, getOrders, id]",[2535,2536],"",[2535,2535],"\\",[2986,2987],[2986,2986],[5011,5012],[5011,5011],[2081,2093],"[ORDER_ID, QUERY, UPDATING, getOrder]",[1791,1826],"[ORDER, ITEMS, PROMPT, PROMPTKEY, getOrder]",[1015,1017],"[QUERY]",[1244,1280],"[ORDERS, CLIENTS, FILTERED_ORDERS, getOrders]",[1168,1170],"[clients]",[1210,1237],"[quotes, filtered_quotes, getQuotes]",[1437,1439],"[quote, quote_id]"]