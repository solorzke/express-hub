[{"/Users/solorzke/Documents/Developer/express-hub/src/App.js":"1","/Users/solorzke/Documents/Developer/express-hub/src/index.js":"2","/Users/solorzke/Documents/Developer/express-hub/src/pages/Index.js":"3","/Users/solorzke/Documents/Developer/express-hub/src/data/Cookie.js":"4","/Users/solorzke/Documents/Developer/express-hub/src/pages/Home.js":"5","/Users/solorzke/Documents/Developer/express-hub/src/components/Wrapper/Wrapper.js":"6","/Users/solorzke/Documents/Developer/express-hub/src/components/Drawer/Drawer.js":"7","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Index.js":"8","/Users/solorzke/Documents/Developer/express-hub/src/data/Config.js":"9","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Client.js":"10","/Users/solorzke/Documents/Developer/express-hub/src/components/Toast/Toast.js":"11","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Order.js":"12","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Input.js":"13","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Horizontal.js":"14","/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Index.js":"15","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Files.js":"16","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Items.js":"17","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Prompt.js":"18","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Submit.js":"19","/Users/solorzke/Documents/Developer/express-hub/src/components/Receipt/Receipt.js":"20","/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Confirm.js":"21","/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Back.js":"22","/Users/solorzke/Documents/Developer/express-hub/src/pages/404.js":"23","/Users/solorzke/Documents/Developer/express-hub/src/components/TextEditor/Editor.js":"24","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Search.js":"25","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Select.js":"26","/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Client.js":"27","/Users/solorzke/Documents/Developer/express-hub/src/components/Files/File.js":"28","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Card.js":"29","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Order.js":"30","/Users/solorzke/Documents/Developer/express-hub/src/components/Files/Item.js":"31","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Field.js":"32","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Empty.js":"33","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/UpdateField.js":"34","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Loading.js":"35","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/UpdateItems.js":"36","/Users/solorzke/Documents/Developer/express-hub/src/data/InputTypes.js":"37","/Users/solorzke/Documents/Developer/express-hub/src/components/Undo/Undo.js":"38","/Users/solorzke/Documents/Developer/express-hub/src/pages/Search/Index.js":"39","/Users/solorzke/Documents/Developer/express-hub/src/pages/Settings/Index.js":"40","/Users/solorzke/Documents/Developer/express-hub/src/data/UserInputTypes.js":"41","/Users/solorzke/Documents/Developer/express-hub/src/pages/ForgotPassword.js":"42","/Users/solorzke/Documents/Developer/express-hub/src/data/ClientInputTypes.js":"43","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Index.js":"44","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/LoadingPage.js":"45","/Users/solorzke/Documents/Developer/express-hub/src/data/TableHeadings.js":"46","/Users/solorzke/Documents/Developer/express-hub/src/data/Dates.js":"47","/Users/solorzke/Documents/Developer/express-hub/src/components/Paths/Paths.js":"48","/Users/solorzke/Documents/Developer/express-hub/src/data/Location.js":"49"},{"size":2181,"mtime":1615262361728,"results":"50","hashOfConfig":"51"},{"size":236,"mtime":1613017589567,"results":"52","hashOfConfig":"51"},{"size":4908,"mtime":1615945612287,"results":"53","hashOfConfig":"51"},{"size":803,"mtime":1610675000910,"results":"54","hashOfConfig":"51"},{"size":1203,"mtime":1611934783128,"results":"55","hashOfConfig":"51"},{"size":886,"mtime":1615864507438,"results":"56","hashOfConfig":"51"},{"size":2471,"mtime":1615897423371,"results":"57","hashOfConfig":"51"},{"size":1561,"mtime":1615940104476,"results":"58","hashOfConfig":"51"},{"size":369,"mtime":1610665560430,"results":"59","hashOfConfig":"51"},{"size":7041,"mtime":1616127405279,"results":"60","hashOfConfig":"51"},{"size":472,"mtime":1611371613301,"results":"61","hashOfConfig":"51"},{"size":8581,"mtime":1616024459584,"results":"62","hashOfConfig":"51"},{"size":408,"mtime":1613506470896,"results":"63","hashOfConfig":"51"},{"size":378,"mtime":1614984929511,"results":"64","hashOfConfig":"51"},{"size":4474,"mtime":1615502701688,"results":"65","hashOfConfig":"51"},{"size":5096,"mtime":1614453868580,"results":"66","hashOfConfig":"51"},{"size":8378,"mtime":1615939860271,"results":"67","hashOfConfig":"51"},{"size":1541,"mtime":1611953593440,"results":"68","hashOfConfig":"51"},{"size":5659,"mtime":1615939686426,"results":"69","hashOfConfig":"51"},{"size":4127,"mtime":1615942954415,"results":"70","hashOfConfig":"51"},{"size":812,"mtime":1615910324095,"results":"71","hashOfConfig":"51"},{"size":657,"mtime":1614270603274,"results":"72","hashOfConfig":"51"},{"size":139,"mtime":1611862629526,"results":"73","hashOfConfig":"51"},{"size":1242,"mtime":1612564506693,"results":"74","hashOfConfig":"51"},{"size":1343,"mtime":1615518969888,"results":"75","hashOfConfig":"51"},{"size":947,"mtime":1615946135905,"results":"76","hashOfConfig":"51"},{"size":9536,"mtime":1616127067723,"results":"77","hashOfConfig":"51"},{"size":477,"mtime":1613084235913,"results":"78","hashOfConfig":"51"},{"size":644,"mtime":1615417300830,"results":"79","hashOfConfig":"51"},{"size":12021,"mtime":1615941991026,"results":"80","hashOfConfig":"51"},{"size":2087,"mtime":1614446850882,"results":"81","hashOfConfig":"51"},{"size":3815,"mtime":1615867011465,"results":"82","hashOfConfig":"51"},{"size":297,"mtime":1613087581957,"results":"83","hashOfConfig":"51"},{"size":8492,"mtime":1615423192818,"results":"84","hashOfConfig":"51"},{"size":118,"mtime":1615225224585,"results":"85","hashOfConfig":"51"},{"size":19234,"mtime":1615849412806,"results":"86","hashOfConfig":"51"},{"size":1592,"mtime":1613677735899,"results":"87","hashOfConfig":"51"},{"size":331,"mtime":1614270990932,"results":"88","hashOfConfig":"51"},{"size":5601,"mtime":1615865848382,"results":"89","hashOfConfig":"51"},{"size":4735,"mtime":1615940289380,"results":"90","hashOfConfig":"51"},{"size":685,"mtime":1615001026618,"results":"91","hashOfConfig":"51"},{"size":4110,"mtime":1615945059958,"results":"92","hashOfConfig":"51"},{"size":1252,"mtime":1615243097741,"results":"93","hashOfConfig":"51"},{"size":8699,"mtime":1615866219267,"results":"94","hashOfConfig":"51"},{"size":420,"mtime":1615422249242,"results":"95","hashOfConfig":"51"},{"size":1932,"mtime":1615332230612,"results":"96","hashOfConfig":"51"},{"size":861,"mtime":1615583636690,"results":"97","hashOfConfig":"51"},{"size":706,"mtime":1615913733033,"results":"98","hashOfConfig":"51"},{"size":3006,"mtime":1615993247049,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1rqwsr9",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"132"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"105"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"105"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/solorzke/Documents/Developer/express-hub/src/App.js",[],["216","217"],"/Users/solorzke/Documents/Developer/express-hub/src/index.js",[],["218","219"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Index.js",["220"],"import React, { useEffect, useState } from 'react';\nimport Logo from '../teloentrego.png';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { Config } from '../data/Config';\nimport { Cookie } from '../data/Cookie';\nimport '../css/login.css';\n\nconst Index = () => {\n\tconst [ progress, setProgress ] = useState(false);\n\tconst [ area, setArea ] = useState('login');\n\n\tuseEffect(() => {\n\t\t//Initialize Firebase app if it hasn't already\n\t\tfirebase.apps.length === 0 ? firebase.initializeApp(Config) : firebase.app();\n\t});\n\n\tconst authenticate = async (e) => {\n\t\te.preventDefault();\n\t\tsetProgress(true);\n\t\tlet email = document.getElementById('email').value;\n\t\tlet password = document.getElementById('password').value;\n\t\ttry {\n\t\t\tconst user = await firebase.auth().signInWithEmailAndPassword(email, password);\n\t\t\tconst store = await firebase.firestore().collection('users').doc(user.user.uid).get();\n\t\t\tCookie.setCookie('fname', store.data().fname);\n\t\t\tCookie.setCookie('uid', user.user.uid);\n\t\t\tsetProgress(false);\n\t\t\twindow.location.href = '/new-order';\n\t\t} catch (error) {\n\t\t\tsetProgress(false);\n\t\t\talert(error.message);\n\t\t}\n\t};\n\n\tconst onPasswordReset = (setFinish) => {\n\t\tconst email = document.getElementById('email-for-request').value;\n\t\t//Send password reset request here\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.sendPasswordResetEmail(email)\n\t\t\t.then(() => {\n\t\t\t\tconsole.log('> Firebase: Password reset request sent to the email associated with the account');\n\t\t\t\tsetFinish(true);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(\"> Firebase: Password reset request couldn't be sent.\");\n\t\t\t\tsetFinish(false);\n\t\t\t\talert('Password request failed. Check your email address and type it again.');\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"login login-body\">\n\t\t\t<main className=\"login-login-container\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t<img src={Logo} height=\"400\" width=\"550\" />\n\t\t\t\t\t\t\t<h2 className=\"pt-5 text-center jo-font\">\n\t\t\t\t\t\t\t\tShipping &amp; Packaging At Its Finest! Across the USA &amp; South America\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<p className=\"pt-5 text-center jo-font\">\n\t\t\t\t\t\t\t\tA Different Kind Of Company. A Different Kind Of Express Shipping.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col d-flex justify-content-center align-content-end flex-column\">\n\t\t\t\t\t\t\t{area === 'login' && (\n\t\t\t\t\t\t\t\t<LoginBox\n\t\t\t\t\t\t\t\t\tauthenticate={authenticate.bind(this)}\n\t\t\t\t\t\t\t\t\tprogress={progress}\n\t\t\t\t\t\t\t\t\tonClick={setArea}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{area === 'forgot-pw' && (\n\t\t\t\t\t\t\t\t<ForgotPasswordBox onPasswordReset={onPasswordReset.bind(this)} onClick={setArea} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t\t<footer>\n\t\t\t\t<p id=\"footer\" className=\"text-center\" />\n\t\t\t</footer>\n\t\t</div>\n\t);\n};\n\nconst LoginBox = ({ authenticate, progress, onClick }) => (\n\t<React.Fragment>\n\t\t<h1 className=\"text-center jo-font\">Teloentrego</h1>\n\t\t<form onSubmit={authenticate}>\n\t\t\t<input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email address\" required />\n\t\t\t<br />\n\t\t\t<input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required />\n\t\t\t<br />\n\t\t\t{progress && <i className=\"fas fa-spinner fa-pulse py-3\" />}\n\t\t\t<input type=\"submit\" value=\"Sign In\" className=\"login-login-btn btn btn-light\" />\n\t\t</form>\n\t\t<p className=\"p-3 text-center\">\n\t\t\tForgot Password?\n\t\t\t<button className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\" onClick={() => onClick('forgot-pw')}>\n\t\t\t\tRecover it now!\n\t\t\t</button>\n\t\t</p>\n\t</React.Fragment>\n);\n\nconst ForgotPasswordBox = ({ onPasswordReset, onClick }) => {\n\tconst [ FINISHED, setFinish ] = useState(false);\n\n\tconst handleFormSubmit = (e) => {\n\t\te.preventDefault();\n\t\tonPasswordReset(setFinish);\n\t};\n\n\treturn (\n\t\t<div className=\"animate__animated animate__fadeInRight text-center\">\n\t\t\t<h1 className=\"text-center\">Reset Password</h1>\n\t\t\t{!FINISHED && <PasswordForm onSubmit={handleFormSubmit.bind(this)} onClick={onClick} />}\n\t\t\t{FINISHED && (\n\t\t\t\t<h2 className=\"animate__animated animate__fadeIn text-center\">\n\t\t\t\t\tPassword reset request was sent to your email address.\n\t\t\t\t</h2>\n\t\t\t)}\n\t\t\t{FINISHED && (\n\t\t\t\t<button onClick={() => onClick('login')} className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\">\n\t\t\t\t\tGo Back to Login\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst PasswordForm = (props) => (\n\t<React.Fragment>\n\t\t<form onSubmit={props.onSubmit}>\n\t\t\t<input\n\t\t\t\tname=\"email-for-request\"\n\t\t\t\tid=\"email-for-request\"\n\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\ttype=\"email\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<input type=\"submit\" value=\"Recover Password\" className=\"login-login-btn btn btn-light\" />\n\t\t</form>\n\t\t<p className=\"p-3 text-center\">\n\t\t\tRemember Password?\n\t\t\t<button className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\" onClick={() => props.onClick('login')}>\n\t\t\t\tLogin In\n\t\t\t</button>\n\t\t</p>\n\t</React.Fragment>\n);\n\nexport default Index;\n","/Users/solorzke/Documents/Developer/express-hub/src/data/Cookie.js",[],["221","222"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Home.js",[],["223","224"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Wrapper/Wrapper.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Drawer/Drawer.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Index.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/Config.js",[],["225","226"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Client.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Toast/Toast.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Order.js",["227"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Input.js",[],["228","229"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Horizontal.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Index.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Files.js",["230","231"],"import React, { useState, useRef, useEffect } from 'react';\nimport { Accordion, Card, Button, ListGroup } from 'react-bootstrap';\nimport './Files.css';\n\nconst FileInput = ({ itemName, quantity, onDelete, onFilesChange, itemKey, onUpdate }) => {\n\t//Refs target the hidden inputs for avi and files, and the avi image element\n\tlet aviRef = useRef(null);\n\tlet aviInputRef = useRef(null);\n\tlet fileRef = useRef(null);\n\t//State props for tracking the files, avi, and key data. Key references the eventKey for triggering the collapse or reveal\n\t//effect, not to be confused with object keys.\n\tconst [ files, setFiles ] = useState([]);\n\tconst [ avi, setAvi ] = useState(null);\n\tconst [ key, setKey ] = useState('1');\n\n\t//Set default image if necessary, and log changes to the files and avi state, such as files uploaded\n\tuseEffect(\n\t\t() => {\n\t\t\tsetDefaultImage();\n\t\t\tonFilesChange(files, avi, itemKey);\n\t\t},\n\t\t[ files, avi ]\n\t);\n\n\t//Track changes to the input ref for avi image of the item, update its data to the state, and set the img source to\n\t//the uploaded avi image.\n\tconst onAviChange = (e) => {\n\t\tconst url = URL.createObjectURL(e.target.files[0]);\n\t\taviRef.current.src = url;\n\t\tsetAvi(e.target.files[0]);\n\t};\n\n\t//Set a default image from a url to the avi as a placeholder until it is changed\n\tconst setDefaultImage = () => {\n\t\tconst url = 'https://www.nbmchealth.com/wp-content/uploads/rem/2018/04/default-placeholder.png';\n\t\tif (aviRef.current.src === '') {\n\t\t\taviRef.current.src = url;\n\t\t\tsetAvi(url);\n\t\t}\n\t};\n\n\t//Track what type of action the onClick function was triggered for and execute its case subroutine\n\tconst onClick = (type) => {\n\t\tswitch (type) {\n\t\t\tcase 'avi':\n\t\t\t\taviInputRef.current.click();\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\tfileRef.current.click();\n\t\t}\n\t};\n\n\t//Update the files state by uploading the entire files' object/array from the event obj and set the event key to 0.\n\t//'0' meaning trigger the Accordian Body reveal with the file items displayed vs. '1' meaning hide the Accordian Body\n\tconst addFile = (e) => {\n\t\tconst inputFiles = e.target.files;\n\t\tObject.keys(inputFiles).forEach((item) => setFiles((state) => [ ...state, inputFiles[item] ]));\n\t\tif (key !== 0) setKey('0');\n\t};\n\n\t//Extract and remove the file item by matching the index of the item in the filter loop.\n\tconst removeItem = (i) => {\n\t\tlet copy = files;\n\t\tconst filtered_array = copy.filter((item, index) => index !== i);\n\t\tif (filtered_array.length === 0) setKey('1');\n\t\tsetFiles(filtered_array);\n\t};\n\n\treturn (\n\t\t<div className=\"w-100\">\n\t\t\t<Accordion>\n\t\t\t\t<Card>\n\t\t\t\t\t<Card.Header className=\"px-2 py-0\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-2 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t\t<button className=\"btn btn-default btn-file\" onClick={() => onClick('avi')}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tonChange={onAviChange}\n\t\t\t\t\t\t\t\t\t\tref={aviInputRef}\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\tid=\"avi-1\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<img ref={aviRef} className=\"text-center\" height=\"50\" width=\"50\" id=\"avi\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-10 pl-3 text-left pt-2\">\n\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\teventKey=\"0\"\n\t\t\t\t\t\t\t\t\tclassName=\"p-0 float-right d-inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-chevron-down float-right\" />\n\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t<span className=\"d-inline\">\n\t\t\t\t\t\t\t\t\t<h5 className=\"d-inline\">{itemName}</h5>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tQuantity: {quantity}\n\t\t\t\t\t\t\t\t\t\t<span className=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onClick('file')}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={fileRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-link py-0 px-3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={addFile}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\tAdd File(s)\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={onUpdate}>\n\t\t\t\t\t\t\t\t\t\t\t\tUpdate Item\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={onDelete}>\n\t\t\t\t\t\t\t\t\t\t\t\tRemove Item\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t<Accordion.Collapse eventKey={key}>\n\t\t\t\t\t\t<Card.Body className=\"p-0\">\n\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t{files.map((item, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"file-item\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tborderBottom: index === files.length - 1 ? '1px solid #e8e8e8' : ''\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger float-right\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => removeItem(index)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n};\n\nexport default FileInput;\n",["232","233"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Items.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Prompt.js",[],["234","235"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Submit.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Receipt/Receipt.js",["236","237","238"],"/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Confirm.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Back.js",[],["239","240"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/404.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/TextEditor/Editor.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Search.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Select.js",[],["241","242"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Client.js",["243","244","245","246"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Files/File.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Card.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Order.js",["247","248","249","250"],"import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Accordion, Card, ListGroup, Button, Breadcrumb, Dropdown } from 'react-bootstrap';\nimport { fieldTypes } from '../../data/InputTypes';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport SlideCard from '../../components/SlideCard/Card';\nimport Field from '../../components/SlideCard/Field';\nimport Empty from '../../components/Placeholders/Empty';\nimport Loading from '../../components/Placeholders/Loading';\nimport Toast from '../../components/Toast/Toast';\nimport Receipt from '../../components/Receipt/Receipt';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport { Config } from '../../data/Config';\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst Order = () => <Wrapper children={<Body />} current=\"Orders\" active=\"orders\" />;\n\nconst Body = () => {\n\tlet QUERY = useQuery();\n\tconst ORDER_ID = QUERY.get('id');\n\tconst confirm_message =\n\t\t'Are you sure you want to delete this order? All docs and information will be erased and cannot be recovered.';\n\tconst [ FNAME, setFname ] = useState('');\n\tconst [ LNAME, setLname ] = useState('');\n\tconst [ ORDER, setOrder ] = useState(null);\n\tconst [ UPDATING, setUpdating ] = useState(false);\n\t//State data that control the toast message\n\tconst [ toast, setToast ] = useState(false);\n\tconst [ img, setImg ] = useState('fas fa-spinner fa-pulse');\n\tconst [ message, setMessage ] = useState('Deleting Order');\n\tconst [ heading, setHeading ] = useState('Data is being deleted...');\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetFname(QUERY.get('fname').replace('%20', ' '));\n\t\t\tsetLname(QUERY.get('lname').replace('%20', ' '));\n\t\t\tgetOrder();\n\t\t},\n\t\t[ UPDATING ]\n\t);\n\n\t//Set the state for the toast props\n\tconst setToastProps = (toastImg, toastHeading, toastMessage, log, action) => {\n\t\tsetImg(toastImg);\n\t\tsetHeading(toastHeading);\n\t\tsetMessage(toastMessage);\n\t\tconsole.log(log);\n\t\tsetTimeout(() => {\n\t\t\tsetToast(false);\n\t\t\tsetImg('fas fa-spinner fa-pulse');\n\t\t\tsetHeading('Deleting Client and their orders...');\n\t\t\tsetMessage('Deleting Client');\n\t\t\tconsole.log('Toast Props set to normal.');\n\t\t\tif (action) window.location.href = '/orders';\n\t\t}, 3000);\n\t};\n\n\t//Get the order data from the firestore based on the orderId\n\tconst getOrder = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('orders').where('orderId', '==', ORDER_ID).get();\n\t\t\tif (snapshot.empty) return alert(\"> Firebase: Didn't return any orders\");\n\t\t\tlet order_doc = [];\n\t\t\tsnapshot.forEach((doc) => order_doc.push(doc.data()));\n\t\t\tsetOrder(order_doc[0]);\n\t\t} catch (error) {\n\t\t\tconsole.log('> Firebase: Error with the request.');\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Update order to the firestore and refresh the page afterwards\n\tconst updateOrder = async (e, data) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tsetUpdating(true);\n\t\t\tconst value = Object.values(data)[0];\n\t\t\tif (value === '' && typeof value !== 'boolean') return alert('Please enter a value before updating');\n\t\t\tawait Firebase.firestore().collection('orders').doc(ORDER_ID).update(data);\n\t\t\twindow.location.reload();\n\t\t} catch (error) {\n\t\t\tsetUpdating(false);\n\t\t\tconsole.log(\"> Firebase: Request couldn't go through\");\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t/* \n\t\tDelete the order from firestore and storage platforms\n\t\t1. Get the order id first\n\t\t2. Use the order id to delete the reference folder in storage that matches that id\n\t\t3. Finally delete the order id from the firestore\n\t\t4. Open a new page to /orders\n\t*/\n\tconst deleteOrder = async () => {\n\t\ttry {\n\t\t\tconst answer = window.confirm(confirm_message);\n\t\t\tif (answer) {\n\t\t\t\tsetToast(true);\n\t\t\t\tconst list = await Firebase.storage().ref(`images/${ORDER_ID}`).list();\n\t\t\t\tconst items = list.items;\n\t\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\t\tconst item_path = items[i]['_delegate']['_location']['path_'];\n\t\t\t\t\tawait Firebase.storage().ref(item_path).delete();\n\t\t\t\t}\n\t\t\t\tawait Firebase.firestore().collection('orders').doc(ORDER_ID).delete();\n\t\t\t\tsetToastProps(\n\t\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t\t'Order Deleted!',\n\t\t\t\t\t`The order was deleted from the cloud!`,\n\t\t\t\t\t`> Firebase: Order: ${ORDER_ID} and its information are deleted from the system.`,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"> Firebase: Couldn't process request.\");\n\t\t\tconsole.error(error);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-window-close toast-fail',\n\t\t\t\t'Failed',\n\t\t\t\t`Order couldn't be deleted!`,\n\t\t\t\t`> Firebase: Error couldnt send request.\\n ${error.message}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\t//Change the casing of every word in the string\n\tconst formatString = (str) => {\n\t\t//Check if its multi-word\n\t\tconst words = str.split(' ');\n\t\tconst newString = words.map((item) => item.charAt(0).toUpperCase() + item.slice(1));\n\t\treturn newString.join(' ');\n\t};\n\n\tif (ORDER === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container-fluid pt-3\">\n\t\t\t<Toast\n\t\t\t\tonClose={() => setToast(false)}\n\t\t\t\tshow={toast}\n\t\t\t\tmessage={message}\n\t\t\t\theading={heading}\n\t\t\t\timg={<i className={`${img} p-3`} />}\n\t\t\t/>\n\t\t\t<div className=\"row\">\n\t\t\t\t<Description\n\t\t\t\t\tstate={{ fname: FNAME, lname: LNAME }}\n\t\t\t\t\tformatString={formatString.bind(this)}\n\t\t\t\t\torderId={QUERY.get('id')}\n\t\t\t\t/>\n\t\t\t\t<ShipmentConfirmation\n\t\t\t\t\tshipped={ORDER.shippingStatus}\n\t\t\t\t\tonClick={updateOrder.bind(this)}\n\t\t\t\t\tprogress={UPDATING}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Paths />\n\t\t\t<Menu onDelete={deleteOrder.bind(this)} />\n\t\t\t<div className=\"row\">\n\t\t\t\t<SlideCard\n\t\t\t\t\tchildren={\n\t\t\t\t\t\t<Details\n\t\t\t\t\t\t\tstate={ORDER}\n\t\t\t\t\t\t\tformatString={formatString.bind(this)}\n\t\t\t\t\t\t\tonUpdate={updateOrder.bind(this)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\ttitle=\"Order Details\"\n\t\t\t\t\ticon=\"fas fa-list-alt pr-2\"\n\t\t\t\t/>\n\t\t\t\t<SlideCard\n\t\t\t\t\tchildren={<Documents state={ORDER} formatString={formatString.bind(this)} />}\n\t\t\t\t\ttitle=\"Documents\"\n\t\t\t\t\toptions={\n\t\t\t\t\t\t<a href={`/order/update-items?id=${ORDER_ID}`} className=\"btn btn-link\">\n\t\t\t\t\t\t\tAdd/Update Docs List\n\t\t\t\t\t\t</a>\n\t\t\t\t\t}\n\t\t\t\t\ticon=\"fas fa-clipboard-list pr-2\"\n\t\t\t\t/>\n\t\t\t\t<SlideCard\n\t\t\t\t\tchildren={\n\t\t\t\t\t\t<Receipt\n\t\t\t\t\t\t\tform={{\n\t\t\t\t\t\t\t\tclientName: formatString(`${FNAME} ${LNAME}`),\n\t\t\t\t\t\t\t\taddress: ORDER.address,\n\t\t\t\t\t\t\t\tcountry: ORDER.country,\n\t\t\t\t\t\t\t\tprovince: ORDER.province,\n\t\t\t\t\t\t\t\torderId: ORDER_ID,\n\t\t\t\t\t\t\t\tdate: ORDER.date\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tfiles={[]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\ttitle=\"Receipt\"\n\t\t\t\t\ticon=\"fas fa-receipt pr-2\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nconst Description = ({ state, formatString, orderId }) => (\n\t<div id=\"description\" className=\"col-md-7\">\n\t\t<h1>Order Number: {orderId}</h1>\n\t\t<p>\n\t\t\tFor Client: <strong>{state !== null ? formatString(`${state.fname} ${state.lname}`) : ''}</strong>\n\t\t</p>\n\t\t<p>\n\t\t\tBelow is an in depth look at the shipment order that was created including details about its destination,\n\t\t\tcargo items, and pertinent files/documents.\n\t\t</p>\n\t\t<p>\n\t\t\tYou can update the shipment status below when this order and its items are ready to be sent to the client.\n\t\t</p>\n\t\t<p>Update the contents of this order and add/remove any files or documents too.</p>\n\t</div>\n);\n\nconst ShipmentConfirmation = ({ shipped, onClick, progress }) => {\n\tconst itHasShipped = `Currently, this order has already been shipped`;\n\tconst hasNotShipped = `Currently, this order isn't marked for shipping yet.`;\n\tconst subtitle = shipped ? itHasShipped : hasNotShipped;\n\tconst btnText = shipped ? \"Change to 'Not ready to ship'\" : \"Confirm 'Ready to Ship'\";\n\tconst btnColor = shipped ? 'text-danger' : 'text-success';\n\treturn (\n\t\t<div id=\"shipment-confirmation\" className=\"col-md-5 d-flex justify-content-center align-items-end\">\n\t\t\t<Card>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t<i className=\"fas fa-dolly pr-3\" />Shipment Status\n\t\t\t\t\t</Card.Title>\n\t\t\t\t\t<Card.Subtitle className=\"mb-2 text-muted\">{subtitle}</Card.Subtitle>\n\t\t\t\t\t<Card.Text>Confirm this order is ready for shipping or revert its status.</Card.Text>\n\t\t\t\t\t<Card.Link\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tclassName={btnColor}\n\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\tonClick={(e) => onClick(e, { shippingStatus: !shipped })}\n\t\t\t\t\t>\n\t\t\t\t\t\t{progress ? <Loading /> : btnText}\n\t\t\t\t\t</Card.Link>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nconst Details = ({ state, formatString, onUpdate }) => {\n\tif (state !== null) {\n\t\tconst types = fieldTypes(state);\n\t\treturn (\n\t\t\t<div className=\"client-lists\">\n\t\t\t\t{types.map((item, index) => (\n\t\t\t\t\t<Field\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\ttypes={types}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tformatString={formatString}\n\t\t\t\t\t\tonUpdate={onUpdate}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n\treturn <Empty />;\n};\n\nconst Menu = ({ onDelete }) => (\n\t<Dropdown className=\"text-right mt-1\">\n\t\t<Dropdown.Toggle id=\"dropdown-basic\">\n\t\t\t<i className=\"fas fa-cog\" />\n\t\t</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Item href=\"#/action-2\">\n\t\t\t\t<i className=\"fas fa-download pr-2\" />\n\t\t\t\tDownload Order History\n\t\t\t</Dropdown.Item>\n\t\t\t<Dropdown.Item as={Button} onClick={onDelete}>\n\t\t\t\t<i className=\"fas fa-trash-alt pr-2\" />\n\t\t\t\tDelete Order\n\t\t\t</Dropdown.Item>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n);\n\nconst Documents = ({ state, formatString }) => {\n\tconst findFiles = (data, delimeter) => {\n\t\tlet files = [];\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst key = data[i];\n\t\t\tif (key !== delimeter) files.push({ name: key, path: state['item-images'][key] });\n\t\t}\n\t\treturn files;\n\t};\n\n\tif (state !== null) {\n\t\tconst images = Object.keys(state['item-images']);\n\t\treturn (\n\t\t\t<div className=\"items\">\n\t\t\t\t{state.items.map((item, index) => {\n\t\t\t\t\tconst itemKey = item.name.split(' ').join('');\n\t\t\t\t\tconst relevant_images = images.filter((key) => key.includes(itemKey));\n\t\t\t\t\tconst avi = relevant_images.filter((key) => `${itemKey}-avi` === key).join('');\n\t\t\t\t\tconst files = findFiles(relevant_images, avi);\n\t\t\t\t\tconst data = {\n\t\t\t\t\t\tavi: state['item-images'][avi],\n\t\t\t\t\t\tfiles: files,\n\t\t\t\t\t\tquantity: item.quantity,\n\t\t\t\t\t\tname: formatString(item.name)\n\t\t\t\t\t};\n\t\t\t\t\treturn <Item key={index} data={data} formatString={formatString} />;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n\treturn <Empty />;\n};\n\nconst Item = ({ data, formatString }) => {\n\tconst Header = () => (\n\t\t<Card.Header className=\"px-2 py-0\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-2 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t<a className=\"btn btn-default btn-file\" href={data.avi} target=\"_blank\">\n\t\t\t\t\t\t<img src={data.avi} className=\"text-center\" height=\"50\" width=\"50\" id=\"avi\" />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-10 pl-3 text-left pt-2\">\n\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className=\"p-0 float-right d-inline\">\n\t\t\t\t\t\t<i className=\"fas fa-chevron-down float-right\" />\n\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t<span className=\"d-inline\">\n\t\t\t\t\t\t<h5 className=\"d-inline\">{formatString(data.name)}</h5>\n\t\t\t\t\t\t<p>Quantity: {data.quantity}</p>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Card.Header>\n\t);\n\n\tconst Body = () => (\n\t\t<Accordion.Collapse eventKey={'0'}>\n\t\t\t<Card.Body className=\"p-0\">\n\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t{data.files.map((item, index) => <ListItem key={index} item={item} index={index} />)}\n\t\t\t\t</ListGroup>\n\t\t\t</Card.Body>\n\t\t</Accordion.Collapse>\n\t);\n\n\tconst ListItem = ({ item, index }) => (\n\t\t<ListGroup.Item\n\t\t\t// key={index}\n\t\t\tclassName=\"file-item\"\n\t\t\tstyle={{\n\t\t\t\tborderBottom: index === data.files.length - 1 ? '1px solid #e8e8e8' : ''\n\t\t\t}}\n\t\t>\n\t\t\t<a href={item.path} target=\"_blank\">\n\t\t\t\t{item.name}\n\t\t\t</a>\n\t\t</ListGroup.Item>\n\t);\n\n\treturn (\n\t\t<div className=\"w-100\">\n\t\t\t<Accordion>\n\t\t\t\t<Card>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Body />\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n};\n\nconst Paths = () => (\n\t<Breadcrumb className=\"py-2\">\n\t\t<Breadcrumb.Item href={document.referrer}>Back to Origin</Breadcrumb.Item>\n\t\t<Breadcrumb.Item active>Order</Breadcrumb.Item>\n\t</Breadcrumb>\n);\n\nexport default Order;\n","/Users/solorzke/Documents/Developer/express-hub/src/components/Files/Item.js",["251"],"/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Field.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Empty.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/UpdateField.js",["252"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Loading.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/UpdateItems.js",["253","254","255"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Config } from '../../data/Config';\nimport { useLocation } from 'react-router-dom';\nimport { Accordion, Button, ListGroup, Card } from 'react-bootstrap';\nimport SlideCard from '../../components/SlideCard/Card';\nimport Loading from '../../components/Placeholders/Loading';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport BackButton from '../../components/BackButton/Back';\nimport Input from '../../components/Inputs/Input';\nimport Prompt from '../../components/Inputs/Prompt';\nimport Toast from '../../components/Toast/Toast';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst UpdateItems = () => <Wrapper children={<Body />} active=\"orders\" current=\"Update Items List\" />;\n\nconst Body = () => {\n\tconst ORDER_ID = useQuery().get('id');\n\tconst [ ORDER, setOrder ] = useState(null);\n\tconst [ ITEMS, setItems ] = useState({});\n\tconst [ PROMPT, setPrompt ] = useState(false);\n\tconst [ PROMPTKEY, setPromptKey ] = useState(null);\n\t//State data that control the toast message\n\tconst [ toast, setToast ] = useState(false);\n\tconst [ img, setImg ] = useState('fas fa-spinner fa-pulse');\n\tconst [ message, setMessage ] = useState('Updating Order...');\n\tconst [ heading, setHeading ] = useState('Collecting files and updating them to the cloud');\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (ORDER === null) getOrder();\n\t\t\tif (ORDER !== null) {\n\t\t\t\tdocument.getElementById('item').value = '';\n\t\t\t\tdocument.getElementById('quantity').value = '1';\n\t\t\t}\n\t\t},\n\t\t[ ORDER, ITEMS, PROMPT, PROMPTKEY ]\n\t);\n\n\t//Set the state for the toast props\n\tconst setToastProps = (toastImg, toastHeading, toastMessage, log, action) => {\n\t\tsetImg(toastImg);\n\t\tsetHeading(toastHeading);\n\t\tsetMessage(toastMessage);\n\t\tconsole.log(log);\n\t\tsetTimeout(() => {\n\t\t\tsetToast(false);\n\t\t\tsetImg('fas fa-spinner fa-pulse');\n\t\t\tsetHeading('Deleting Client and their orders...');\n\t\t\tsetMessage('Deleting Client');\n\t\t\tconsole.log('Toast Props set to normal.');\n\t\t\tif (action) window.location.href = '/orders';\n\t\t}, 3000);\n\t};\n\n\t//On submission of the form, create an obj of all the items and its files and proceed to the next page\n\tconst onItemSubmit = (e) => {\n\t\te.preventDefault();\n\t\taddItem();\n\t};\n\n\t//Add the item and its quanity from the form to the state\n\tconst addItem = () => {\n\t\t//Check if the input is empty\n\t\tif (document.getElementById('item').value === '') return alert('Enter an item.');\n\t\tif (itemAlreadyExists(document.getElementById('item').value.toLowerCase()))\n\t\t\treturn alert('Item is already added. Add a new one');\n\t\tconst item = document.getElementById('item').value.toLowerCase();\n\t\tconst key = createObjectKey(item);\n\t\tconst quantity = document.getElementById('quantity').value;\n\t\tsetItems({ ...ITEMS, [key]: { name: item, quantity: quantity, files: [] } });\n\t};\n\n\tconst getOrder = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('orders').where('orderId', '==', ORDER_ID).get();\n\t\t\tlet order_doc = [];\n\t\t\tsnapshot.forEach((item) => order_doc.push(item.data()));\n\t\t\tsetOrder(order_doc[0]);\n\t\t\torder_doc[0].items.map((item) => {\n\t\t\t\tconst key = createObjectKey(item.name);\n\t\t\t\tconst docKeys = Object.keys(order_doc[0]['item-images']);\n\t\t\t\tconst avi = docKeys.filter((docKey) => docKey === `${key}-avi`);\n\t\t\t\tconst relevantDocs = docKeys\n\t\t\t\t\t.filter((docKey) => docKey.includes(key) && docKey !== `${key}-avi`)\n\t\t\t\t\t.map((doc) => ({ name: doc, path: order_doc[0]['item-images'][doc] }));\n\t\t\t\tconst data = {\n\t\t\t\t\t[key]: {\n\t\t\t\t\t\tquantity: item.quantity,\n\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\tavi: { path: order_doc[0]['item-images'][avi[0]] },\n\t\t\t\t\t\tfiles: relevantDocs\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tsetItems((STATE) => ({ ...STATE, ...data }));\n\t\t\t});\n\t\t\tconsole.log('> Firebase: Order retrieved!');\n\t\t} catch (error) {\n\t\t\tconsole.error('> Firebase: Could not proceed with request');\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Extract and remove the file item by matching the index of the item in the filter loop.\n\tconst onRemoveFile = async (index, itemKey, stateHandler) => {\n\t\tstateHandler(index);\n\t\tlet copy = ITEMS[itemKey]['files'][index];\n\t\tconst FieldValue = Firebase.firestore.FieldValue;\n\t\tconsole.log(copy);\n\t\tconst filtered_files = ITEMS[itemKey]['files'].filter((item, i) => index !== i);\n\t\tawait Firebase.storage().ref(`images/${ORDER_ID}/${copy.name}`).delete().catch((e) => console.error(e));\n\t\tawait Firebase.firestore()\n\t\t\t.collection('orders')\n\t\t\t.doc(ORDER_ID)\n\t\t\t.update({\n\t\t\t\t['item-images.' + copy.name]: FieldValue.delete()\n\t\t\t})\n\t\t\t.catch((e) => console.error(e));\n\t\t// await Firebase.storage().ref(`images/${ORDER_ID}`).child(copy.name).delete();\n\t\tsetItems((STATE) => ({\n\t\t\t...STATE,\n\t\t\t[itemKey]: {\n\t\t\t\t...STATE[itemKey],\n\t\t\t\tfiles: filtered_files\n\t\t\t}\n\t\t}));\n\t\tstateHandler(false);\n\t};\n\n\t//Once the Update/Save button is clicked, move on to the next page with the state item data passed in\n\tconst onFinish = async (e) => {\n\t\ttry {\n\t\t\te.preventDefault();\n\t\t\tsetToast(true);\n\t\t\tif (Object.keys(ITEMS).length === 0) return alert('Please add at least one item for your order.');\n\t\t\tconst payload = await uploadFilesToStorage();\n\t\t\tconst response = await updateOrderToFirestore(payload);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t'Update Complete!',\n\t\t\t\t`The order was updated to the cloud!`,\n\t\t\t\t`> Firebase: Order: ${ORDER_ID} and its items are updated to the system.`,\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tif (response) window.location.reload();\n\t\t} catch (error) {\n\t\t\tconsole.error('> Firebase: request couldnt go through');\n\t\t\tconsole.error(error);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t'Update Failed!',\n\t\t\t\t`The order could not update to the cloud!`,\n\t\t\t\t`> Firebase: Order: ${ORDER_ID} and its information weren't updated to the system.`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\t//Returns a promise with the downloaded url of the image uploaded to the cloud storage\n\tconst uploadFile = (doc, orderId, itemKey, documentName) =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\t//Prepare the path of the image with the order id for the folder, and document name with the item key as its title\n\t\t\tconst formattedDocName = documentName.replace('.', '_');\n\t\t\tconst path = `images/${orderId}/${itemKey}-${formattedDocName}`;\n\t\t\tFirebase.storage().ref(path).put(doc).then((snapshot) => {\n\t\t\t\tsnapshot.ref.getDownloadURL().then((url) => {\n\t\t\t\t\tresolve({ name: `${itemKey}-${formattedDocName}`, path: url });\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\tconst uploadFilesToStorage = () =>\n\t\tnew Promise(async (resolve, reject) => {\n\t\t\t//Urls and Avis array are to keep all data that belongs to each item\n\t\t\tlet urls = [];\n\t\t\tlet avis = [];\n\t\t\tlet fileKeys = Object.keys(ITEMS);\n\t\t\t//Pop every itemkey during the while loop sequence and run the code below\n\t\t\tdo {\n\t\t\t\tconst currentItemKey = fileKeys.pop();\n\t\t\t\tconst avi = ITEMS[currentItemKey].avi;\n\t\t\t\t//Choose to upload the avi file data only if it is present with 'file' key property, or pass the obj with the current avi data\n\t\t\t\tconst aviCon = avi.hasOwnProperty('file')\n\t\t\t\t\t? await uploadFile(avi.file, ORDER_ID, currentItemKey, 'avi')\n\t\t\t\t\t: { name: `${currentItemKey}-avi`, path: avi.path };\n\t\t\t\tavis.push(aviCon);\n\t\t\t\tconst files = ITEMS[currentItemKey].files;\n\t\t\t\t//In the loop, determine if the current file is of File prototype, then upload the file and push its response to the url array\n\t\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\t\t//Check if file matches file prototype\n\t\t\t\t\tif (files[i] instanceof File) {\n\t\t\t\t\t\tconst path = await uploadFile(files[i], ORDER_ID, currentItemKey, files[i].name);\n\t\t\t\t\t\turls.push(path);\n\t\t\t\t\t} else {\n\t\t\t\t\t\turls.push(files[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (fileKeys.length !== 0);\n\t\t\tconsole.log(ORDER);\n\t\t\tresolve({ files: urls, avi: avis });\n\t\t});\n\n\t//After the files are uploaded to storage, use the payload response, format it, and update the order with the new information to the firestore\n\tconst updateOrderToFirestore = (payload) =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\tlet copy = ITEMS;\n\t\t\t//Create an empty array that'll house our item document info, in the obj format of [document.name] = document.path\n\t\t\tlet itemsImagesPayload = {};\n\t\t\t[ ...payload.files, ...payload.avi ].forEach((item) => (itemsImagesPayload[item.name] = item.path));\n\t\t\t//Create an array of objs that store name and quantity of every order set in the state.\n\t\t\tconst itemInfoPayload = Object.keys(copy).map((item) => ({\n\t\t\t\tname: copy[item].name,\n\t\t\t\tquantity: copy[item].quantity\n\t\t\t}));\n\t\t\t//Update the document in the firestore with the new item information\n\t\t\tFirebase.firestore()\n\t\t\t\t.collection('orders')\n\t\t\t\t.doc(ORDER_ID)\n\t\t\t\t.update({ items: itemInfoPayload, 'item-images': { ...itemsImagesPayload } })\n\t\t\t\t.then(() => resolve(true));\n\t\t});\n\n\t//Track changes to the input ref for avi image of the item, update its data to the state, and set the img source to\n\t//the uploaded avi image.\n\tconst onAviChange = (e, ref, itemKey) => {\n\t\tconst url = URL.createObjectURL(e.target.files[0]);\n\t\tsetItems((STATE) => ({\n\t\t\t...STATE,\n\t\t\t[itemKey]: {\n\t\t\t\t...STATE[itemKey],\n\t\t\t\tavi: { path: url, file: e.target.files[0] }\n\t\t\t}\n\t\t}));\n\t\t// ref.current.src = url;\n\t\t// setAvi(e.target.files[0]);\n\t};\n\n\t//Change the casing of every word in the string\n\tconst formatString = (str) => {\n\t\t//Check if its multi-word\n\t\tconst words = str.split(' ');\n\t\tconst newString = words.map((item) => item.charAt(0).toUpperCase() + item.slice(1));\n\t\treturn newString.join(' ');\n\t};\n\t//Set a default image from a url to the avi as a placeholder until it is changed\n\tconst setDefaultImage = (item, key) => {\n\t\tconst placeholder = 'https://www.nbmchealth.com/wp-content/uploads/rem/2018/04/default-placeholder.png';\n\t\tif (item.hasOwnProperty('avi')) {\n\t\t\treturn item.avi.path;\n\t\t} else {\n\t\t\tsetItems((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\t[key]: {\n\t\t\t\t\t...prevState[key],\n\t\t\t\t\tavi: { path: placeholder }\n\t\t\t\t}\n\t\t\t}));\n\t\t\treturn placeholder;\n\t\t}\n\t};\n\n\t//Create a key for the state item\n\tconst createObjectKey = (name) => name.split(' ').join('');\n\n\t//Track what type of action the onClick function was triggered for and execute its case subroutine\n\tconst onTriggerInput = (type, aviInputRef, fileRef) => {\n\t\tswitch (type) {\n\t\t\tcase 'avi':\n\t\t\t\taviInputRef.current.click();\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\tfileRef.current.click();\n\t\t}\n\t};\n\n\t//Update the files state by uploading the entire files' object/array from the event obj and set the event key to 0.\n\t//'0' meaning trigger the Accordian Body reveal with the file items displayed vs. '1' meaning hide the Accordian Body\n\tconst addFile = (e, currentItemKey) => {\n\t\tconst inputFiles = e.target.files;\n\t\tlet data = [ ...ITEMS[currentItemKey]['files'] ];\n\t\tObject.keys(inputFiles).forEach((item) => (data = [ ...data, inputFiles[item] ]));\n\t\tsetItems((STATE) => ({\n\t\t\t...STATE,\n\t\t\t[currentItemKey]: {\n\t\t\t\t...STATE[currentItemKey],\n\t\t\t\tfiles: data\n\t\t\t}\n\t\t}));\n\t\t// if (key !== 0) setKey('0');\n\t};\n\n\t//Update the item name, quantity or both\n\tconst onUpdate = (e, key) => {\n\t\te.preventDefault();\n\t\tsetPrompt(true);\n\t\tsetPromptKey(key);\n\t};\n\n\t//Delete the item from the state\n\tconst onDelete = (e, key) => {\n\t\te.preventDefault();\n\t\tlet copy = ITEMS;\n\t\tdelete copy[key];\n\t\tsetItems({ ...copy });\n\t};\n\n\t//Prevent the user from adding the same item in the state by accident\n\tconst itemAlreadyExists = (input) => {\n\t\tconst key = createObjectKey(input.toLowerCase());\n\t\tconst results = Object.keys(ITEMS).filter((item) => item === key);\n\t\treturn results.length > 0 ? true : false;\n\t};\n\n\tconst onPromptSubmission = (quantity, itemName, key) => {\n\t\tif (itemName !== '') {\n\t\t\tif (itemAlreadyExists(itemName)) return alert('That item already exists.');\n\t\t\t//Change the key name by creating a new object with the same properties and deleting the old one\n\t\t\tconst newKey = createObjectKey(itemName.toLowerCase());\n\t\t\tlet itemsCopy = ITEMS;\n\t\t\titemsCopy[newKey] = ITEMS[key];\n\t\t\t//Delete the old key obj from the new obj\n\t\t\tdelete itemsCopy[key];\n\t\t\t//assign the updated values to the new obj key\n\t\t\titemsCopy[newKey]['name'] = itemName.toLowerCase();\n\t\t\t// //Update the new updated items state\n\t\t\tsetItems({ ...itemsCopy });\n\t\t\t//Reassign the key value for the quantity code below to find the new key if updated\n\t\t\tkey = newKey;\n\t\t}\n\t\tif (quantity !== '') {\n\t\t\tlet copy = ITEMS[key];\n\t\t\tcopy['quantity'] = quantity;\n\t\t\tsetItems({ ...ITEMS, [key]: copy });\n\t\t}\n\t\tsetPrompt(false);\n\t};\n\tif (ORDER === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container-fluid pt-3\">\n\t\t\t<Toast\n\t\t\t\tonClose={() => setToast(false)}\n\t\t\t\tshow={toast}\n\t\t\t\tmessage={message}\n\t\t\t\theading={heading}\n\t\t\t\timg={<i className={`${img} p-3`} />}\n\t\t\t/>\n\t\t\t<BackButton\n\t\t\t\tvalue=\"Go Back To Order\"\n\t\t\t\tmessage=\"Are you sure you want to go back to the previous page? All current data will be lost.\"\n\t\t\t\tpath={document.referrer}\n\t\t\t/>\n\t\t\t<div className=\"row\">\n\t\t\t\t<SlideCard\n\t\t\t\t\tchildren={\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<Description />\n\t\t\t\t\t\t\t<ItemsForm onSubmit={onItemSubmit.bind(this)} onFinish={onFinish.bind(this)} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\ttitle=\"Submission\"\n\t\t\t\t\ticon=\"fas fa-keyboard pr-3\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<SlideCard\n\t\t\t\t\tchildren={\n\t\t\t\t\t\t<CloudItems\n\t\t\t\t\t\t\torder={ITEMS}\n\t\t\t\t\t\t\taddFile={addFile.bind(this)}\n\t\t\t\t\t\t\tsetDefaultImage={setDefaultImage.bind(this)}\n\t\t\t\t\t\t\tformatString={formatString.bind(this)}\n\t\t\t\t\t\t\tonAviChange={onAviChange.bind(this)}\n\t\t\t\t\t\t\tonTriggerInput={onTriggerInput.bind(this)}\n\t\t\t\t\t\t\tonUpdate={onUpdate.bind(this)}\n\t\t\t\t\t\t\tonDelete={onDelete.bind(this)}\n\t\t\t\t\t\t\tonRemoveFile={onRemoveFile.bind(this)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\ttitle=\"Items\"\n\t\t\t\t\ticon=\"fas fa-clipboard-list pr-3\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{/* <Undo onClick={() => alert('hello')} onClose={() => alert('goodbye')} /> */}\n\t\t\t<Prompt\n\t\t\t\tmodalShow={PROMPT}\n\t\t\t\tonHide={() => setPrompt(false)}\n\t\t\t\titemKey={PROMPTKEY}\n\t\t\t\tcurrentItem={ITEMS[PROMPTKEY] !== undefined ? ITEMS[PROMPTKEY].name : 'NULL'}\n\t\t\t\tcurrentQuantity={ITEMS[PROMPTKEY] !== undefined ? ITEMS[PROMPTKEY].quantity : 'NULL'}\n\t\t\t\tonPromptSubmission={onPromptSubmission.bind(this)}\n\t\t\t/>\n\t\t</main>\n\t);\n};\n\nconst Description = () => (\n\t<div className=\"col\">\n\t\t<div id=\"description\">\n\t\t\t<h1>Add/Update Items to Order</h1>\n\t\t\t<p>\n\t\t\t\tEnter all of the items you'd like to add to this order before finalizing. Take this opportunity to\n\t\t\t\tupload any files or documents that are pertinent to each of your items.\n\t\t\t</p>\n\t\t\t<p className=\"mb-5\">Click 'Update' when you are done adding items/files to update the order.</p>\n\t\t</div>\n\t</div>\n);\n\nconst ItemsForm = ({ onSubmit, onFinish }) => (\n\t<div className=\"col justify-content-center align-items-center d-flex\">\n\t\t<form onSubmit={onSubmit}>\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<Input\n\t\t\t\t\trequired={false}\n\t\t\t\t\tcolumn=\"col-md-10\"\n\t\t\t\t\tid=\"item\"\n\t\t\t\t\tlabel=\"Item\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Item Name\"\n\t\t\t\t\tname=\"item\"\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\trequired={false}\n\t\t\t\t\tcolumn=\"col-md-2\"\n\t\t\t\t\tid=\"quantity\"\n\t\t\t\t\tlabel=\"Quantity\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Quantity\"\n\t\t\t\t\tname=\"quantity\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<input type=\"submit\" className=\"btn btn-primary float-right d-inline\" value=\"Add Item\" />\n\t\t\t<button className=\"btn-success btn float-right d-inline mr-3\" onClick={onFinish}>\n\t\t\t\tUpdate & Save Order\n\t\t\t</button>\n\t\t</form>\n\t</div>\n);\n\nconst CloudItems = (props) => (\n\t<div className=\"cloud-items\">\n\t\t{Object.keys(props.order).map((item, index) => {\n\t\t\tconst cloudItem = props.order[item];\n\t\t\tconst aviPath = props.setDefaultImage(props.order[item], item);\n\t\t\tconst name = props.formatString(cloudItem.name);\n\t\t\treturn (\n\t\t\t\t<FileBox\n\t\t\t\t\tkey={index}\n\t\t\t\t\titemKey={item}\n\t\t\t\t\tfiles={cloudItem.files}\n\t\t\t\t\taviPath={aviPath}\n\t\t\t\t\titemName={name}\n\t\t\t\t\tquantity={cloudItem.quantity}\n\t\t\t\t\taddFile={props.addFile}\n\t\t\t\t\tonUpdate={props.onUpdate}\n\t\t\t\t\tonDelete={props.onDelete}\n\t\t\t\t\tonRemoveFile={props.onRemoveFile}\n\t\t\t\t\tonAviChange={props.onAviChange}\n\t\t\t\t\tonTriggerInput={props.onTriggerInput}\n\t\t\t\t/>\n\t\t\t);\n\t\t})}\n\t</div>\n);\n\nconst FileBox = (props) => {\n\t//Refs\n\tlet aviInputRef = useRef(null);\n\tlet aviRef = useRef(null);\n\tlet fileRef = useRef(null);\n\n\t//State\n\tconst [ LOAD, setLoad ] = useState(false);\n\n\tconst handleAddFile = (e) => {\n\t\tprops.addFile(e, props.itemKey);\n\t};\n\n\tuseEffect(() => {}, [ aviInputRef, aviRef, fileRef ]);\n\n\tconst Avi = () => (\n\t\t<div className=\"col-md-2 d-flex justify-content-center align-items-center\">\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-default btn-file\"\n\t\t\t\tonClick={() => props.onTriggerInput('avi', aviInputRef, fileRef)}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tonChange={(e) => props.onAviChange(e, aviRef, props.itemKey)}\n\t\t\t\t\tref={aviInputRef}\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tid={`${props.itemKey}-avi`}\n\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t/>\n\t\t\t\t<img src={props.aviPath} ref={aviRef} className=\"text-center\" height=\"50\" width=\"50\" id=\"avi\" />\n\t\t\t</button>\n\t\t</div>\n\t);\n\n\tconst Box = () => (\n\t\t<span className=\"d-inline\">\n\t\t\t<h5 className=\"d-inline\">{props.itemName}</h5>\n\t\t\t<p>\n\t\t\t\tQuantity: {props.quantity}\n\t\t\t\t<span className=\"pl-1\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={() => props.onTriggerInput('file', aviInputRef, fileRef)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tref={fileRef}\n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tclassName=\"btn btn-link py-0 px-3\"\n\t\t\t\t\t\t\tonChange={handleAddFile}\n\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\tAdd File(s)\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={(e) => props.onUpdate(e, props.itemKey)}>\n\t\t\t\t\t\tUpdate Item\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={(e) => props.onDelete(e, props.itemKey)}>\n\t\t\t\t\t\tRemove Item\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</span>\n\t);\n\n\tconst Chevron = () => (\n\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className=\"p-0 float-right d-inline\">\n\t\t\t<i className=\"fas fa-chevron-down float-right\" />\n\t\t</Accordion.Toggle>\n\t);\n\n\tconst Items = () =>\n\t\tprops.files.map((item, index) => (\n\t\t\t<ListGroup.Item\n\t\t\t\tkey={index}\n\t\t\t\tclassName=\"file-item\"\n\t\t\t\tstyle={{\n\t\t\t\t\tborderBottom: index === props.files.length - 1 ? '1px solid #e8e8e8' : ''\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{item.name}\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-danger float-right\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onRemoveFile(index, props.itemKey, setLoad);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{LOAD === index ? <Loading /> : 'Remove'}\n\t\t\t\t</button>\n\t\t\t</ListGroup.Item>\n\t\t));\n\n\tconst Header = () => (\n\t\t<Card.Header className=\"px-2 py-0\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<Avi />\n\t\t\t\t<div className=\"col-md-10 pl-3 text-left pt-2\">\n\t\t\t\t\t<Chevron />\n\t\t\t\t\t<Box />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Card.Header>\n\t);\n\n\tconst Body = () => (\n\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t<Card.Body className=\"p-0\">\n\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t<Items />\n\t\t\t\t</ListGroup>\n\t\t\t</Card.Body>\n\t\t</Accordion.Collapse>\n\t);\n\n\treturn (\n\t\t<div className=\"w-100\" id=\"order-items\">\n\t\t\t<Accordion>\n\t\t\t\t<Card>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Body />\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n};\n\nexport default UpdateItems;\n\n// console.log(`Is it a file: ${inputFiles[0] instanceof File}`);\n","/Users/solorzke/Documents/Developer/express-hub/src/data/InputTypes.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Undo/Undo.js",[],["256","257"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Search/Index.js",["258"],"import React, { useState } from 'react';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport SearchBar from '../../components/Inputs/Search';\nimport Logo from '../../logo.jpeg';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { Config } from '../../data/Config';\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst SearchIndex = () => <Wrapper children={<Body />} active=\"search\" current=\"Search\" />;\n\nconst Body = () => {\n\tconst [ RESULTS, setResults ] = useState([]);\n\n\tconst queryRequest = (query, value) =>\n\t\tnew Promise(async (resolve, reject) => {\n\t\t\tlet results = [];\n\t\t\tlet orders = [];\n\t\t\tconst snapshot = await Firebase.firestore().collection('orders').get();\n\t\t\tsnapshot.forEach((doc) => orders.push(doc.data()));\n\t\t\tfor (let i = 0; i < orders.length; i++) {\n\t\t\t\tconst order = orders[i];\n\t\t\t\tconst queryValue = order[query].toLowerCase();\n\t\t\t\tif (queryValue.includes(value) && value.length > 0) {\n\t\t\t\t\tconst duplicates = results.filter((result) => result.orderId === order.orderId);\n\t\t\t\t\tif (duplicates.length === 0) {\n\t\t\t\t\t\tconst items = order.items.map((item) => item.name).join(', ');\n\t\t\t\t\t\tconst names = await getClientById(order.clientId);\n\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\tdetail: `${order.orderId}: ${items}`,\n\t\t\t\t\t\t\tpath: `/order?id=${order.orderId}&fname=${names.fname}&lname=${names.lname}`,\n\t\t\t\t\t\t\torderId: order.orderId\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(results);\n\t\t\tresolve(results);\n\t\t});\n\n\tconst getClientById = (id) =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\tFirebase.firestore().collection('clients').where('id', '==', id).get().then((snapshot) => {\n\t\t\t\tlet result = [];\n\t\t\t\tsnapshot.forEach((doc) => result.push(doc.data()));\n\t\t\t\tconst fname = result[0].fname.replace(' ', '%20');\n\t\t\t\tconst lname = result[0].lname.replace(' ', '%20');\n\t\t\t\tresolve({ fname: fname, lname: lname });\n\t\t\t});\n\t\t});\n\n\tconst queryRequestForClient = (value) =>\n\t\tnew Promise(async (resolve, reject) => {\n\t\t\tlet clients = [];\n\t\t\tlet order = [];\n\t\t\tvalue = value.toLowerCase();\n\t\t\tconst snapshot = await Firebase.firestore().collection('clients').get();\n\t\t\tsnapshot.forEach((doc) => clients.push(doc.data()));\n\t\t\tfor (let i = 0; i < clients.length; i++) {\n\t\t\t\tconst client = clients[i];\n\t\t\t\tconst fullName = `${client.fname} ${client.lname}`;\n\t\t\t\tif (fullName.includes(value) && value.length > 0) {\n\t\t\t\t\torder = await queryRequest('clientId', client.id);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolve(order);\n\t\t});\n\n\tconst onChange = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst query = document.getElementById('query').selectedOptions[0].value;\n\t\t\tconst value = e.target.value.toLowerCase();\n\t\t\tconst results = query === 'client' ? await queryRequestForClient(value) : await queryRequest(query, value);\n\t\t\tsetResults(results);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"> Firebase: Couldn't send request\");\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Change the casing of every word in the string\n\tconst formatString = (str) => {\n\t\t//Check if its multi-word\n\t\tconst words = str.split(' ');\n\t\tconst newString = words.map((item) => item.charAt(0).toUpperCase() + item.slice(1));\n\t\treturn newString.join(' ');\n\t};\n\n\treturn (\n\t\t<main className=\"container p-3\">\n\t\t\t<PortraitHeader />\n\t\t\t<SearchBox\n\t\t\t\tsetResults={setResults.bind(this)}\n\t\t\t\tonChange={onChange.bind(this)}\n\t\t\t\tdata={RESULTS}\n\t\t\t\tformatString={formatString.bind(this)}\n\t\t\t/>\n\t\t</main>\n\t);\n};\n\nconst PortraitHeader = () => (\n\t<div className=\"w-100 d-flex justify-content-center align-items-center pb-5 flex-column\">\n\t\t{/* <i className=\"fas fa-shipping-fast login-logo\" style={{ fontSize: 200 }} />\n\t\t<h1 className=\"pt-5\">Teloentrego</h1> */}\n\t\t<img src={Logo} height=\"400\" width=\"650\" className=\"rounded\" />\n\t</div>\n);\n\nconst SearchBox = ({ onChange, data, formatString, setResults }) => (\n\t<div className=\"\">\n\t\t<form>\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<div className=\"form-group col-md-2 justify-content-center align-items-center0 d-flex\">\n\t\t\t\t\t<QueryBox setResults={setResults} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group col-md-10\">\n\t\t\t\t\t<SearchBar onChange={onChange} data={data} formatString={formatString} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n);\n\nconst QueryBox = ({ setResults }) => {\n\tconst options = [\n\t\t{ name: 'Client', value: 'client' },\n\t\t{ name: 'Address', value: 'address' },\n\t\t{ name: 'Country', value: 'country' },\n\t\t{ name: 'Province', value: 'province' },\n\t\t{ name: 'Order-Id', value: 'orderId' },\n\t\t{ name: 'Client-Id', value: 'clientId' },\n\t\t{ name: 'Date', value: 'date' },\n\t\t{ name: 'Tracking Num', value: 'trackingNum' }\n\t];\n\n\tconst onChange = (e) => {\n\t\te.preventDefault();\n\t\tsetResults([]);\n\t\tdocument.getElementById('search').value = '';\n\t\tdocument.getElementById('search').text = '';\n\t\tdocument.getElementById('search').placeholder = setPlaceholder(e.target.value);\n\t};\n\n\tconst setPlaceholder = (type) => {\n\t\tswitch (type) {\n\t\t\tcase 'address':\n\t\t\t\treturn 'Search an address';\n\t\t\tcase 'country':\n\t\t\t\treturn 'Search a country';\n\t\t\tcase 'province':\n\t\t\t\treturn 'Search a province';\n\t\t\tcase 'orderId':\n\t\t\t\treturn 'Search an order-id number';\n\t\t\tcase 'clientId':\n\t\t\t\treturn 'Search a client-id number';\n\t\t\tcase 'date':\n\t\t\t\treturn 'Search a date of the order';\n\t\t\tcase 'trackingNum':\n\t\t\t\treturn 'Search a tracking number';\n\t\t\tdefault:\n\t\t\t\treturn \"Search client's name\";\n\t\t}\n\t};\n\n\treturn (\n\t\t<select className=\"custom-select mr-sm-2\" id=\"query\" onChange={onChange.bind(this)}>\n\t\t\t{options.map((option, index) => (\n\t\t\t\t<option key={index} value={option.value}>\n\t\t\t\t\t{option.name}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t);\n};\n\nexport default SearchIndex;\n","/Users/solorzke/Documents/Developer/express-hub/src/pages/Settings/Index.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/UserInputTypes.js",[],["259","260"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/ForgotPassword.js",["261","262","263"],"/Users/solorzke/Documents/Developer/express-hub/src/data/ClientInputTypes.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Index.js",["264","265","266","267"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/LoadingPage.js",[],["268","269"],"/Users/solorzke/Documents/Developer/express-hub/src/data/TableHeadings.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/Dates.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Paths/Paths.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/Location.js",[],{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"270","replacedBy":"274"},{"ruleId":"272","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":60,"column":8,"nodeType":"278","endLine":60,"endColumn":51},{"ruleId":"270","replacedBy":"279"},{"ruleId":"272","replacedBy":"280"},{"ruleId":"270","replacedBy":"281"},{"ruleId":"272","replacedBy":"282"},{"ruleId":"270","replacedBy":"283"},{"ruleId":"272","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":26,"column":5,"nodeType":"287","endLine":26,"endColumn":7,"suggestions":"288"},{"ruleId":"270","replacedBy":"289"},{"ruleId":"272","replacedBy":"290"},{"ruleId":"285","severity":1,"message":"291","line":22,"column":3,"nodeType":"287","endLine":22,"endColumn":17,"suggestions":"292"},{"ruleId":"276","severity":1,"message":"277","line":85,"column":10,"nodeType":"278","endLine":85,"endColumn":86},{"ruleId":"270","replacedBy":"293"},{"ruleId":"272","replacedBy":"294"},{"ruleId":"270","replacedBy":"295"},{"ruleId":"272","replacedBy":"296"},{"ruleId":"276","severity":1,"message":"277","line":106,"column":4,"nodeType":"278","endLine":106,"endColumn":39},{"ruleId":"276","severity":1,"message":"277","line":137,"column":6,"nodeType":"278","endLine":137,"endColumn":101},{"ruleId":"297","severity":1,"message":"298","line":152,"column":43,"nodeType":"299","endLine":152,"endColumn":58},{"ruleId":"270","replacedBy":"300"},{"ruleId":"272","replacedBy":"301"},{"ruleId":"270","replacedBy":"302"},{"ruleId":"272","replacedBy":"303"},{"ruleId":"285","severity":1,"message":"304","line":37,"column":5,"nodeType":"287","endLine":37,"endColumn":7,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":65,"column":37,"nodeType":"308","messageId":"309","endLine":65,"endColumn":38,"suggestions":"310"},{"ruleId":"306","severity":1,"message":"307","line":79,"column":37,"nodeType":"308","messageId":"309","endLine":79,"endColumn":38,"suggestions":"311"},{"ruleId":"306","severity":1,"message":"307","line":132,"column":37,"nodeType":"308","messageId":"309","endLine":132,"endColumn":38,"suggestions":"312"},{"ruleId":"285","severity":1,"message":"313","line":47,"column":3,"nodeType":"287","endLine":47,"endColumn":15,"suggestions":"314"},{"ruleId":"297","severity":1,"message":"298","line":335,"column":62,"nodeType":"299","endLine":335,"endColumn":77},{"ruleId":"276","severity":1,"message":"277","line":336,"column":7,"nodeType":"278","endLine":336,"endColumn":85},{"ruleId":"297","severity":1,"message":"298","line":370,"column":24,"nodeType":"299","endLine":370,"endColumn":39},{"ruleId":"276","severity":1,"message":"277","line":29,"column":10,"nodeType":"278","endLine":29,"endColumn":86},{"ruleId":"315","severity":1,"message":"316","line":2,"column":8,"nodeType":"317","messageId":"318","endLine":2,"endColumn":13},{"ruleId":"285","severity":1,"message":"319","line":42,"column":3,"nodeType":"287","endLine":42,"endColumn":38,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":85,"column":34,"nodeType":"323","messageId":"324","endLine":85,"endColumn":36},{"ruleId":"276","severity":1,"message":"277","line":500,"column":5,"nodeType":"278","endLine":500,"endColumn":101},{"ruleId":"270","replacedBy":"325"},{"ruleId":"272","replacedBy":"326"},{"ruleId":"276","severity":1,"message":"277","line":109,"column":3,"nodeType":"278","endLine":109,"endColumn":66},{"ruleId":"270","replacedBy":"327"},{"ruleId":"272","replacedBy":"328"},{"ruleId":"315","severity":1,"message":"329","line":18,"column":10,"nodeType":"317","messageId":"318","endLine":18,"endColumn":14},{"ruleId":"285","severity":1,"message":"330","line":28,"column":5,"nodeType":"287","endLine":28,"endColumn":7,"suggestions":"331"},{"ruleId":"276","severity":1,"message":"277","line":60,"column":7,"nodeType":"278","endLine":60,"endColumn":50},{"ruleId":"285","severity":1,"message":"332","line":26,"column":3,"nodeType":"287","endLine":26,"endColumn":39,"suggestions":"333"},{"ruleId":"334","severity":1,"message":"335","line":61,"column":3,"nodeType":"336","messageId":"337","endLine":90,"endColumn":4},{"ruleId":"334","severity":1,"message":"335","line":161,"column":3,"nodeType":"336","messageId":"337","endLine":171,"endColumn":4},{"ruleId":"334","severity":1,"message":"335","line":190,"column":3,"nodeType":"336","messageId":"337","endLine":196,"endColumn":4},{"ruleId":"270","replacedBy":"338"},{"ruleId":"272","replacedBy":"339"},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],["340"],["341"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["340"],["341"],["340"],["341"],["340"],["341"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'CLIENTS'. Either include it or remove the dependency array.","ArrayExpression",["342"],["340"],["341"],"React Hook useEffect has missing dependencies: 'itemKey' and 'onFilesChange'. Either include them or remove the dependency array. If 'onFilesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["343"],["340"],["341"],["340"],["341"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["340"],["341"],["340"],["341"],"React Hook useEffect has missing dependencies: 'getClient', 'getOrders', and 'id'. Either include them or remove the dependency array.",["344"],"no-useless-escape","Unnecessary escape character: \\'.","TemplateElement","unnecessaryEscape",["345","346"],["347","348"],["349","350"],"React Hook useEffect has missing dependencies: 'QUERY' and 'getOrder'. Either include them or remove the dependency array.",["351"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["352"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["340"],["341"],["340"],["341"],"'mode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'QUERY'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["354"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["340"],["341"],"no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"messageId":"361","fix":"362","desc":"363"},{"messageId":"364","fix":"365","desc":"366"},{"messageId":"361","fix":"367","desc":"363"},{"messageId":"364","fix":"368","desc":"366"},{"messageId":"361","fix":"369","desc":"363"},{"messageId":"364","fix":"370","desc":"366"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},"Update the dependencies array to be: [CLIENTS]",{"range":"379","text":"380"},"Update the dependencies array to be: [files, avi, onFilesChange, itemKey]",{"range":"381","text":"382"},"Update the dependencies array to be: [getClient, getOrders, id]",{"range":"383","text":"384"},"removeEscape",{"range":"385","text":"386"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"387","text":"388"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"389","text":"386"},{"range":"390","text":"388"},{"range":"391","text":"386"},{"range":"392","text":"388"},"Update the dependencies array to be: [QUERY, UPDATING, getOrder]",{"range":"393","text":"394"},"Update the dependencies array to be: [ORDER, ITEMS, PROMPT, PROMPTKEY, getOrder]",{"range":"395","text":"396"},"Update the dependencies array to be: [QUERY]",{"range":"397","text":"398"},"Update the dependencies array to be: [ORDERS, CLIENTS, FILTERED_ORDERS, getOrders]",{"range":"399","text":"400"},[875,877],"[CLIENTS]",[902,916],"[files, avi, onFilesChange, itemKey]",[1524,1526],"[getClient, getOrders, id]",[2499,2500],"",[2499,2499],"\\",[2950,2951],[2950,2950],[4958,4959],[4958,4958],[1996,2008],"[QUERY, UPDATING, getOrder]",[1778,1813],"[ORDER, ITEMS, PROMPT, PROMPTKEY, getOrder]",[1015,1017],"[QUERY]",[885,921],"[ORDERS, CLIENTS, FILTERED_ORDERS, getOrders]"]