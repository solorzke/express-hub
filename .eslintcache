[{"/Users/solorzke/Documents/Developer/express-hub/src/App.js":"1","/Users/solorzke/Documents/Developer/express-hub/src/index.js":"2","/Users/solorzke/Documents/Developer/express-hub/src/pages/Index.js":"3","/Users/solorzke/Documents/Developer/express-hub/src/data/Cookie.js":"4","/Users/solorzke/Documents/Developer/express-hub/src/pages/Home.js":"5","/Users/solorzke/Documents/Developer/express-hub/src/components/Wrapper/Wrapper.js":"6","/Users/solorzke/Documents/Developer/express-hub/src/components/Drawer/Drawer.js":"7","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Index.js":"8","/Users/solorzke/Documents/Developer/express-hub/src/data/Config.js":"9","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Client.js":"10","/Users/solorzke/Documents/Developer/express-hub/src/components/Toast/Toast.js":"11","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Order.js":"12","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Input.js":"13","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Horizontal.js":"14","/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Index.js":"15","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Files.js":"16","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Items.js":"17","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Prompt.js":"18","/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Submit.js":"19","/Users/solorzke/Documents/Developer/express-hub/src/components/Receipt/Receipt.js":"20","/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Confirm.js":"21","/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Back.js":"22","/Users/solorzke/Documents/Developer/express-hub/src/pages/404.js":"23","/Users/solorzke/Documents/Developer/express-hub/src/components/TextEditor/Editor.js":"24","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Search.js":"25","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Select.js":"26","/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Client.js":"27","/Users/solorzke/Documents/Developer/express-hub/src/components/Files/File.js":"28","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Card.js":"29","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Order.js":"30","/Users/solorzke/Documents/Developer/express-hub/src/components/Files/Item.js":"31","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Field.js":"32","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Empty.js":"33","/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/UpdateField.js":"34","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Loading.js":"35","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/UpdateItems.js":"36","/Users/solorzke/Documents/Developer/express-hub/src/data/InputTypes.js":"37","/Users/solorzke/Documents/Developer/express-hub/src/components/Undo/Undo.js":"38","/Users/solorzke/Documents/Developer/express-hub/src/pages/Search/Index.js":"39","/Users/solorzke/Documents/Developer/express-hub/src/pages/Settings/Index.js":"40","/Users/solorzke/Documents/Developer/express-hub/src/data/UserInputTypes.js":"41","/Users/solorzke/Documents/Developer/express-hub/src/pages/ForgotPassword.js":"42","/Users/solorzke/Documents/Developer/express-hub/src/data/ClientInputTypes.js":"43","/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Index.js":"44","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/LoadingPage.js":"45","/Users/solorzke/Documents/Developer/express-hub/src/data/TableHeadings.js":"46","/Users/solorzke/Documents/Developer/express-hub/src/data/Dates.js":"47","/Users/solorzke/Documents/Developer/express-hub/src/components/Paths/Paths.js":"48","/Users/solorzke/Documents/Developer/express-hub/src/data/Location.js":"49","/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Form.js":"50","/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Index.js":"51"},{"size":2392,"mtime":1616210233700,"results":"52","hashOfConfig":"53"},{"size":236,"mtime":1613017589567,"results":"54","hashOfConfig":"53"},{"size":5082,"mtime":1616217038713,"results":"55","hashOfConfig":"53"},{"size":803,"mtime":1610675000910,"results":"56","hashOfConfig":"53"},{"size":1203,"mtime":1611934783128,"results":"57","hashOfConfig":"53"},{"size":886,"mtime":1615864507438,"results":"58","hashOfConfig":"53"},{"size":2758,"mtime":1616211654907,"results":"59","hashOfConfig":"53"},{"size":1586,"mtime":1616216701135,"results":"60","hashOfConfig":"53"},{"size":369,"mtime":1610665560430,"results":"61","hashOfConfig":"53"},{"size":7164,"mtime":1616216715755,"results":"62","hashOfConfig":"53"},{"size":472,"mtime":1611371613301,"results":"63","hashOfConfig":"53"},{"size":8757,"mtime":1616212398735,"results":"64","hashOfConfig":"53"},{"size":408,"mtime":1613506470896,"results":"65","hashOfConfig":"53"},{"size":378,"mtime":1614984929511,"results":"66","hashOfConfig":"53"},{"size":4520,"mtime":1616213568869,"results":"67","hashOfConfig":"53"},{"size":5096,"mtime":1614453868580,"results":"68","hashOfConfig":"53"},{"size":8545,"mtime":1616212802979,"results":"69","hashOfConfig":"53"},{"size":1541,"mtime":1611953593440,"results":"70","hashOfConfig":"53"},{"size":5741,"mtime":1616213049490,"results":"71","hashOfConfig":"53"},{"size":4206,"mtime":1616215423310,"results":"72","hashOfConfig":"53"},{"size":812,"mtime":1615910324095,"results":"73","hashOfConfig":"53"},{"size":657,"mtime":1614270603274,"results":"74","hashOfConfig":"53"},{"size":139,"mtime":1611862629526,"results":"75","hashOfConfig":"53"},{"size":1255,"mtime":1616212342222,"results":"76","hashOfConfig":"53"},{"size":1369,"mtime":1616215575530,"results":"77","hashOfConfig":"53"},{"size":954,"mtime":1616213615246,"results":"78","hashOfConfig":"53"},{"size":9657,"mtime":1616213986981,"results":"79","hashOfConfig":"53"},{"size":482,"mtime":1616214036265,"results":"80","hashOfConfig":"53"},{"size":644,"mtime":1615417300830,"results":"81","hashOfConfig":"53"},{"size":12213,"mtime":1616215513757,"results":"82","hashOfConfig":"53"},{"size":2087,"mtime":1614446850882,"results":"83","hashOfConfig":"53"},{"size":3815,"mtime":1615867011465,"results":"84","hashOfConfig":"53"},{"size":297,"mtime":1613087581957,"results":"85","hashOfConfig":"53"},{"size":8611,"mtime":1616216656956,"results":"86","hashOfConfig":"53"},{"size":118,"mtime":1615225224585,"results":"87","hashOfConfig":"53"},{"size":19487,"mtime":1616215372564,"results":"88","hashOfConfig":"53"},{"size":1616,"mtime":1616214719124,"results":"89","hashOfConfig":"53"},{"size":331,"mtime":1614270990932,"results":"90","hashOfConfig":"53"},{"size":5612,"mtime":1616216111455,"results":"91","hashOfConfig":"53"},{"size":4826,"mtime":1616216231999,"results":"92","hashOfConfig":"53"},{"size":712,"mtime":1616216310446,"results":"93","hashOfConfig":"53"},{"size":4110,"mtime":1615945059958,"results":"94","hashOfConfig":"53"},{"size":1286,"mtime":1616216403858,"results":"95","hashOfConfig":"53"},{"size":8733,"mtime":1616215739325,"results":"96","hashOfConfig":"53"},{"size":425,"mtime":1616215458151,"results":"97","hashOfConfig":"53"},{"size":1945,"mtime":1616215841220,"results":"98","hashOfConfig":"53"},{"size":864,"mtime":1616215965858,"results":"99","hashOfConfig":"53"},{"size":706,"mtime":1615913733033,"results":"100","hashOfConfig":"53"},{"size":3006,"mtime":1615993247049,"results":"101","hashOfConfig":"53"},{"size":7258,"mtime":1616198544067,"results":"102","hashOfConfig":"53"},{"size":1597,"mtime":1616207406443,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rqwsr9",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"188"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"108"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/solorzke/Documents/Developer/express-hub/src/App.js",["226","227"],"/Users/solorzke/Documents/Developer/express-hub/src/index.js",[],["228","229"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Index.js",["230"],"/Users/solorzke/Documents/Developer/express-hub/src/data/Cookie.js",[],["231","232"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Home.js",[],["233","234"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Wrapper/Wrapper.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Drawer/Drawer.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Index.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/Config.js",[],["235","236"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Client.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Toast/Toast.js",[],["237","238"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Order.js",["239"],"import React, { useRef, useState, useEffect } from 'react';\nimport { Countries } from '../../data/Location';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport Editor from '../../components/TextEditor/Editor';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport { useHistory } from 'react-router-dom';\n\nconst Order = () => <Wrapper children={<Body />} current=\"Nuevo Orden\" active=\"new\" />;\n\nconst Body = () => {\n\t//Select refs for clients, country, province\n\tlet clientRef = useRef(null);\n\tlet countryRef = useRef(null);\n\tlet provinceRef = useRef(null);\n\tconst [ SHIPPING, setShipping ] = useState(false);\n\tconst [ CLIENTS, setClients ] = useState(null);\n\tconst history = useHistory();\n\tlet value = '';\n\n\tuseEffect(() => {\n\t\tif (CLIENTS === null) {\n\t\t\tgetClients();\n\t\t}\n\t}, []);\n\n\t//Request a list of clients from the firestore\n\tconst getClients = async () => {\n\t\tconst snapshot = await Firebase.firestore().collection('clients').get();\n\t\tlet clients = [];\n\t\tsnapshot.forEach((doc) => clients.push(doc.data()));\n\t\tsetClients(clients);\n\t\treturn clients;\n\t};\n\n\t//Format the selected names to first letter uppercase followed by lowercase\n\tconst formatName = (str = '') => {\n\t\tconst formatted = str.split(' ').map((word) => word.charAt(0).toUpperCase() + word.slice(1));\n\t\treturn formatted.join(' ');\n\t};\n\n\tconst setText = (data) => (value = data);\n\n\t//Format the date from the date picker to MM/DD/YYYY\n\tconst formatDate = (date) => {\n\t\tconst bytes = date.split('-');\n\t\tconst month = bytes[1];\n\t\tconst day = bytes[2];\n\t\tconst year = bytes[0];\n\t\treturn `${month}/${day}/${year}`;\n\t};\n\n\t//Add all the form data and files to the firestore request to create a new order\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst orderId = Number(new Date()).toString();\n\t\t\tconst clientId = clientRef.current.selectedOptions[0].value;\n\t\t\tconst clientName = clientRef.current.selectedOptions[0].text;\n\t\t\tconst orderDate = document.getElementById('order-date').value;\n\t\t\tconst country = countryRef.current.selectedOptions[0].text;\n\t\t\tconst province = provinceRef.current.selectedOptions[0].text;\n\t\t\tconst address = document.getElementById('address').value.toLowerCase();\n\t\t\tconst shippingStatus = SHIPPING;\n\t\t\tconst tracking = document.getElementById('tracking').value;\n\t\t\t// const editor = editorValue.length !== 0 ? editorValue : 'No notes written down.';\n\t\t\t//Store data into a obj\n\t\t\tlet data = {\n\t\t\t\torderId: orderId,\n\t\t\t\tclientId: clientId,\n\t\t\t\tclientName: clientName,\n\t\t\t\tdate: formatDate(orderDate),\n\t\t\t\tcountry: country,\n\t\t\t\tprovince: province,\n\t\t\t\taddress: address,\n\t\t\t\tnotes: value,\n\t\t\t\tshippingStatus: shippingStatus,\n\t\t\t\ttrackingNum: tracking.length === 0 ? '' : tracking\n\t\t\t};\n\n\t\t\thistory.push('/new-order/add-order/add-items', data);\n\t\t} catch (error) {\n\t\t\tconsole.log(`> App: Unable to save form data.\\n ${error.message}`);\n\t\t}\n\t};\n\tif (CLIENTS === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container p-3 toast-div\">\n\t\t\t<Description />\n\t\t\t<OrderForm\n\t\t\t\tformatName={formatName.bind(this)}\n\t\t\t\tonSubmit={onSubmit.bind(this)}\n\t\t\t\tclients={CLIENTS}\n\t\t\t\tsetShipping={setShipping.bind(this)}\n\t\t\t\trefs={{ client: clientRef, country: countryRef, province: provinceRef }}\n\t\t\t\tsetText={setText.bind(this)}\n\t\t\t/>\n\t\t</main>\n\t);\n};\n\nconst OrderForm = ({ formatName, onSubmit, clients, refs, setText, setShipping }) => (\n\t<form onSubmit={onSubmit}>\n\t\t<div className=\"form-group row\">\n\t\t\t{/* <Clients refs={refs} formatName={formatName} getClients={getClients} /> */}\n\t\t\t<ClientsPicker formatName={formatName} data={clients} refs={refs} />\n\t\t\t<DatePicker />\n\t\t</div>\n\t\t<Destination refs={refs} countries={Countries} />\n\t\t<ShippingStatus onClick={setShipping} />\n\t\t<TextEditor setText={setText} />\n\t\t<ConfirmButtons />\n\t</form>\n);\n\nconst ClientsPicker = ({ data, formatName, refs }) => (\n\t<div className=\"form-group col-md-6\">\n\t\t<label>Cliente</label>\n\t\t<select required ref={refs.client} className=\"custom-select\" id=\"client\">\n\t\t\t<option value=\"\" disabled selected>\n\t\t\t\tSelecciona un cliente\n\t\t\t</option>\n\t\t\t{data.map((item, index) => {\n\t\t\t\tlet fname = formatName(item.fname);\n\t\t\t\tlet lname = formatName(item.lname);\n\t\t\t\tlet full_name = `${fname} ${lname}`;\n\t\t\t\treturn (\n\t\t\t\t\t<option value={item.id} key={index}>\n\t\t\t\t\t\t{full_name}\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t})}\n\t\t</select>\n\t</div>\n);\n\nconst DatePicker = () => (\n\t<div className=\"form-group col-md-6\">\n\t\t<label htmlFor=\"order-date\">Fecha De Orden</label>\n\t\t<input\n\t\t\ttype=\"date\"\n\t\t\tclassName=\"form-control\"\n\t\t\tid=\"order-date\"\n\t\t\tdefaultValue={new Date().toISOString().slice(0, 10)}\n\t\t\tname=\"order-date\"\n\t\t\trequired\n\t\t/>\n\t</div>\n);\n\nconst Destination = ({ refs, countries }) => {\n\tconst [ country, setCountry ] = useState(null);\n\tconst onChange = (e) => {\n\t\tconst value = e.target.selectedOptions[0].value;\n\t\tswitch (value) {\n\t\t\tcase 'united states':\n\t\t\t\treturn setCountry('usa');\n\t\t\tcase 'ecuador':\n\t\t\t\treturn setCountry('ecu');\n\t\t\tdefault:\n\t\t\t\treturn setCountry(null);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div id=\"destination\">\n\t\t\t<h3 className=\"py-3\">Destino</h3>\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<label htmlFor=\"country\" className=\"col-sm-2 col-form-label\">\n\t\t\t\t\tPaís\n\t\t\t\t</label>\n\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t<select\n\t\t\t\t\t\tref={refs.country}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"custom-select\"\n\t\t\t\t\t\tid=\"country\"\n\t\t\t\t\t\tonChange={onChange.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\" selected disabled>\n\t\t\t\t\t\t\tSeleccione un País\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"ecuador\">Ecuador</option>\n\t\t\t\t\t\t<option value=\"united states\">Estados Unidos</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<label htmlFor=\"province\" className=\"col-sm-2 col-form-label\">\n\t\t\t\t\tProvincia\n\t\t\t\t</label>\n\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t<select ref={refs.province} required className=\"custom-select\" id=\"province\">\n\t\t\t\t\t\t<option value=\"\" disabled selected>\n\t\t\t\t\t\t\t-\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{country !== null &&\n\t\t\t\t\t\t\tcountries[country].map((item, index) => (\n\t\t\t\t\t\t\t\t<option key={index} value={item.value}>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<label htmlFor=\"address\" className=\"col-sm-2 col-form-label\">\n\t\t\t\t\tDirección\n\t\t\t\t</label>\n\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" id=\"address\" placeholder=\"Dirección\" name=\"address\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst ShippingStatus = ({ onClick }) => {\n\tconst [ SHOW, setShow ] = useState(false);\n\tconst OPTIONS = [ { name: 'Enviado', value: true }, { name: 'Aun no ha sido enviado', value: false } ];\n\treturn (\n\t\t<div id=\"shipping-tracking\">\n\t\t\t<h3 className=\"py-3\">Estado Del Envío</h3>\n\n\t\t\t<label htmlFor=\"status\" className=\"pr-5\">\n\t\t\t\tEstado\n\t\t\t</label>\n\t\t\t{OPTIONS.map((item, index) => (\n\t\t\t\t<div className=\"form-check form-check-inline\" key={index}>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"inlineRadioOptions\"\n\t\t\t\t\t\tid={item.value}\n\t\t\t\t\t\tvalue={item.value}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetShow(item.value);\n\t\t\t\t\t\t\tonClick(item.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<label className=\"form-check-label\" for={item.value}>\n\t\t\t\t\t\t{item.name}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t\t<div className={`form-group row${SHOW ? '' : ' d-none'}`}>\n\t\t\t\t<label htmlFor=\"tracking\" className=\"col-sm-2 col-form-label\">\n\t\t\t\t\tEl Número de Rastreo\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"col-sm-10 form-control\"\n\t\t\t\t\tid=\"tracking\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Ingrese un número de seguimiento, si está disponible.\"\n\t\t\t\t\tname=\"tracking\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst TextEditor = ({ setText }) => (\n\t<div id=\"editor\">\n\t\t<h3 className=\"py-3\">Notas Adicionales</h3>\n\t\t<div className=\"form-group row\">\n\t\t\t<div className=\"col-md-12\">\n\t\t\t\t<Editor onChange={setText} />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nconst ConfirmButtons = () => (\n\t<div className=\"form-group row\">\n\t\t<div className=\"col-md d-flex justify-content-end align-items-center\">\n\t\t\t<a href=\"/new-order\" className=\"mr-2 btn btn-md btn-secondary\">\n\t\t\t\tCancelar\n\t\t\t</a>\n\t\t\t<input type=\"submit\" value=\"Continuar\" className=\"btn btn-primary\" id=\"btn-modal\" />\n\t\t</div>\n\t</div>\n);\n\nconst Description = () => (\n\t<div id=\"description\">\n\t\t<h1>Agregar Nuevo Pedido</h1>\n\t\t<p>\n\t\t\tSeleccione el cliente que desea realizar un nuevo pedido, y establezca la fecha del pedido cuando lo\n\t\t\tsolicitó. Escriba detalles sobre el destino del pedido, incluido su país, provincia y dirección.\n\t\t</p>\n\t\t<p className=\"mb-5\">\n\t\t\tPuede agregar notas adicionales que sean pertinentes al pedido si lo desea. Haga clic en \"Continuar\" para\n\t\t\tpasar a la página siguiente.\n\t\t</p>\n\t</div>\n);\n\nexport default Order;\n","/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Input.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Horizontal.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Index.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Files.js",["240","241"],"import React, { useState, useRef, useEffect } from 'react';\nimport { Accordion, Card, Button, ListGroup } from 'react-bootstrap';\nimport './Files.css';\n\nconst FileInput = ({ itemName, quantity, onDelete, onFilesChange, itemKey, onUpdate }) => {\n\t//Refs target the hidden inputs for avi and files, and the avi image element\n\tlet aviRef = useRef(null);\n\tlet aviInputRef = useRef(null);\n\tlet fileRef = useRef(null);\n\t//State props for tracking the files, avi, and key data. Key references the eventKey for triggering the collapse or reveal\n\t//effect, not to be confused with object keys.\n\tconst [ files, setFiles ] = useState([]);\n\tconst [ avi, setAvi ] = useState(null);\n\tconst [ key, setKey ] = useState('1');\n\n\t//Set default image if necessary, and log changes to the files and avi state, such as files uploaded\n\tuseEffect(\n\t\t() => {\n\t\t\tsetDefaultImage();\n\t\t\tonFilesChange(files, avi, itemKey);\n\t\t},\n\t\t[ files, avi ]\n\t);\n\n\t//Track changes to the input ref for avi image of the item, update its data to the state, and set the img source to\n\t//the uploaded avi image.\n\tconst onAviChange = (e) => {\n\t\tconst url = URL.createObjectURL(e.target.files[0]);\n\t\taviRef.current.src = url;\n\t\tsetAvi(e.target.files[0]);\n\t};\n\n\t//Set a default image from a url to the avi as a placeholder until it is changed\n\tconst setDefaultImage = () => {\n\t\tconst url = 'https://www.nbmchealth.com/wp-content/uploads/rem/2018/04/default-placeholder.png';\n\t\tif (aviRef.current.src === '') {\n\t\t\taviRef.current.src = url;\n\t\t\tsetAvi(url);\n\t\t}\n\t};\n\n\t//Track what type of action the onClick function was triggered for and execute its case subroutine\n\tconst onClick = (type) => {\n\t\tswitch (type) {\n\t\t\tcase 'avi':\n\t\t\t\taviInputRef.current.click();\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\tfileRef.current.click();\n\t\t}\n\t};\n\n\t//Update the files state by uploading the entire files' object/array from the event obj and set the event key to 0.\n\t//'0' meaning trigger the Accordian Body reveal with the file items displayed vs. '1' meaning hide the Accordian Body\n\tconst addFile = (e) => {\n\t\tconst inputFiles = e.target.files;\n\t\tObject.keys(inputFiles).forEach((item) => setFiles((state) => [ ...state, inputFiles[item] ]));\n\t\tif (key !== 0) setKey('0');\n\t};\n\n\t//Extract and remove the file item by matching the index of the item in the filter loop.\n\tconst removeItem = (i) => {\n\t\tlet copy = files;\n\t\tconst filtered_array = copy.filter((item, index) => index !== i);\n\t\tif (filtered_array.length === 0) setKey('1');\n\t\tsetFiles(filtered_array);\n\t};\n\n\treturn (\n\t\t<div className=\"w-100\">\n\t\t\t<Accordion>\n\t\t\t\t<Card>\n\t\t\t\t\t<Card.Header className=\"px-2 py-0\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-2 d-flex justify-content-center align-items-center\">\n\t\t\t\t\t\t\t\t<button className=\"btn btn-default btn-file\" onClick={() => onClick('avi')}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tonChange={onAviChange}\n\t\t\t\t\t\t\t\t\t\tref={aviInputRef}\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\tid=\"avi-1\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<img ref={aviRef} className=\"text-center\" height=\"50\" width=\"50\" id=\"avi\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-10 pl-3 text-left pt-2\">\n\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\teventKey=\"0\"\n\t\t\t\t\t\t\t\t\tclassName=\"p-0 float-right d-inline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-chevron-down float-right\" />\n\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t<span className=\"d-inline\">\n\t\t\t\t\t\t\t\t\t<h5 className=\"d-inline\">{itemName}</h5>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tQuantity: {quantity}\n\t\t\t\t\t\t\t\t\t\t<span className=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onClick('file')}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={fileRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-link py-0 px-3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={addFile}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\tAdd File(s)\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={onUpdate}>\n\t\t\t\t\t\t\t\t\t\t\t\tUpdate Item\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={onDelete}>\n\t\t\t\t\t\t\t\t\t\t\t\tRemove Item\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t<Accordion.Collapse eventKey={key}>\n\t\t\t\t\t\t<Card.Body className=\"p-0\">\n\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t{files.map((item, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"file-item\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tborderBottom: index === files.length - 1 ? '1px solid #e8e8e8' : ''\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger float-right\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => removeItem(index)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n};\n\nexport default FileInput;\n",["242","243"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Items.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Prompt.js",[],["244","245"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/New/Submit.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Receipt/Receipt.js",["246","247","248"],"/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Confirm.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/BackButton/Back.js",[],["249","250"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/404.js",[],["251","252"],"/Users/solorzke/Documents/Developer/express-hub/src/components/TextEditor/Editor.js",[],["253","254"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Search.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Inputs/Select.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Clients/Client.js",["255","256","257","258"],"import React, { useEffect, useState } from 'react';\nimport { Dropdown, Button, Breadcrumb } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { fieldTypes } from '../../data/ClientInputTypes';\nimport { Config } from '../../data/Config';\nimport Slidecard from '../../components/SlideCard/Card';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport File from '../../components/Files/File';\nimport Field from '../../components/SlideCard/Field';\nimport Empty from '../../components/Placeholders/Empty';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport Toast from '../../components/Toast/Toast';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst Client = () => <Wrapper children={<Body />} current=\"Clientes\" active=\"clients\" />;\n\nconst Body = () => {\n\tlet { id } = useParams();\n\t//State data that control the toast message\n\tconst [ toast, setToast ] = useState(false);\n\tconst [ img, setImg ] = useState('fas fa-spinner fa-pulse');\n\tconst [ message, setMessage ] = useState('Eliminando Cliente y sus pedidos ...');\n\tconst [ heading, setHeading ] = useState('Eliminar Cliente');\n\t//State data that controls client and order info\n\tconst [ client, setClient ] = useState(null);\n\tconst [ orders, setOrders ] = useState([]);\n\tconst [ empty, setEmpty ] = useState(false);\n\n\tuseEffect(() => {\n\t\tconsole.log(id);\n\t\tgetClient();\n\t\tgetOrders();\n\t}, []);\n\n\t//Set the state for the toast props\n\tconst setToastProps = (toastImg, toastHeading, toastMessage, log, action) => {\n\t\tsetImg(toastImg);\n\t\tsetHeading(toastHeading);\n\t\tsetMessage(toastMessage);\n\t\tconsole.log(log);\n\t\tsetTimeout(() => {\n\t\t\tsetToast(false);\n\t\t\tsetImg('fas fa-spinner fa-pulse');\n\t\t\tsetHeading('Eliminando Cliente y sus pedidos ...');\n\t\t\tsetMessage('Eliminar cliente');\n\t\t\tconsole.log('Toast Props set to normal.');\n\t\t\tif (action) window.location.href = document.referrer;\n\t\t}, 3000);\n\t};\n\n\t//Get info of the selected client from the firestore\n\tconst getClient = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('clients').where('id', '==', id).get();\n\t\t\tif (snapshot.empty)\n\t\t\t\treturn alert(\n\t\t\t\t\t'No hay ningún usuario que coincida con este ID de cliente. Por favor, regrese y vuelva a intentarlo.'\n\t\t\t\t);\n\t\t\tlet client = [];\n\t\t\tsnapshot.forEach((doc) => client.push(doc.data()));\n\t\t\tsetClient(client[0]);\n\t\t} catch (error) {\n\t\t\tconsole.error(`> Firebase: Couldn\\'t get user information`);\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Get all orders relevant to the client's id\n\tconst getOrders = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('orders').where('clientId', '==', id).get();\n\t\t\tif (snapshot.empty) return setEmpty(true);\n\t\t\tlet orders = [];\n\t\t\tsnapshot.forEach((doc) => orders.push(doc.data()));\n\t\t\tsetOrders(orders);\n\t\t} catch (error) {\n\t\t\tconsole.error(`> Firebase: Couldn\\'t get orders.`);\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Update order to the firestore and refresh the page afterwards\n\tconst updateClient = async (e, data) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\t// setUpdating(true);\n\t\t\tconst value = Object.values(data)[0].toLowerCase();\n\t\t\tif (value === '' && typeof value !== 'boolean') return alert('Ingrese un valor antes de actualizar');\n\t\t\tawait Firebase.firestore().collection('clients').doc(id).update(data);\n\t\t\twindow.location.reload();\n\t\t} catch (error) {\n\t\t\t// setUpdating(false);\n\t\t\tconsole.log(\"> Firebase: Request couldn't go through\");\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Delete the client from the firestore\n\t//1. Delete all files associated with the order id in the 'storage' collection.\n\t//2. Delete all orders associated with the client first in the 'Orders' collection.\n\t//3. Delete the client document in the 'Clients' collection.\n\tconst deleteClient = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst answer = window.confirm(\n\t\t\t\t`¿Está seguro de que desea eliminar este cliente? Todos los pedidos, la información y los archivos asociados con esta cuenta se borrarán y no se podrán recuperar.`\n\t\t\t);\n\t\t\tif (answer) {\n\t\t\t\tsetToast(true);\n\t\t\t\tfor (let i = 0; i < orders.length; i++) {\n\t\t\t\t\tconst orderId = orders[i].orderId;\n\t\t\t\t\tconst list = await Firebase.storage().ref(`images/${orderId}`).list();\n\t\t\t\t\tconst items = list.items;\n\t\t\t\t\tfor (let j = 0; j < list.items.length; j++) {\n\t\t\t\t\t\tconst item_path = items[j]['_delegate']['_location']['path_'];\n\t\t\t\t\t\tawait Firebase.storage().ref(item_path).delete();\n\t\t\t\t\t}\n\t\t\t\t\tawait Firebase.firestore().collection('orders').doc(orderId).delete();\n\t\t\t\t}\n\t\t\t\tawait Firebase.firestore().collection('clients').doc(id).delete();\n\t\t\t\tsetToastProps(\n\t\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t\t'Cliente Eliminado!',\n\t\t\t\t\t`¡El cliente fue eliminado de la nube!`,\n\t\t\t\t\t`> Firebase: Client: ${id} and all his/her orders are deleted from the system.`,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(`> Firebase: Couldn\\'t delete the user from Firebase`);\n\t\t\tconsole.error(error);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-window-close toast-fail',\n\t\t\t\t'Fallido',\n\t\t\t\t`¡No se pudo eliminar el cliente!`,\n\t\t\t\t`> Firebase: Error couldnt send request.\\n ${error.message}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\t//Change the casing of every word in the string\n\tconst formatString = (str) => {\n\t\t//Check if its multi-word\n\t\tconst parsedStr = str.replaceAll('%20', ' ');\n\t\tconsole.log(`${str} => ${parsedStr}`);\n\t\tconst words = parsedStr.split(' ');\n\t\tconst newString = words.map((item) => item.charAt(0).toUpperCase() + item.slice(1));\n\t\treturn newString.join(' ');\n\t};\n\n\tif (client === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container-fluid pt-3\">\n\t\t\t<Paths />\n\t\t\t<Toast\n\t\t\t\tonClose={() => setToast(false)}\n\t\t\t\tshow={toast}\n\t\t\t\tmessage={message}\n\t\t\t\tsssss\n\t\t\t\theading={heading}\n\t\t\t\timg={<i className={`${img} p-3`} />}\n\t\t\t/>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-12 w-100 client-pane\">\n\t\t\t\t\t<Description state={client} formatString={formatString.bind(this)} />\n\t\t\t\t\t<ButtonsPane onDelete={deleteClient.bind(this)} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<section className=\"row\">\n\t\t\t\t<Slidecard\n\t\t\t\t\tchildren={\n\t\t\t\t\t\t<Fields\n\t\t\t\t\t\t\tstate={client}\n\t\t\t\t\t\t\tformatString={formatString.bind(this)}\n\t\t\t\t\t\t\tonUpdate={updateClient.bind(this)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\ttitle=\"Información Del Cliente\"\n\t\t\t\t\ticon=\"fas fa-user-circle pr-2\"\n\t\t\t\t/>\n\t\t\t\t<Slidecard\n\t\t\t\t\tchildren={!empty ? <Orders state={orders} names={client} /> : <EmptyBox />}\n\t\t\t\t\ttitle=\"Pedidos Recientes\"\n\t\t\t\t\ticon=\"fas fa-list-alt pr-2\"\n\t\t\t\t/>\n\t\t\t</section>\n\t\t</main>\n\t);\n};\n\nconst Menu = ({ onDelete }) => (\n\t<Dropdown className=\"float-sm-right\">\n\t\t<Dropdown.Toggle id=\"dropdown-basic\">\n\t\t\t<i className=\"fas fa-cog\" />\n\t\t</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Item href=\"#/action-2\">\n\t\t\t\t<i className=\"fas fa-download pr-2\" />\n\t\t\t\tDescargar historial de pedidos\n\t\t\t</Dropdown.Item>\n\t\t\t<Dropdown.Item as={Button} onClick={onDelete}>\n\t\t\t\t<i className=\"fas fa-trash-alt pr-2\" />\n\t\t\t\tEliminar cliente\n\t\t\t</Dropdown.Item>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n);\n\nconst Description = ({ state, formatString }) => (\n\t<div id=\"description\">\n\t\t<h1>Cliente: {state !== null ? formatString(`${state.fname} ${state.lname}`) : ''}</h1>\n\t\t<p>Cliente desde: {state !== null ? state.clientSince : 'Not Available'}</p>\n\t\t<p style={{ width: '50%' }}>\n\t\t\tVea información sobre la cuenta de su cliente, descargue un archivo de su historial de pedidos o realice\n\t\t\tcambios en su información con las opciones proporcionadas.\n\t\t</p>\n\t</div>\n);\n\nconst ButtonsPane = ({ onDelete }) => <Menu onDelete={onDelete} />;\n\nconst Fields = ({ state, formatString, onUpdate }) => {\n\tif (state !== null) {\n\t\tconst types = fieldTypes(state);\n\t\treturn (\n\t\t\t<div className=\"col-md\">\n\t\t\t\t<div className=\"client-lists\">\n\t\t\t\t\t{types.map((item, index) => (\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\ttypes={types}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\tformatString={formatString}\n\t\t\t\t\t\t\tonUpdate={onUpdate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn <Empty />;\n};\n\nconst Orders = ({ state, names }) => {\n\tconst sortOrdersByDate = (orders) => {\n\t\tconst filteredDates = orders.sort((a, b) => {\n\t\t\ta = a.date.split('/');\n\t\t\tb = b.date.split('/');\n\t\t\treturn b[2] - a[2] || b[0] - a[0] || b[1] - a[1];\n\t\t});\n\t\treturn filteredDates;\n\t};\n\tif (state !== null && names !== null) {\n\t\tnames.fname = names.fname.replace(' ', '%20');\n\t\tnames.lname = names.lname.replace(' ', '%20');\n\t\tconst sortedOrders = sortOrdersByDate(state);\n\t\treturn (\n\t\t\t<div className=\"col-md-12\">\n\t\t\t\t<ol\n\t\t\t\t\tclassName=\"list-group list-group-flush order-lists\"\n\t\t\t\t\tid=\"clients\"\n\t\t\t\t\tstyle={{ backgroundColor: '#FDFFFC' }}\n\t\t\t\t>\n\t\t\t\t\t{Object.keys(sortedOrders).map((item, index) => {\n\t\t\t\t\t\tconst order = state[item];\n\t\t\t\t\t\tconst items = order.items.map((item) => item.name).join(', ');\n\t\t\t\t\t\treturn <File key={index} id={order.orderId} date={order.date} items={items} names={names} />;\n\t\t\t\t\t})}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn <Empty />;\n};\n\nconst EmptyBox = () => (\n\t<div className=\"col-md-12\">\n\t\t<div className=\"text-center justify-content-center align-items-center d-flex flex-column\">\n\t\t\t<i\n\t\t\t\tclassName=\"fab fa-creative-commons-zero p-5\"\n\t\t\t\tstyle={{ fontSize: 100, color: '#ee4266', backgroundColor: '#2a1e5c', borderRadius: 20 }}\n\t\t\t/>\n\t\t\t<p className=\"pt-5\">Este cliente no ha hecho ningún pedido todavía.</p>\n\t\t</div>\n\t</div>\n);\n\nconst Paths = () => (\n\t<Breadcrumb>\n\t\t<Breadcrumb.Item href=\"/clients\">Volver al origen</Breadcrumb.Item>\n\t\t<Breadcrumb.Item active>Cliente</Breadcrumb.Item>\n\t</Breadcrumb>\n);\n\nexport default Client;\n","/Users/solorzke/Documents/Developer/express-hub/src/components/Files/File.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Card.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Order.js",["259","260","261","262"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Files/Item.js",["263"],"/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/Field.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Empty.js",[],["264","265"],"/Users/solorzke/Documents/Developer/express-hub/src/components/SlideCard/UpdateField.js",["266"],"/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/Loading.js",[],["267","268"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/UpdateItems.js",["269","270","271"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Config } from '../../data/Config';\nimport { useLocation } from 'react-router-dom';\nimport { Accordion, Button, ListGroup, Card } from 'react-bootstrap';\nimport SlideCard from '../../components/SlideCard/Card';\nimport Loading from '../../components/Placeholders/Loading';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport BackButton from '../../components/BackButton/Back';\nimport Input from '../../components/Inputs/Input';\nimport Prompt from '../../components/Inputs/Prompt';\nimport Toast from '../../components/Toast/Toast';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst UpdateItems = () => <Wrapper children={<Body />} active=\"orders\" current=\"Actualizar Lista de Articulos\" />;\n\nconst Body = () => {\n\tconst ORDER_ID = useQuery().get('id');\n\tconst [ ORDER, setOrder ] = useState(null);\n\tconst [ ITEMS, setItems ] = useState({});\n\tconst [ PROMPT, setPrompt ] = useState(false);\n\tconst [ PROMPTKEY, setPromptKey ] = useState(null);\n\t//State data that control the toast message\n\tconst [ toast, setToast ] = useState(false);\n\tconst [ img, setImg ] = useState('fas fa-spinner fa-pulse');\n\tconst [ message, setMessage ] = useState('Actualizando Orden...');\n\tconst [ heading, setHeading ] = useState('Recopilar archivos y actualizarlos a la nube');\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (ORDER === null) getOrder();\n\t\t\tif (ORDER !== null) {\n\t\t\t\tdocument.getElementById('item').value = '';\n\t\t\t\tdocument.getElementById('quantity').value = '1';\n\t\t\t}\n\t\t},\n\t\t[ ORDER, ITEMS, PROMPT, PROMPTKEY ]\n\t);\n\n\t//Set the state for the toast props\n\tconst setToastProps = (toastImg, toastHeading, toastMessage, log, action) => {\n\t\tsetImg(toastImg);\n\t\tsetHeading(toastHeading);\n\t\tsetMessage(toastMessage);\n\t\tconsole.log(log);\n\t\tsetTimeout(() => {\n\t\t\tif (action) window.location.href = '/orders';\n\t\t\tsetToast(false);\n\t\t\tsetImg('fas fa-spinner fa-pulse');\n\t\t\tsetHeading('Recopilar archivos y actualizarlos a la nube');\n\t\t\tsetMessage('Actualizando Orden...');\n\t\t\tconsole.log('Toast Props set to normal.');\n\t\t}, 3000);\n\t};\n\n\t//On submission of the form, create an obj of all the items and its files and proceed to the next page\n\tconst onItemSubmit = (e) => {\n\t\te.preventDefault();\n\t\taddItem();\n\t};\n\n\t//Add the item and its quanity from the form to the state\n\tconst addItem = () => {\n\t\t//Check if the input is empty\n\t\tif (document.getElementById('item').value === '') return alert('Ingrese un Artículo.');\n\t\tif (itemAlreadyExists(document.getElementById('item').value.toLowerCase()))\n\t\t\treturn alert('El artículo ya está agregado. Agregar uno nuevo');\n\t\tconst item = document.getElementById('item').value.toLowerCase();\n\t\tconst key = createObjectKey(item);\n\t\tconst quantity = document.getElementById('quantity').value;\n\t\tsetItems({ ...ITEMS, [key]: { name: item, quantity: quantity, files: [] } });\n\t};\n\n\tconst getOrder = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('orders').where('orderId', '==', ORDER_ID).get();\n\t\t\tlet order_doc = [];\n\t\t\tsnapshot.forEach((item) => order_doc.push(item.data()));\n\t\t\tsetOrder(order_doc[0]);\n\t\t\torder_doc[0].items.map((item) => {\n\t\t\t\tconst key = createObjectKey(item.name);\n\t\t\t\tconst docKeys = Object.keys(order_doc[0]['item-images']);\n\t\t\t\tconst avi = docKeys.filter((docKey) => docKey === `${key}-avi`);\n\t\t\t\tconst relevantDocs = docKeys\n\t\t\t\t\t.filter((docKey) => docKey.includes(key) && docKey !== `${key}-avi`)\n\t\t\t\t\t.map((doc) => ({ name: doc, path: order_doc[0]['item-images'][doc] }));\n\t\t\t\tconst data = {\n\t\t\t\t\t[key]: {\n\t\t\t\t\t\tquantity: item.quantity,\n\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\tavi: { path: order_doc[0]['item-images'][avi[0]] },\n\t\t\t\t\t\tfiles: relevantDocs\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tsetItems((STATE) => ({ ...STATE, ...data }));\n\t\t\t});\n\t\t\tconsole.log('> Firebase: Order retrieved!');\n\t\t} catch (error) {\n\t\t\tconsole.error('> Firebase: Could not proceed with request');\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Extract and remove the file item by matching the index of the item in the filter loop.\n\tconst onRemoveFile = async (index, itemKey, stateHandler) => {\n\t\tstateHandler(index);\n\t\tlet copy = ITEMS[itemKey]['files'][index];\n\t\tconst FieldValue = Firebase.firestore.FieldValue;\n\t\tconsole.log(copy);\n\t\tconst filtered_files = ITEMS[itemKey]['files'].filter((item, i) => index !== i);\n\t\tawait Firebase.storage().ref(`images/${ORDER_ID}/${copy.name}`).delete().catch((e) => console.error(e));\n\t\tawait Firebase.firestore()\n\t\t\t.collection('orders')\n\t\t\t.doc(ORDER_ID)\n\t\t\t.update({\n\t\t\t\t['item-images.' + copy.name]: FieldValue.delete()\n\t\t\t})\n\t\t\t.catch((e) => console.error(e));\n\t\t// await Firebase.storage().ref(`images/${ORDER_ID}`).child(copy.name).delete();\n\t\tsetItems((STATE) => ({\n\t\t\t...STATE,\n\t\t\t[itemKey]: {\n\t\t\t\t...STATE[itemKey],\n\t\t\t\tfiles: filtered_files\n\t\t\t}\n\t\t}));\n\t\tstateHandler(false);\n\t};\n\n\t//Once the Update/Save button is clicked, move on to the next page with the state item data passed in\n\tconst onFinish = async (e) => {\n\t\ttry {\n\t\t\te.preventDefault();\n\t\t\tsetToast(true);\n\t\t\tif (Object.keys(ITEMS).length === 0) return alert('Agregue al menos un artículo para su pedido.');\n\t\t\tconst payload = await uploadFilesToStorage();\n\t\t\tconst response = await updateOrderToFirestore(payload);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t'¡Actualizacion completa!',\n\t\t\t\t`¡El pedido se actualizó a la nube!`,\n\t\t\t\t`> Firebase: Order: ${ORDER_ID} and its items are updated to the system.`,\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tif (response) window.location.reload();\n\t\t} catch (error) {\n\t\t\tconsole.error('> Firebase: request couldnt go through');\n\t\t\tconsole.error(error);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t'¡Actualización fallida!',\n\t\t\t\t`¡El pedido no se pudo actualizar a la nube!`,\n\t\t\t\t`> Firebase: Order: ${ORDER_ID} and its information weren't updated to the system.`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\t//Returns a promise with the downloaded url of the image uploaded to the cloud storage\n\tconst uploadFile = (doc, orderId, itemKey, documentName) =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\t//Prepare the path of the image with the order id for the folder, and document name with the item key as its title\n\t\t\tconst formattedDocName = documentName.replace('.', '_');\n\t\t\tconst path = `images/${orderId}/${itemKey}-${formattedDocName}`;\n\t\t\tFirebase.storage().ref(path).put(doc).then((snapshot) => {\n\t\t\t\tsnapshot.ref.getDownloadURL().then((url) => {\n\t\t\t\t\tresolve({ name: `${itemKey}-${formattedDocName}`, path: url });\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\tconst uploadFilesToStorage = () =>\n\t\tnew Promise(async (resolve, reject) => {\n\t\t\t//Urls and Avis array are to keep all data that belongs to each item\n\t\t\tlet urls = [];\n\t\t\tlet avis = [];\n\t\t\tlet fileKeys = Object.keys(ITEMS);\n\t\t\t//Pop every itemkey during the while loop sequence and run the code below\n\t\t\tdo {\n\t\t\t\tconst currentItemKey = fileKeys.pop();\n\t\t\t\tconst avi = ITEMS[currentItemKey].avi;\n\t\t\t\t//Choose to upload the avi file data only if it is present with 'file' key property, or pass the obj with the current avi data\n\t\t\t\tconst aviCon = avi.hasOwnProperty('file')\n\t\t\t\t\t? await uploadFile(avi.file, ORDER_ID, currentItemKey, 'avi')\n\t\t\t\t\t: { name: `${currentItemKey}-avi`, path: avi.path };\n\t\t\t\tavis.push(aviCon);\n\t\t\t\tconst files = ITEMS[currentItemKey].files;\n\t\t\t\t//In the loop, determine if the current file is of File prototype, then upload the file and push its response to the url array\n\t\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\t\t//Check if file matches file prototype\n\t\t\t\t\tif (files[i] instanceof File) {\n\t\t\t\t\t\tconst path = await uploadFile(files[i], ORDER_ID, currentItemKey, files[i].name);\n\t\t\t\t\t\turls.push(path);\n\t\t\t\t\t} else {\n\t\t\t\t\t\turls.push(files[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (fileKeys.length !== 0);\n\t\t\tconsole.log(ORDER);\n\t\t\tresolve({ files: urls, avi: avis });\n\t\t});\n\n\t//After the files are uploaded to storage, use the payload response, format it, and update the order with the new information to the firestore\n\tconst updateOrderToFirestore = (payload) =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\tlet copy = ITEMS;\n\t\t\t//Create an empty array that'll house our item document info, in the obj format of [document.name] = document.path\n\t\t\tlet itemsImagesPayload = {};\n\t\t\t[ ...payload.files, ...payload.avi ].forEach((item) => (itemsImagesPayload[item.name] = item.path));\n\t\t\t//Create an array of objs that store name and quantity of every order set in the state.\n\t\t\tconst itemInfoPayload = Object.keys(copy).map((item) => ({\n\t\t\t\tname: copy[item].name,\n\t\t\t\tquantity: copy[item].quantity\n\t\t\t}));\n\t\t\t//Update the document in the firestore with the new item information\n\t\t\tFirebase.firestore()\n\t\t\t\t.collection('orders')\n\t\t\t\t.doc(ORDER_ID)\n\t\t\t\t.update({ items: itemInfoPayload, 'item-images': { ...itemsImagesPayload } })\n\t\t\t\t.then(() => resolve(true));\n\t\t});\n\n\t//Track changes to the input ref for avi image of the item, update its data to the state, and set the img source to\n\t//the uploaded avi image.\n\tconst onAviChange = (e, ref, itemKey) => {\n\t\tconst url = URL.createObjectURL(e.target.files[0]);\n\t\tsetItems((STATE) => ({\n\t\t\t...STATE,\n\t\t\t[itemKey]: {\n\t\t\t\t...STATE[itemKey],\n\t\t\t\tavi: { path: url, file: e.target.files[0] }\n\t\t\t}\n\t\t}));\n\t\t// ref.current.src = url;\n\t\t// setAvi(e.target.files[0]);\n\t};\n\n\t//Change the casing of every word in the string\n\tconst formatString = (str) => {\n\t\t//Check if its multi-word\n\t\tconst words = str.split(' ');\n\t\tconst newString = words.map((item) => item.charAt(0).toUpperCase() + item.slice(1));\n\t\treturn newString.join(' ');\n\t};\n\t//Set a default image from a url to the avi as a placeholder until it is changed\n\tconst setDefaultImage = (item, key) => {\n\t\tconst placeholder = 'https://www.nbmchealth.com/wp-content/uploads/rem/2018/04/default-placeholder.png';\n\t\tif (item.hasOwnProperty('avi')) {\n\t\t\treturn item.avi.path;\n\t\t} else {\n\t\t\tsetItems((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\t[key]: {\n\t\t\t\t\t...prevState[key],\n\t\t\t\t\tavi: { path: placeholder }\n\t\t\t\t}\n\t\t\t}));\n\t\t\treturn placeholder;\n\t\t}\n\t};\n\n\t//Create a key for the state item\n\tconst createObjectKey = (name) => name.split(' ').join('');\n\n\t//Track what type of action the onClick function was triggered for and execute its case subroutine\n\tconst onTriggerInput = (type, aviInputRef, fileRef) => {\n\t\tswitch (type) {\n\t\t\tcase 'avi':\n\t\t\t\taviInputRef.current.click();\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\tfileRef.current.click();\n\t\t}\n\t};\n\n\t//Update the files state by uploading the entire files' object/array from the event obj and set the event key to 0.\n\t//'0' meaning trigger the Accordian Body reveal with the file items displayed vs. '1' meaning hide the Accordian Body\n\tconst addFile = (e, currentItemKey) => {\n\t\tconst inputFiles = e.target.files;\n\t\tlet data = [ ...ITEMS[currentItemKey]['files'] ];\n\t\tObject.keys(inputFiles).forEach((item) => (data = [ ...data, inputFiles[item] ]));\n\t\tsetItems((STATE) => ({\n\t\t\t...STATE,\n\t\t\t[currentItemKey]: {\n\t\t\t\t...STATE[currentItemKey],\n\t\t\t\tfiles: data\n\t\t\t}\n\t\t}));\n\t\t// if (key !== 0) setKey('0');\n\t};\n\n\t//Update the item name, quantity or both\n\tconst onUpdate = (e, key) => {\n\t\te.preventDefault();\n\t\tsetPrompt(true);\n\t\tsetPromptKey(key);\n\t};\n\n\t//Delete the item from the state\n\tconst onDelete = (e, key) => {\n\t\te.preventDefault();\n\t\tlet copy = ITEMS;\n\t\tdelete copy[key];\n\t\tsetItems({ ...copy });\n\t};\n\n\t//Prevent the user from adding the same item in the state by accident\n\tconst itemAlreadyExists = (input) => {\n\t\tconst key = createObjectKey(input.toLowerCase());\n\t\tconst results = Object.keys(ITEMS).filter((item) => item === key);\n\t\treturn results.length > 0 ? true : false;\n\t};\n\n\tconst onPromptSubmission = (quantity, itemName, key) => {\n\t\tif (itemName !== '') {\n\t\t\tif (itemAlreadyExists(itemName)) return alert('Ese artículo ya existe.');\n\t\t\t//Change the key name by creating a new object with the same properties and deleting the old one\n\t\t\tconst newKey = createObjectKey(itemName.toLowerCase());\n\t\t\tlet itemsCopy = ITEMS;\n\t\t\titemsCopy[newKey] = ITEMS[key];\n\t\t\t//Delete the old key obj from the new obj\n\t\t\tdelete itemsCopy[key];\n\t\t\t//assign the updated values to the new obj key\n\t\t\titemsCopy[newKey]['name'] = itemName.toLowerCase();\n\t\t\t// //Update the new updated items state\n\t\t\tsetItems({ ...itemsCopy });\n\t\t\t//Reassign the key value for the quantity code below to find the new key if updated\n\t\t\tkey = newKey;\n\t\t}\n\t\tif (quantity !== '') {\n\t\t\tlet copy = ITEMS[key];\n\t\t\tcopy['quantity'] = quantity;\n\t\t\tsetItems({ ...ITEMS, [key]: copy });\n\t\t}\n\t\tsetPrompt(false);\n\t};\n\tif (ORDER === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container-fluid pt-3\">\n\t\t\t<Toast\n\t\t\t\tonClose={() => setToast(false)}\n\t\t\t\tshow={toast}\n\t\t\t\tmessage={message}\n\t\t\t\theading={heading}\n\t\t\t\timg={<i className={`${img} p-3`} />}\n\t\t\t/>\n\t\t\t<BackButton\n\t\t\t\tvalue=\"Volver al pedido\"\n\t\t\t\tmessage=\"¿Está seguro de que desea volver a la página anterior? Se perderán todos los datos actuales.\"\n\t\t\t\tpath={document.referrer}\n\t\t\t/>\n\t\t\t<div className=\"row\">\n\t\t\t\t<SlideCard\n\t\t\t\t\tchildren={\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<Description />\n\t\t\t\t\t\t\t<ItemsForm onSubmit={onItemSubmit.bind(this)} onFinish={onFinish.bind(this)} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\ttitle=\"Sumisión\"\n\t\t\t\t\ticon=\"fas fa-keyboard pr-3\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<SlideCard\n\t\t\t\t\tchildren={\n\t\t\t\t\t\t<CloudItems\n\t\t\t\t\t\t\torder={ITEMS}\n\t\t\t\t\t\t\taddFile={addFile.bind(this)}\n\t\t\t\t\t\t\tsetDefaultImage={setDefaultImage.bind(this)}\n\t\t\t\t\t\t\tformatString={formatString.bind(this)}\n\t\t\t\t\t\t\tonAviChange={onAviChange.bind(this)}\n\t\t\t\t\t\t\tonTriggerInput={onTriggerInput.bind(this)}\n\t\t\t\t\t\t\tonUpdate={onUpdate.bind(this)}\n\t\t\t\t\t\t\tonDelete={onDelete.bind(this)}\n\t\t\t\t\t\t\tonRemoveFile={onRemoveFile.bind(this)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\ttitle=\"Artículos\"\n\t\t\t\t\ticon=\"fas fa-clipboard-list pr-3\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{/* <Undo onClick={() => alert('hello')} onClose={() => alert('goodbye')} /> */}\n\t\t\t<Prompt\n\t\t\t\tmodalShow={PROMPT}\n\t\t\t\tonHide={() => setPrompt(false)}\n\t\t\t\titemKey={PROMPTKEY}\n\t\t\t\tcurrentItem={ITEMS[PROMPTKEY] !== undefined ? ITEMS[PROMPTKEY].name : 'NULL'}\n\t\t\t\tcurrentQuantity={ITEMS[PROMPTKEY] !== undefined ? ITEMS[PROMPTKEY].quantity : 'NULL'}\n\t\t\t\tonPromptSubmission={onPromptSubmission.bind(this)}\n\t\t\t/>\n\t\t</main>\n\t);\n};\n\nconst Description = () => (\n\t<div className=\"col\">\n\t\t<div id=\"description\">\n\t\t\t<h1>Agregar / Actualizar Artículos Para Ordenar</h1>\n\t\t\t<p>\n\t\t\t\tIngrese todos los artículos que le gustaría agregar a este pedido antes de finalizar. Toma esta\n\t\t\t\toportunidad para cargue cualquier archivo o documento que sea pertinente a cada uno de sus artículos.\n\t\t\t</p>\n\t\t\t<p className=\"mb-5\">\n\t\t\t\tHaga clic en 'Actualizar' cuando haya terminado de agregar elementos / archivos para actualizar el\n\t\t\t\tpedido.\n\t\t\t</p>\n\t\t</div>\n\t</div>\n);\n\nconst ItemsForm = ({ onSubmit, onFinish }) => (\n\t<div className=\"col justify-content-center align-items-center d-flex\">\n\t\t<form onSubmit={onSubmit}>\n\t\t\t<div className=\"form-group row\">\n\t\t\t\t<Input\n\t\t\t\t\trequired={false}\n\t\t\t\t\tcolumn=\"col-md-10\"\n\t\t\t\t\tid=\"item\"\n\t\t\t\t\tlabel=\"Nombre del árticulo\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Nombre del árticulo\"\n\t\t\t\t\tname=\"item\"\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\trequired={false}\n\t\t\t\t\tcolumn=\"col-md-2\"\n\t\t\t\t\tid=\"quantity\"\n\t\t\t\t\tlabel=\"Cantidad\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Cantidad\"\n\t\t\t\t\tname=\"quantity\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<input type=\"submit\" className=\"btn btn-primary float-right d-inline\" value=\"Añadir Artículo\" />\n\t\t\t<button className=\"btn-success btn float-right d-inline mr-3\" onClick={onFinish}>\n\t\t\t\tActualizar y Guardar Pedido\n\t\t\t</button>\n\t\t</form>\n\t</div>\n);\n\nconst CloudItems = (props) => (\n\t<div className=\"cloud-items\">\n\t\t{Object.keys(props.order).map((item, index) => {\n\t\t\tconst cloudItem = props.order[item];\n\t\t\tconst aviPath = props.setDefaultImage(props.order[item], item);\n\t\t\tconst name = props.formatString(cloudItem.name);\n\t\t\treturn (\n\t\t\t\t<FileBox\n\t\t\t\t\tkey={index}\n\t\t\t\t\titemKey={item}\n\t\t\t\t\tfiles={cloudItem.files}\n\t\t\t\t\taviPath={aviPath}\n\t\t\t\t\titemName={name}\n\t\t\t\t\tquantity={cloudItem.quantity}\n\t\t\t\t\taddFile={props.addFile}\n\t\t\t\t\tonUpdate={props.onUpdate}\n\t\t\t\t\tonDelete={props.onDelete}\n\t\t\t\t\tonRemoveFile={props.onRemoveFile}\n\t\t\t\t\tonAviChange={props.onAviChange}\n\t\t\t\t\tonTriggerInput={props.onTriggerInput}\n\t\t\t\t/>\n\t\t\t);\n\t\t})}\n\t</div>\n);\n\nconst FileBox = (props) => {\n\t//Refs\n\tlet aviInputRef = useRef(null);\n\tlet aviRef = useRef(null);\n\tlet fileRef = useRef(null);\n\n\t//State\n\tconst [ LOAD, setLoad ] = useState(false);\n\n\tconst handleAddFile = (e) => {\n\t\tprops.addFile(e, props.itemKey);\n\t};\n\n\tuseEffect(() => {}, [ aviInputRef, aviRef, fileRef ]);\n\n\tconst Avi = () => (\n\t\t<div className=\"col-md-2 d-flex justify-content-center align-items-center\">\n\t\t\t<button\n\t\t\t\tclassName=\"btn btn-default btn-file\"\n\t\t\t\tonClick={() => props.onTriggerInput('avi', aviInputRef, fileRef)}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tonChange={(e) => props.onAviChange(e, aviRef, props.itemKey)}\n\t\t\t\t\tref={aviInputRef}\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tid={`${props.itemKey}-avi`}\n\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t/>\n\t\t\t\t<img src={props.aviPath} ref={aviRef} className=\"text-center\" height=\"50\" width=\"50\" id=\"avi\" />\n\t\t\t</button>\n\t\t</div>\n\t);\n\n\tconst Box = () => (\n\t\t<span className=\"d-inline\">\n\t\t\t<h5 className=\"d-inline\">{props.itemName}</h5>\n\t\t\t<p>\n\t\t\t\tCantidad: {props.quantity}\n\t\t\t\t<span className=\"pl-1\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-link\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={() => props.onTriggerInput('file', aviInputRef, fileRef)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tref={fileRef}\n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tclassName=\"btn btn-link py-0 px-3\"\n\t\t\t\t\t\t\tonChange={handleAddFile}\n\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\tAgregar Archivos\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={(e) => props.onUpdate(e, props.itemKey)}>\n\t\t\t\t\t\tActualizar Artículo\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={(e) => props.onDelete(e, props.itemKey)}>\n\t\t\t\t\t\tRemover El Artículo\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</span>\n\t);\n\n\tconst Chevron = () => (\n\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className=\"p-0 float-right d-inline\">\n\t\t\t<i className=\"fas fa-chevron-down float-right\" />\n\t\t</Accordion.Toggle>\n\t);\n\n\tconst Items = () =>\n\t\tprops.files.map((item, index) => (\n\t\t\t<ListGroup.Item\n\t\t\t\tkey={index}\n\t\t\t\tclassName=\"file-item\"\n\t\t\t\tstyle={{\n\t\t\t\t\tborderBottom: index === props.files.length - 1 ? '1px solid #e8e8e8' : ''\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{item.name}\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-danger float-right\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onRemoveFile(index, props.itemKey, setLoad);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{LOAD === index ? <Loading /> : 'Eliminar'}\n\t\t\t\t</button>\n\t\t\t</ListGroup.Item>\n\t\t));\n\n\tconst Header = () => (\n\t\t<Card.Header className=\"px-2 py-0\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<Avi />\n\t\t\t\t<div className=\"col-md-10 pl-3 text-left pt-2\">\n\t\t\t\t\t<Chevron />\n\t\t\t\t\t<Box />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Card.Header>\n\t);\n\n\tconst Body = () => (\n\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t<Card.Body className=\"p-0\">\n\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t<Items />\n\t\t\t\t</ListGroup>\n\t\t\t</Card.Body>\n\t\t</Accordion.Collapse>\n\t);\n\n\treturn (\n\t\t<div className=\"w-100\" id=\"order-items\">\n\t\t\t<Accordion>\n\t\t\t\t<Card>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Body />\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\t\t</div>\n\t);\n};\n\nexport default UpdateItems;\n\n// console.log(`Is it a file: ${inputFiles[0] instanceof File}`);\n","/Users/solorzke/Documents/Developer/express-hub/src/data/InputTypes.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Undo/Undo.js",[],["272","273"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Search/Index.js",["274"],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Settings/Index.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/UserInputTypes.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/ForgotPassword.js",["275","276","277"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Logo from '../teloentrego.png';\nimport Firebase from 'firebase/app';\nimport Loading from '../components/Placeholders/Loading';\nimport 'firebase/auth';\nimport { Config } from '../data/Config';\nimport '../css/login.css';\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\n// the query string for you.\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nconst ResetPassword = () => {\n\tlet QUERY = useQuery();\n\tconst [ oobCode, setOobCode ] = useState(null);\n\tconst [ mode, setMode ] = useState(null);\n\tconst [ process, setProcess ] = useState('start');\n\tconst [ heading, setHeading ] = useState('Reset Password');\n\n\tuseEffect(() => {\n\t\tconst query_mode = QUERY.get('mode');\n\t\tconst query_oobCode = QUERY.get('oobCode');\n\t\tif (query_mode === null || query_oobCode === null) window.location.href = '/';\n\t\tsetOobCode(query_oobCode);\n\t\tsetMode(query_mode);\n\t}, []);\n\n\tconst onSubmit = async (e, input_email, new_pw) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tsetProcess('loading');\n\t\t\tsetHeading('Please Wait...');\n\t\t\tconst user_email = await Firebase.auth().verifyPasswordResetCode(oobCode);\n\t\t\tif (user_email !== input_email) {\n\t\t\t\talert(\"Email Address doesn't match with the code it was sent from. Try again\");\n\t\t\t\tsetProcess('start');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait Firebase.auth().confirmPasswordReset(oobCode, new_pw);\n\t\t\tconsole.log('> Firebase: Password Reset Successful');\n\t\t\tsetProcess('finished');\n\t\t\tsetHeading('Complete');\n\t\t} catch (error) {\n\t\t\tconsole.error(\"> Firebase: Couldn't verify the reset process of the password with firebase\");\n\t\t\tconsole.error(error);\n\t\t\talert('The reset request code has expired / not been found');\n\t\t\tsetProcess('start');\n\t\t} finally {\n\t\t\tsetHeading('Reset Password');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"login login-body\">\n\t\t\t<main className=\"login-login-container container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t<img src={Logo} height=\"400\" width=\"550\" />\n\t\t\t\t\t\t<h2 className=\"pt-5 text-center jo-font\">\n\t\t\t\t\t\t\tShipping &amp; Packaging At Its Finest! Across the USA &amp; South America\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<p className=\"pt-5 text-center jo-font\">\n\t\t\t\t\t\t\tA Different Kind Of Company. A Different Kind Of Express Shipping.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col d-flex justify-content-center align-content-center flex-column\">\n\t\t\t\t\t\t<h1 className=\"text-center\">{heading}</h1>\n\t\t\t\t\t\t{process === 'start' && <ResetPasswordBox onSubmit={onSubmit.bind(this)} />}\n\t\t\t\t\t\t{process === 'loading' && <LoadingBox />}\n\t\t\t\t\t\t{process === 'finished' && <ConfirmationBox />}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nconst ResetPasswordBox = ({ onSubmit }) => (\n\t<Fragment>\n\t\t<form\n\t\t\tonSubmit={(e) => {\n\t\t\t\tconst email = document.getElementById('email').value;\n\t\t\t\tconst new_pw = document.getElementById('new-pw').value;\n\t\t\t\tonSubmit(e, email, new_pw);\n\t\t\t}}\n\t\t>\n\t\t\t<input name=\"email\" id=\"email\" placeholder=\"Email Address\" type=\"email\" required />\n\t\t\t<input name=\"new-pw\" id=\"new-pw\" placeholder=\"New Password\" type=\"password\" required />\n\t\t\t<input type=\"submit\" name=\"submit\" value=\"Reset Password\" className=\"login-login-btn\" />\n\t\t</form>\n\t\t<p className=\"p-3 text-center\">\n\t\t\tRemember Password?\n\t\t\t<a className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\" href=\"/\">\n\t\t\t\tLogin In\n\t\t\t</a>\n\t\t</p>\n\t</Fragment>\n);\n\nconst ConfirmationBox = () => (\n\t<div className=\"animate__animated animate__fadeInUpBig text-center\">\n\t\t<i className=\"fas fa-clipboard-check py-5\" style={{ fontSize: 100, color: '#ee4266' }} />\n\t\t<p className=\"pt-5\">\n\t\t\tYour password has been reset.\n\t\t\t<a className=\"btn btn-link p-0 mx-2 my-0 confirm-login-btn\" href=\"/\">\n\t\t\t\tYou can now go back &amp; log in.\n\t\t\t</a>\n\t\t</p>\n\t</div>\n);\n\nconst LoadingBox = () => (\n\t<div style={{ fontSize: 80 }} className=\"text-center py-5 animate__animated animate__fadeIn\">\n\t\t<Loading />\n\t\t<p style={{ fontSize: 16, color: '#ee4266' }} className=\"pt-5\">\n\t\t\tYour request is being processed...\n\t\t</p>\n\t</div>\n);\n\nexport default ResetPassword;\n","/Users/solorzke/Documents/Developer/express-hub/src/data/ClientInputTypes.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Orders/Index.js",["278","279","280","281"],"import React, { useState, useEffect, Fragment } from 'react';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport { Table, Pagination } from 'react-bootstrap';\nimport { Headings } from '../../data/TableHeadings';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { Config } from '../../data/Config';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport { Months, Days, Years } from '../../data/Dates';\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst Index = () => <Wrapper children={<Body />} active=\"orders\" current=\"Pedidos\" />;\n\nconst Body = () => {\n\tconst [ ORDERS, setOrders ] = useState(null);\n\tconst [ FILTERED_ORDERS, setFilteredOrders ] = useState(null);\n\tconst [ CLIENTS, setClients ] = useState(null);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (ORDERS === null) {\n\t\t\t\tgetOrders();\n\t\t\t}\n\t\t},\n\t\t[ ORDERS, CLIENTS, FILTERED_ORDERS ]\n\t);\n\n\tconst getClients = async (orders) => {\n\t\tfor (let i = 0; i < orders.length; i++) {\n\t\t\tconst order = orders[i];\n\t\t\tconst client = (await Firebase.firestore().collection('clients').doc(order.clientId).get()).data();\n\t\t\tsetClients((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\t[order.clientId]: {\n\t\t\t\t\tfname: client.fname,\n\t\t\t\t\tlname: client.lname,\n\t\t\t\t\tid: client.id\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t};\n\n\tconst getOrders = async () => {\n\t\ttry {\n\t\t\tlet results = [];\n\t\t\tconst snapshot = await Firebase.firestore().collection('orders').get();\n\t\t\tsnapshot.forEach((doc) => results.push(doc.data()));\n\t\t\tsetOrders(results);\n\t\t\tsetFilteredOrders(results);\n\t\t\tconsole.log(`> Firebase: ${results.length} results found.`);\n\t\t\tgetClients(results);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"> Firebase: Couldn't send request.\");\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tconst sortOrders = (type, field) => {\n\t\tlet copy = [ ...FILTERED_ORDERS ];\n\t\tswitch (type) {\n\t\t\tcase 'string':\n\t\t\t\tconst sortedStrings = copy.sort((a, b) => {\n\t\t\t\t\tif (a[field] < b[field]) return -1;\n\t\t\t\t\telse if (a[field] > b[field]) return 1;\n\t\t\t\t\telse return 0;\n\t\t\t\t});\n\t\t\t\tsetFilteredOrders(sortedStrings);\n\t\t\t\treturn sortedStrings;\n\t\t\tcase 'num':\n\t\t\t\tconst sortedNums = copy.sort((a, b) => {\n\t\t\t\t\ta = parseInt(a[field]);\n\t\t\t\t\tb = parseInt(b[field]);\n\t\t\t\t\treturn b - a;\n\t\t\t\t});\n\t\t\t\tsetFilteredOrders(sortedNums);\n\t\t\t\treturn sortedNums;\n\t\t\tcase 'date':\n\t\t\t\tconst sortedDates = copy.sort((a, b) => {\n\t\t\t\t\ta = a.date.split('/');\n\t\t\t\t\tb = b.date.split('/');\n\t\t\t\t\treturn b[2] - a[2] || b[0] - a[0] || b[1] - a[1];\n\t\t\t\t});\n\t\t\t\tsetFilteredOrders(sortedDates);\n\t\t\t\treturn sortedDates;\n\t\t\tcase 'boolean':\n\t\t\t\tconst sortedBooleans = copy.sort((a, b) => Number(a.shippingStatus) - Number(b.shippingStatus));\n\t\t\t\tsetFilteredOrders(sortedBooleans);\n\t\t\t\treturn sortedBooleans;\n\t\t}\n\t};\n\n\tconst sortDescendingOrders = (sorted) => setOrders(sorted.reverse());\n\n\tconst onDateChange = () => {\n\t\tconst selected_month = document.getElementById('month').selectedOptions[0].value;\n\t\tconst selected_day = document.getElementById('day').selectedOptions[0].value;\n\t\tconst selected_year = document.getElementById('year').selectedOptions[0].value;\n\t\tconst copy = [ ...ORDERS ];\n\t\tconst filtered = copy.filter((item) => {\n\t\t\tconst currentMonth = item.date.split('/')[0];\n\t\t\tconst currentDay = item.date.split('/')[1];\n\t\t\tconst currentYear = item.date.split('/')[2];\n\t\t\treturn currentMonth === selected_month && currentDay >= selected_day && currentYear === selected_year;\n\t\t});\n\t\tconsole.log(FILTERED_ORDERS);\n\t\tsetFilteredOrders(filtered);\n\t};\n\n\tif (ORDERS === null || CLIENTS === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"container-fluid\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<Description />\n\t\t\t\t<DateForm onDateChange={onDateChange.bind(this)} />\n\t\t\t</div>\n\t\t\t<Spreadsheet\n\t\t\t\tclients={CLIENTS}\n\t\t\t\tdata={FILTERED_ORDERS}\n\t\t\t\tonClick={sortOrders.bind(this)}\n\t\t\t\tonSortDescending={sortDescendingOrders.bind(this)}\n\t\t\t/>\n\t\t</main>\n\t);\n};\n\nconst Spreadsheet = ({ clients, data, onClick, onSortDescending }) => {\n\tconst [ filter, setFilter ] = useState({ key: 9999, status: 'none' });\n\tconst [ indices, setIndices ] = useState([ [ 0 ] ]);\n\tconst [ currentPage, setCurrentPage ] = useState(0);\n\tconst headers = Headings(onClick);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tonIndexingPages(data);\n\t\t},\n\t\t[ filter, data ]\n\t);\n\n\tconst onIndexingPages = (orders) => {\n\t\tlet pages = [];\n\t\tlet copy = [ ...orders ];\n\t\tdo {\n\t\t\tlet page = [];\n\t\t\tfor (let i = 0; i < 10; i++) {\n\t\t\t\tif (copy.length === 0) break;\n\t\t\t\telse page.push(copy.shift());\n\t\t\t}\n\t\t\tpages.push(page);\n\t\t} while (copy.length > 0);\n\t\tsetIndices(pages);\n\t\tconsole.log(orders);\n\t};\n\n\tconst onFilterClick = (e, index) => {\n\t\te.preventDefault();\n\t\treturn filter.key === index ? onSetStatus(filter.key, filter.status) : onSetStatus(index, filter.status);\n\t};\n\n\tconst onSetStatus = (key, status) => {\n\t\tswitch (status) {\n\t\t\tcase 'none':\n\t\t\t\tsetFilter({ key: key, status: 'asc' });\n\t\t\t\treturn 'asc';\n\t\t\tcase 'asc':\n\t\t\t\tsetFilter({ key: key, status: 'des' });\n\t\t\t\treturn 'des';\n\t\t\tcase 'des':\n\t\t\t\tsetFilter({ key: key, status: 'asc' });\n\t\t\t\treturn 'asc';\n\t\t}\n\t};\n\n\tconst onOrderPageClick = (orderId, clientId) => {\n\t\tconst fname = clients[clientId].fname;\n\t\tconst lname = clients[clientId].lname;\n\t\twindow.location.href = `/order?id=${orderId}&fname=${fname}&lname=${lname}`;\n\t};\n\n\tconst onClientPageClick = (clientId) => (window.location.href = `/clients/${clientId}`);\n\n\tconst setChevron = (item, index) => {\n\t\tif (filter.key !== index) return item.class.none;\n\t\telse if (filter.status === 'asc') return item.class.asc;\n\t\telse if (filter.status === 'des') return item.class.des;\n\t};\n\n\tconst onChevronClick = (e, item, index) => {\n\t\tconst status = onFilterClick(e, index);\n\t\tswitch (status) {\n\t\t\tcase 'asc':\n\t\t\t\treturn item.onClick();\n\t\t\tcase 'des':\n\t\t\t\tconst orders = item.onClick();\n\t\t\t\treturn onSortDescending(orders);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Table striped bordered hover className=\"mb-1\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{headers.map((item, index) => {\n\t\t\t\t\t\t\tconst chevron = setChevron(item, index);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<th key={index}>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\tstyle={item.style}\n\t\t\t\t\t\t\t\t\t\tclassName={chevron}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => onChevronClick(e, item, index)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{indices[currentPage].map((item, index) => (\n\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tclassName=\"btn-link\"\n\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\tonClick={() => onOrderPageClick(item.orderId, item.clientId)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item.orderId}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tclassName=\"btn-link\"\n\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\tonClick={() => onClientPageClick(item.clientId)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item.clientId}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{item.date}</td>\n\t\t\t\t\t\t\t<td>{item.country}</td>\n\t\t\t\t\t\t\t<td>{item.province}</td>\n\t\t\t\t\t\t\t<td>{item.address}</td>\n\t\t\t\t\t\t\t<td className={item.shippingStatus ? 'text-success' : 'text-danger'}>\n\t\t\t\t\t\t\t\t{item.shippingStatus ? 'Enviado' : 'No Enviado'}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>{item.trackingNum}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t\t<p className=\"text-right p-0 m-0 text-secondary\">* Se muestran {data.length} resultados</p>\n\t\t\t<div className=\"d-flex justify-content-center align-items-center flex-row\">\n\t\t\t\t<Pagination>\n\t\t\t\t\t{indices.map((item, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Pagination.Item\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tactive={index === currentPage}\n\t\t\t\t\t\t\t\tonClick={() => setCurrentPage(index)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t\t</Pagination.Item>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Pagination>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nconst Description = () => (\n\t<div id=\"description\" className=\"col-md-7 pt-3\">\n\t\t<h1>Manifiesto de Órdenes de Teloentrego</h1>\n\t\t<p>\n\t\t\tBienvenido a la página del manifiesto de pedidos de Teloentrego. Aquí podrá ver todos los pedidos que están\n\t\t\tguardados actualmente en el registro y verlos.\n\t\t</p>\n\t\t<p>También puede filtrar estos resultados según el parámetro de filtro que desee.</p>\n\t</div>\n);\n\nconst DateForm = ({ onDateChange }) => (\n\t<div className=\"col-md-5 pt-3\">\n\t\t<h4>Filtrar Por Fecha</h4>\n\t\t<div className=\"input-group\">\n\t\t\t<select onChange={onDateChange} className=\"custom-select\" id=\"month\">\n\t\t\t\t{Months.map((month, index) => (\n\t\t\t\t\t<option key={index} value={month.value}>\n\t\t\t\t\t\t{month.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<select onChange={onDateChange} className=\"custom-select\" id=\"day\">\n\t\t\t\t{Days.map((day, index) => (\n\t\t\t\t\t<option key={index} value={day}>\n\t\t\t\t\t\t{day}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<select onChange={onDateChange} className=\"custom-select\" id=\"year\">\n\t\t\t\t{Years.map((year, index) => (\n\t\t\t\t\t<option key={index} value={year}>\n\t\t\t\t\t\t{year}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t</div>\n\t</div>\n);\n\nexport default Index;\n","/Users/solorzke/Documents/Developer/express-hub/src/components/Placeholders/LoadingPage.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/TableHeadings.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/Dates.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/components/Paths/Paths.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/data/Location.js",[],"/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Form.js",["282","283"],"import React, { useState, useEffect, useRef } from 'react';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport Toast from '../../components/Toast/Toast';\nimport LoadingPage from '../../components/Placeholders/LoadingPage';\nimport Editor from '../../components/TextEditor/Editor';\nimport Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { Config } from '../../data/Config';\nimport { Breadcrumb } from 'react-bootstrap';\n\nFirebase.apps.length === 0 ? Firebase.initializeApp(Config) : Firebase.app();\n\nconst Form = () => <Wrapper children={<Body />} active=\"quotes\" current=\"Quotes\" />;\n\nconst Body = () => {\n\tlet clientRef = useRef(null);\n\tlet itemRef = useRef(null);\n\tlet priceRef = useRef(null);\n\tlet costRef = useRef(null);\n\tlet value = '';\n\tconst [ clients, setClients ] = useState(null);\n\t//State data that control the toast message\n\tconst [ toast, setToast ] = useState(false);\n\tconst [ img, setImg ] = useState('fas fa-spinner fa-pulse');\n\tconst [ message, setMessage ] = useState('Saving Quote...');\n\tconst [ heading, setHeading ] = useState('Processing');\n\n\tuseEffect(() => {\n\t\tif (clients === null) getClients();\n\t}, []);\n\n\t//Get a list of clients from the firestore collection 'clients' and update that to the state\n\tconst getClients = async () => {\n\t\ttry {\n\t\t\tconst snapshot = await Firebase.firestore().collection('clients').get();\n\t\t\tlet results = [];\n\t\t\tsnapshot.forEach((doc) => results.push(doc.data()));\n\t\t\tsetClients(results);\n\t\t\tconsole.log('> Firebase: all clients fetched.');\n\t\t\treturn results;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\t//Submit the data to firestore\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tsetToast(true);\n\t\t\tawait Firebase.firestore().collection('quotes').add({\n\t\t\t\tclient: clientRef.current.selectedOptions[0].value,\n\t\t\t\titem: itemRef.current.value,\n\t\t\t\t'quoted-price': priceRef.current.value,\n\t\t\t\tcost: costRef.current.value,\n\t\t\t\tnotes: value\n\t\t\t});\n\t\t\tconsole.log('> Firebase: quote added successfully!');\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-check-circle toast-success',\n\t\t\t\t'Quote Saved!',\n\t\t\t\t`Your quote was saved!`,\n\t\t\t\t'> Firebase: quote added successfully!',\n\t\t\t\ttrue\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tsetToastProps(\n\t\t\t\t'fas fa-window-close toast-fail',\n\t\t\t\t'Failed',\n\t\t\t\t`Quote couldn't be saved!`,\n\t\t\t\t`> Firebase: Error couldnt send request.`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\n\t//Set the state for the toast props\n\tconst setToastProps = (toastImg, toastHeading, toastMessage, log, action) => {\n\t\tsetImg(toastImg);\n\t\tsetHeading(toastHeading);\n\t\tsetMessage(toastMessage);\n\t\tconsole.log(log);\n\t\tsetTimeout(() => {\n\t\t\tif (action) window.location.href = '/quotes';\n\t\t\tsetToast(false);\n\t\t\tsetImg('fas fa-spinner fa-pulse');\n\t\t\tsetHeading('Processing');\n\t\t\tsetMessage('Saving Quote...');\n\t\t\tconsole.log('Toast Props set to normal.');\n\t\t}, 3000);\n\t};\n\n\t//Format the selected names to first letter uppercase followed by lowercase\n\tconst formatName = (str = '') => {\n\t\treturn str.split(' ').map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n\t};\n\n\tconst getTodaysDate = () => {\n\t\tconst today = new Date();\n\t\tlet day = today.getDate();\n\t\tlet month = today.getMonth() + 1;\n\t\tlet year = today.getFullYear();\n\t\tday = day < 10 ? `0${day}` : day;\n\t\tmonth = month < 10 ? `0${month}` : month;\n\t\treturn `${month}/${day}/${year}`;\n\t};\n\n\tconst setText = (data) => (value = data);\n\n\tif (clients === null) return <LoadingPage />;\n\treturn (\n\t\t<main className=\"mt-3 px-2\">\n\t\t\t<Toast\n\t\t\t\tonClose={() => setToast(false)}\n\t\t\t\tshow={toast}\n\t\t\t\tmessage={message}\n\t\t\t\theading={heading}\n\t\t\t\timg={<i className={`${img} p-3`} />}\n\t\t\t/>\n\t\t\t<Paths />\n\t\t\t<div className=\"container\">\n\t\t\t\t<Description />\n\t\t\t\t<QuoteForm\n\t\t\t\t\tdata={clients}\n\t\t\t\t\tformatName={formatName.bind(this)}\n\t\t\t\t\tonTextEditorChange={setText.bind(this)}\n\t\t\t\t\tonSubmit={onSubmit.bind(this)}\n\t\t\t\t\trefs={{\n\t\t\t\t\t\tclients: clientRef,\n\t\t\t\t\t\titem: itemRef,\n\t\t\t\t\t\tprice: priceRef,\n\t\t\t\t\t\tcost: costRef\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nconst Description = () => (\n\t<div className=\"description text-center\">\n\t\t<h1>Add New Quote</h1>\n\t\t<div className=\"justify-content-center align-items-center d-flex\">\n\t\t\t<p className=\"w-50\">\n\t\t\t\tAdd a new quote to an existing client in the system. Please provide information such as the name of the\n\t\t\t\tquoted item, quoted price, its cost, and a link to that item if possible.\n\t\t\t</p>\n\t\t</div>\n\t</div>\n);\n\nconst QuoteForm = ({ onSubmit, refs, data, formatName, onTextEditorChange }) => (\n\t<form onSubmit={onSubmit}>\n\t\t<ClientsPicker refs={refs} data={data} formatName={formatName} />\n\t\t<Item refs={refs} />\n\t\t<QuotedPrice refs={refs} />\n\t\t<Cost refs={refs} />\n\t\t<TextEditor setText={onTextEditorChange} />\n\t\t<ConfirmButtons />\n\t</form>\n);\n\nconst ClientsPicker = ({ refs, data, formatName }) => (\n\t<div className=\"form-group\">\n\t\t<label htmlFor=\"clients\">Clients</label>\n\t\t<select id=\"clients\" ref={refs.clients} className=\"custom-select\" required>\n\t\t\t<option value=\"\" disabled selected>\n\t\t\t\tSelect a client\n\t\t\t</option>\n\t\t\t{data.map((item, index) => {\n\t\t\t\tlet fname = formatName(item.fname);\n\t\t\t\tlet lname = formatName(item.lname);\n\t\t\t\tlet full_name = `${fname} ${lname}`;\n\t\t\t\treturn (\n\t\t\t\t\t<option value={item.id} key={index}>\n\t\t\t\t\t\t{full_name}\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t})}\n\t\t</select>\n\t</div>\n);\n\nconst Item = ({ refs }) => (\n\t<div className=\"form-group\">\n\t\t<label htmlFor=\"item\">Item</label>\n\t\t<input required ref={refs.item} type=\"text\" className=\"form-control\" id=\"item\" placeholder=\"Enter an item\" />\n\t</div>\n);\n\nconst QuotedPrice = ({ refs }) => (\n\t<div className=\"form-group row\">\n\t\t<label className=\"col-sm-2 pt-2\" htmlFor=\"quoted-price\">\n\t\t\tQuoted Price: $\n\t\t</label>\n\t\t<input\n\t\t\trequired\n\t\t\tref={refs.price}\n\t\t\ttype=\"number\"\n\t\t\tstep=\"any\"\n\t\t\tmin=\"1\"\n\t\t\tid=\"quoted-price\"\n\t\t\tclassName=\"form-control col-sm-1\"\n\t\t\tstyle={{ width: '10%' }}\n\t\t\tplaceholder=\"0.00\"\n\t\t/>\n\t</div>\n);\n\nconst Cost = ({ refs }) => (\n\t<div className=\"form-group row\">\n\t\t<label htmlFor=\"cost\" className=\"col-sm-2 pt-2\">\n\t\t\tCost: $\n\t\t</label>\n\t\t<input\n\t\t\trequired\n\t\t\tref={refs.cost}\n\t\t\ttype=\"number\"\n\t\t\tstep=\"any\"\n\t\t\tmin=\"1\"\n\t\t\tid=\"cost\"\n\t\t\tclassName=\"form-control col-sm-1\"\n\t\t\tstyle={{ width: '10%' }}\n\t\t\tplaceholder=\"0.00\"\n\t\t/>\n\t</div>\n);\n\nconst TextEditor = ({ setText }) => (\n\t<div id=\"editor\">\n\t\t<h3 className=\"py-3\">Notes</h3>\n\t\t<div className=\"form-group row\">\n\t\t\t<div className=\"col-md-12\">\n\t\t\t\t<Editor onChange={setText} />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nconst ConfirmButtons = () => (\n\t<div className=\"form-group row\">\n\t\t<div className=\"col-md d-flex justify-content-end align-items-center\">\n\t\t\t<a href=\"/quotes\" className=\"mr-2 btn btn-md btn-secondary\">\n\t\t\t\tCancel\n\t\t\t</a>\n\t\t\t<input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" id=\"btn-modal\" />\n\t\t</div>\n\t</div>\n);\n\nconst Paths = () => {\n\tconst onClick = (e, path) => {\n\t\te.preventDefault();\n\t\tconst message = 'Are you sure you want to head back? All unsubmitted information here will be lost.';\n\t\tif (window.confirm(message)) window.location.href = path;\n\t};\n\treturn (\n\t\t<Breadcrumb>\n\t\t\t<Breadcrumb.Item href=\"/quotes\" onClick={(e) => onClick(e, '/quotes')}>\n\t\t\t\tHome\n\t\t\t</Breadcrumb.Item>\n\t\t\t<Breadcrumb.Item active>Add New Quote</Breadcrumb.Item>\n\t\t</Breadcrumb>\n\t);\n};\n\nexport default Form;\n","/Users/solorzke/Documents/Developer/express-hub/src/pages/Quotes/Index.js",[],{"ruleId":"284","severity":1,"message":"285","line":19,"column":8,"nodeType":"286","messageId":"287","endLine":19,"endColumn":18},{"ruleId":"284","severity":1,"message":"288","line":20,"column":8,"nodeType":"286","messageId":"287","endLine":20,"endColumn":19},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":60,"column":8,"nodeType":"295","endLine":60,"endColumn":51},{"ruleId":"289","replacedBy":"296"},{"ruleId":"291","replacedBy":"297"},{"ruleId":"289","replacedBy":"298"},{"ruleId":"291","replacedBy":"299"},{"ruleId":"289","replacedBy":"300"},{"ruleId":"291","replacedBy":"301"},{"ruleId":"289","replacedBy":"302"},{"ruleId":"291","replacedBy":"303"},{"ruleId":"304","severity":1,"message":"305","line":26,"column":5,"nodeType":"306","endLine":26,"endColumn":7,"suggestions":"307"},{"ruleId":"304","severity":1,"message":"308","line":22,"column":3,"nodeType":"306","endLine":22,"endColumn":17,"suggestions":"309"},{"ruleId":"293","severity":1,"message":"294","line":85,"column":10,"nodeType":"295","endLine":85,"endColumn":86},{"ruleId":"289","replacedBy":"310"},{"ruleId":"291","replacedBy":"311"},{"ruleId":"289","replacedBy":"312"},{"ruleId":"291","replacedBy":"313"},{"ruleId":"293","severity":1,"message":"294","line":106,"column":4,"nodeType":"295","endLine":106,"endColumn":39},{"ruleId":"293","severity":1,"message":"294","line":138,"column":6,"nodeType":"295","endLine":138,"endColumn":101},{"ruleId":"314","severity":1,"message":"315","line":153,"column":43,"nodeType":"316","endLine":153,"endColumn":58},{"ruleId":"289","replacedBy":"317"},{"ruleId":"291","replacedBy":"318"},{"ruleId":"289","replacedBy":"319"},{"ruleId":"291","replacedBy":"320"},{"ruleId":"289","replacedBy":"321"},{"ruleId":"291","replacedBy":"322"},{"ruleId":"304","severity":1,"message":"323","line":37,"column":5,"nodeType":"306","endLine":37,"endColumn":7,"suggestions":"324"},{"ruleId":"325","severity":1,"message":"326","line":67,"column":37,"nodeType":"327","messageId":"328","endLine":67,"endColumn":38,"suggestions":"329"},{"ruleId":"325","severity":1,"message":"326","line":81,"column":37,"nodeType":"327","messageId":"328","endLine":81,"endColumn":38,"suggestions":"330"},{"ruleId":"325","severity":1,"message":"326","line":134,"column":37,"nodeType":"327","messageId":"328","endLine":134,"endColumn":38,"suggestions":"331"},{"ruleId":"304","severity":1,"message":"332","line":47,"column":3,"nodeType":"306","endLine":47,"endColumn":15,"suggestions":"333"},{"ruleId":"314","severity":1,"message":"315","line":336,"column":62,"nodeType":"316","endLine":336,"endColumn":77},{"ruleId":"293","severity":1,"message":"294","line":337,"column":7,"nodeType":"295","endLine":337,"endColumn":85},{"ruleId":"314","severity":1,"message":"315","line":371,"column":24,"nodeType":"316","endLine":371,"endColumn":39},{"ruleId":"293","severity":1,"message":"294","line":29,"column":10,"nodeType":"295","endLine":29,"endColumn":86},{"ruleId":"289","replacedBy":"334"},{"ruleId":"291","replacedBy":"335"},{"ruleId":"284","severity":1,"message":"336","line":2,"column":8,"nodeType":"286","messageId":"287","endLine":2,"endColumn":13},{"ruleId":"289","replacedBy":"337"},{"ruleId":"291","replacedBy":"338"},{"ruleId":"304","severity":1,"message":"339","line":42,"column":3,"nodeType":"306","endLine":42,"endColumn":38,"suggestions":"340"},{"ruleId":"341","severity":1,"message":"342","line":85,"column":34,"nodeType":"343","messageId":"344","endLine":85,"endColumn":36},{"ruleId":"293","severity":1,"message":"294","line":503,"column":5,"nodeType":"295","endLine":503,"endColumn":101},{"ruleId":"289","replacedBy":"345"},{"ruleId":"291","replacedBy":"346"},{"ruleId":"293","severity":1,"message":"294","line":109,"column":3,"nodeType":"295","endLine":109,"endColumn":66},{"ruleId":"284","severity":1,"message":"347","line":18,"column":10,"nodeType":"286","messageId":"287","endLine":18,"endColumn":14},{"ruleId":"304","severity":1,"message":"348","line":28,"column":5,"nodeType":"306","endLine":28,"endColumn":7,"suggestions":"349"},{"ruleId":"293","severity":1,"message":"294","line":60,"column":7,"nodeType":"295","endLine":60,"endColumn":50},{"ruleId":"304","severity":1,"message":"350","line":26,"column":3,"nodeType":"306","endLine":26,"endColumn":39,"suggestions":"351"},{"ruleId":"352","severity":1,"message":"353","line":61,"column":3,"nodeType":"354","messageId":"355","endLine":90,"endColumn":4},{"ruleId":"352","severity":1,"message":"353","line":161,"column":3,"nodeType":"354","messageId":"355","endLine":171,"endColumn":4},{"ruleId":"352","severity":1,"message":"353","line":190,"column":3,"nodeType":"354","messageId":"355","endLine":196,"endColumn":4},{"ruleId":"304","severity":1,"message":"356","line":30,"column":5,"nodeType":"306","endLine":30,"endColumn":7,"suggestions":"357"},{"ruleId":"284","severity":1,"message":"358","line":99,"column":8,"nodeType":"286","messageId":"287","endLine":99,"endColumn":21},"no-unused-vars","'QuotesForm' is defined but never used.","Identifier","unusedVar","'QuotesIndex' is defined but never used.","no-native-reassign",["359"],"no-negated-in-lhs",["360"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["359"],["360"],["359"],["360"],["359"],["360"],["359"],["360"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'CLIENTS'. Either include it or remove the dependency array.","ArrayExpression",["361"],"React Hook useEffect has missing dependencies: 'itemKey' and 'onFilesChange'. Either include them or remove the dependency array. If 'onFilesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["362"],["359"],["360"],["359"],["360"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["359"],["360"],["359"],["360"],["359"],["360"],"React Hook useEffect has missing dependencies: 'getClient', 'getOrders', and 'id'. Either include them or remove the dependency array.",["363"],"no-useless-escape","Unnecessary escape character: \\'.","TemplateElement","unnecessaryEscape",["364","365"],["366","367"],["368","369"],"React Hook useEffect has missing dependencies: 'QUERY' and 'getOrder'. Either include them or remove the dependency array.",["370"],["359"],["360"],"'Input' is defined but never used.",["359"],["360"],"React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["371"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["359"],["360"],"'mode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'QUERY'. Either include it or remove the dependency array.",["372"],"React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["373"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'clients'. Either include it or remove the dependency array.",["374"],"'getTodaysDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"messageId":"381","fix":"382","desc":"383"},{"messageId":"384","fix":"385","desc":"386"},{"messageId":"381","fix":"387","desc":"383"},{"messageId":"384","fix":"388","desc":"386"},{"messageId":"381","fix":"389","desc":"383"},{"messageId":"384","fix":"390","desc":"386"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},"Update the dependencies array to be: [CLIENTS]",{"range":"401","text":"402"},"Update the dependencies array to be: [files, avi, onFilesChange, itemKey]",{"range":"403","text":"404"},"Update the dependencies array to be: [getClient, getOrders, id]",{"range":"405","text":"406"},"removeEscape",{"range":"407","text":"408"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"409","text":"410"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"411","text":"408"},{"range":"412","text":"410"},{"range":"413","text":"408"},{"range":"414","text":"410"},"Update the dependencies array to be: [QUERY, UPDATING, getOrder]",{"range":"415","text":"416"},"Update the dependencies array to be: [ORDER, ITEMS, PROMPT, PROMPTKEY, getOrder]",{"range":"417","text":"418"},"Update the dependencies array to be: [QUERY]",{"range":"419","text":"420"},"Update the dependencies array to be: [ORDERS, CLIENTS, FILTERED_ORDERS, getOrders]",{"range":"421","text":"422"},"Update the dependencies array to be: [clients]",{"range":"423","text":"424"},[877,879],"[CLIENTS]",[902,916],"[files, avi, onFilesChange, itemKey]",[1527,1529],"[getClient, getOrders, id]",[2540,2541],"",[2540,2540],"\\",[2991,2992],[2991,2991],[5016,5017],[5016,5016],[2022,2034],"[QUERY, UPDATING, getOrder]",[1791,1826],"[ORDER, ITEMS, PROMPT, PROMPTKEY, getOrder]",[1015,1017],"[QUERY]",[886,922],"[ORDERS, CLIENTS, FILTERED_ORDERS, getOrders]",[1154,1156],"[clients]"]